   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_GPIO_SetOutputHigh:
  23              	.LFB52:
  24              	 .file 1 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** {
  25              	 .loc 1 257 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 0A1C     	 mov r2,r1
  40 000a FB1C     	 add r3,r7,#3
  41 000c 1A70     	 strb r2,[r3]
 258:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  42              	 .loc 1 260 0
  43 000e FB1C     	 add r3,r7,#3
  44 0010 1B78     	 ldrb r3,[r3]
  45 0012 0122     	 mov r2,#1
  46 0014 9A40     	 lsl r2,r2,r3
  47 0016 7B68     	 ldr r3,[r7,#4]
  48 0018 5A60     	 str r2,[r3,#4]
 261:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** }
  49              	 .loc 1 261 0
  50 001a BD46     	 mov sp,r7
  51 001c 02B0     	 add sp,sp,#8
  52              	 
  53 001e 80BD     	 pop {r7,pc}
  54              	 .cfi_endproc
  55              	.LFE52:
  57              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  58              	 .align 2
  59              	 .code 16
  60              	 .thumb_func
  62              	XMC_GPIO_SetOutputLow:
  63              	.LFB53:
 262:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** {
  64              	 .loc 1 283 0
  65              	 .cfi_startproc
  66 0000 80B5     	 push {r7,lr}
  67              	.LCFI3:
  68              	 .cfi_def_cfa_offset 8
  69              	 .cfi_offset 7,-8
  70              	 .cfi_offset 14,-4
  71 0002 82B0     	 sub sp,sp,#8
  72              	.LCFI4:
  73              	 .cfi_def_cfa_offset 16
  74 0004 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77 0006 7860     	 str r0,[r7,#4]
  78 0008 0A1C     	 mov r2,r1
  79 000a FB1C     	 add r3,r7,#3
  80 000c 1A70     	 strb r2,[r3]
 284:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  81              	 .loc 1 286 0
  82 000e FB1C     	 add r3,r7,#3
  83 0010 1B78     	 ldrb r3,[r3]
  84 0012 8022     	 mov r2,#128
  85 0014 5202     	 lsl r2,r2,#9
  86 0016 9A40     	 lsl r2,r2,r3
  87 0018 7B68     	 ldr r3,[r7,#4]
  88 001a 5A60     	 str r2,[r3,#4]
 287:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** }
  89              	 .loc 1 287 0
  90 001c BD46     	 mov sp,r7
  91 001e 02B0     	 add sp,sp,#8
  92              	 
  93 0020 80BD     	 pop {r7,pc}
  94              	 .cfi_endproc
  95              	.LFE53:
  97 0022 C046     	 .section .text.XMC_GPIO_ToggleOutput,"ax",%progbits
  98              	 .align 2
  99              	 .code 16
 100              	 .thumb_func
 102              	XMC_GPIO_ToggleOutput:
 103              	.LFB54:
 288:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** {
 104              	 .loc 1 309 0
 105              	 .cfi_startproc
 106 0000 80B5     	 push {r7,lr}
 107              	.LCFI6:
 108              	 .cfi_def_cfa_offset 8
 109              	 .cfi_offset 7,-8
 110              	 .cfi_offset 14,-4
 111 0002 82B0     	 sub sp,sp,#8
 112              	.LCFI7:
 113              	 .cfi_def_cfa_offset 16
 114 0004 00AF     	 add r7,sp,#0
 115              	.LCFI8:
 116              	 .cfi_def_cfa_register 7
 117 0006 7860     	 str r0,[r7,#4]
 118 0008 0A1C     	 mov r2,r1
 119 000a FB1C     	 add r3,r7,#3
 120 000c 1A70     	 strb r2,[r3]
 310:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 121              	 .loc 1 312 0
 122 000e FB1C     	 add r3,r7,#3
 123 0010 1B78     	 ldrb r3,[r3]
 124 0012 034A     	 ldr r2,.L4
 125 0014 9A40     	 lsl r2,r2,r3
 126 0016 7B68     	 ldr r3,[r7,#4]
 127 0018 5A60     	 str r2,[r3,#4]
 313:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** }
 128              	 .loc 1 313 0
 129 001a BD46     	 mov sp,r7
 130 001c 02B0     	 add sp,sp,#8
 131              	 
 132 001e 80BD     	 pop {r7,pc}
 133              	.L5:
 134              	 .align 2
 135              	.L4:
 136 0020 01000100 	 .word 65537
 137              	 .cfi_endproc
 138              	.LFE54:
 140              	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
 141              	 .align 2
 142              	 .code 16
 143              	 .thumb_func
 145              	XMC_GPIO_GetInput:
 146              	.LFB55:
 314:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 315:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 316:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 317:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 318:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 319:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 320:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 321:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 323:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 324:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 326:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 327:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 328:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 329:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 330:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 331:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 332:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 333:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 334:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** {
 147              	 .loc 1 334 0
 148              	 .cfi_startproc
 149 0000 80B5     	 push {r7,lr}
 150              	.LCFI9:
 151              	 .cfi_def_cfa_offset 8
 152              	 .cfi_offset 7,-8
 153              	 .cfi_offset 14,-4
 154 0002 82B0     	 sub sp,sp,#8
 155              	.LCFI10:
 156              	 .cfi_def_cfa_offset 16
 157 0004 00AF     	 add r7,sp,#0
 158              	.LCFI11:
 159              	 .cfi_def_cfa_register 7
 160 0006 7860     	 str r0,[r7,#4]
 161 0008 0A1C     	 mov r2,r1
 162 000a FB1C     	 add r3,r7,#3
 163 000c 1A70     	 strb r2,[r3]
 335:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 336:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** 
 337:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 164              	 .loc 1 337 0
 165 000e 7B68     	 ldr r3,[r7,#4]
 166 0010 5A6A     	 ldr r2,[r3,#36]
 167 0012 FB1C     	 add r3,r7,#3
 168 0014 1B78     	 ldrb r3,[r3]
 169 0016 DA40     	 lsr r2,r2,r3
 170 0018 131C     	 mov r3,r2
 171 001a 0122     	 mov r2,#1
 172 001c 1340     	 and r3,r2
 338:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_gpio.h **** }
 173              	 .loc 1 338 0
 174 001e 181C     	 mov r0,r3
 175 0020 BD46     	 mov sp,r7
 176 0022 02B0     	 add sp,sp,#8
 177              	 
 178 0024 80BD     	 pop {r7,pc}
 179              	 .cfi_endproc
 180              	.LFE55:
 182 0026 C046     	 .section .text.I2C_MASTER_TransmitByte,"ax",%progbits
 183              	 .align 2
 184              	 .code 16
 185              	 .thumb_func
 187              	I2C_MASTER_TransmitByte:
 188              	.LFB140:
 189              	 .file 2 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER/i2c_master.h"
   1:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
   2:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @file i2c_master.h
   3:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @date 2015-10-20
   4:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
   5:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * NOTE:
   6:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * regenerated.
   8:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
   9:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
  10:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @cond
  11:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  12:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER v4.1.18 Configures USIC channel to transmit & receive data using I2C protocol.
  13:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  14:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  15:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * All rights reserved.
  16:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  17:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following conditions are met:
  19:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  20:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  21:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * disclaimer.
  22:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  23:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  24:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following disclaimer in the documentation and/or other materials provided with the distribution.
  25:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  26:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  27:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * products derived from this software without specific prior written permission.
  28:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  29:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  37:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  40:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  41:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Change History
  42:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * --------------
  43:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  44:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-02-16:
  45:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Initial version<br>
  46:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  47:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-06-10:
  48:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  49:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  50:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-08-31:
  51:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - DMA support APIs added
  52:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-10-20:
  53:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Code snippets updated
  54:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2016-08-18:
  55:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Documentation of slave address formatting improved.
  56:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcond
  57:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  58:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
  59:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  60:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifndef I2C_MASTER_H
  61:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_H
  62:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  63:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  64:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  65:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  66:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * HEADER FILES
  67:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  68:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #include <xmc_gpio.h>
  69:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #include <xmc_i2c.h>
  70:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "i2c_master_conf.h"
  71:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  72:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #if(UC_FAMILY == XMC4)
  73:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
  74:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "GLOBAL_DMA/global_dma.h"
  75:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  76:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  77:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  78:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #include <DAVE_Common.h>
  79:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  80:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  81:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef void(*i2c_master_fptr_cbhandler)(void);
  82:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  83:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  84:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * MACROS
  85:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  86:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  87:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  88:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  89:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #error "I2C_MASTER requires XMC Peripheral Library v2.0.0 or higher"
  90:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  91:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  92:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  93:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * ENUMS
  94:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  95:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
  96:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_enumerations
  97:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
  98:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
  99:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 100:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Initialization status.
 101:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 102:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_STATUS
 103:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 104:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_SUCCESS = 0U,           /*!< I2C_MASTER SUCCESS */
 105:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_FAILURE = 1U,           /*!< I2C_MASTER FAILURE */
 106:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_BUSY = 2U,              /*!< I2C_MASTER BUSY */
 107:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_UNSUPPORTED_MODE = 3U   /*!< I2C_MASTER UNSUPPORTED MODE */
 108:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_STATUS_t;
 109:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 110:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 111:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Direction
 112:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 113:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_DIRECTION
 114:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 115:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_TRANSMIT = 0U,   /*!< Direction indicates transmit */
 116:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_RECEIVE = 1U     /*!< Direction indicates receive */
 117:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DIRECTION_t;
 118:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 119:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 120:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 121:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 122:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_TRANSFER_MODE
 123:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 124:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 125:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 126:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 127:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_TRANSFER_MODE_t;
 128:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 129:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 130:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 131:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 132:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** * DATA STRUCTURES
 133:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** ***************************************************************************************************
 134:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 135:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 136:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_datastructures
 137:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 138:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 139:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 140:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure for DMA configuration.
 141:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 142:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
 143:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_DMA_CONFIG
 144:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 145:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   const XMC_DMA_CH_CONFIG_t * dma_ch_config;   /**< Pointer to the DMA channel configuration.*/
 146:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   GLOBAL_DMA_t * global_dma;                   /**< Global DMA handle */
 147:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t dma_channel;                         /**< DMA channel number */
 148:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DMA_CONFIG_t;
 149:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 150:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 151:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Constant structure for holding the configuration parameters of I2C channel.
 152:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 153:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_CONFIG
 154:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 155:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    const XMC_I2C_CH_CONFIG_t *brg_config;             /*!< Basic I2C configuration from the GUI wit
 156:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 157:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const transmit_dma_config; /**< Pointer to the DMA channel confi
 158:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data transmission.*/
 159:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 160:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 161:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const receive_dma_config;  /**< Pointer to the DMA channel confi
 162:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data reception.*/
 163:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 164:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_config;         /*!< Function pointer to configure the MUX va
 165:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler tx_cbhandler;            /*!< Function pointer to hold the callback fu
 166:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the transmission is complete
 167:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler rx_cbhandler;            /*!< Function pointer to hold the callback fu
 168:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the reception is complete*/
 169:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler nack_cbhandler;          /*!< Function pointer to hold the callback fu
 170:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when nack is received*/
 171:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler arbitration_cbhandler;   /*!< Function pointer to hold the callback fu
 172:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when arbitration lost is occured*
 173:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler error_cbhandler;         /*!< Function pointer to hold the callback fu
 174:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when error is detected.*/
 175:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t transmit_mode;          /**< Mode used for transmitting data. Data ca
 176:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 177:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t receive_mode;           /**< Mode used for receiving data. Data can b
 178:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 179:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 180:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t txFIFO_size;               /*!< TxFIFO size configuration*/
 181:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t rxFIFO_size;               /*!< RxFIFO size configuration*/
 182:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 183:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_CONFIG_t;
 184:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 185:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 186:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure to hold the dynamic variables for the I2C_MASTER communication.
 187:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 188:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_RUNTIME
 189:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 190:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * tx_data;                     /*!< Pointer to the transmit data buffer*/
 191:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * rx_data;                     /*!< Pointer to the receive data buffer*/
 192:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t tx_data_count;                /*!< Number of bytes of data to be transmitted*/
 193:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t tx_data_index;       /*!< Index to the byte to be transmitted next in the tx_da
 194:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_data_count;                /*!< Number of bytes of data to be received*/
 195:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 196:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_count;            /*!< Number of bytes of data to be received-DMA mode*/
 197:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_index;            /*!< Index of bytes of data to be received-DMA mode*/
 198:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 199:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t rx_data_index;       /*!< Indicates the number of bytes currently available in 
 200:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t direction;           /*!< Indicates TRANSMIT/RECEIVE */
 201:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_stop;                    /*!< Indicates to stop the I2C */
 202:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_nack;                    /*!< Indicates to send nack */
 203:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t tx_ack_sr;                         /*!< Service request number assigned to transmit inter
 204:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t rx_sr;                         /*!< Service request number assigned to receive interrupts
 205:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool tx_busy;                 /*!< Status flag to indicate busy when a transmission is a
 206:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool rx_busy;                 /*!< Status flag to indicate busy when a reception is assi
 207:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool bus_acquired;            /*!< flag to indicate whether bus is acquired or not */
 208:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_RUNTIME_t;
 209:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 210:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 211:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 212:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Handler structure with pointers to dynamic and static parameters.
 213:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 214:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER
 215:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 216:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_t *channel;                    /*!< USIC channel*/
 217:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   const I2C_MASTER_CONFIG_t * const config;  /*!< I2C configuration structure pointer*/
 218:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_RUNTIME_t * const runtime;      /*!< Pointer to the structure holding all variables,
 219:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****    	                                               that can change at runtime*/
 220:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_t;
 221:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 222:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 223:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 224:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 225:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 226:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifdef __cplusplus
 227:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** extern "C" {
 228:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 229:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 230:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 231:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 232:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_apidoc
 233:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 234:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 235:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 236:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 237:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * API PROTOTYPES
 238:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
 239:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 240:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get I2C_MASTER APP version.
 241:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return \a DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 242:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 243:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 244:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function can be used to check application software compatibility with a
 245:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * specific version of the APP.
 246:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 247:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 248:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 249:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 250:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 251:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 252:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_APP_VERSION_t version;
 253:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_Init();
 254:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    version = I2C_MASTER_GetAppVersion();
 255:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(version.major != 4U)
 256:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 257:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 258:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 259:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 260:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 261:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 262:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 263:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 264:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void);
 265:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 266:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief This function initializes the I2C_MASTER APP based on user provided configuration.
 267:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 268:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
 269:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 270:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 271:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C configurations like channel selection,baud rate setting,
 272:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * FIFO configuration etc are done in this API.
 273:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Protocol specific interrupts can also be enabled using the I2C_MASTER_Init
 274:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function.
 275:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 276:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 277:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 278:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 279:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 280:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 281:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 282:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   // Initializing the modules and the multiplexer
 283:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_Init(); // I2C_MASTER_Init will be called from DAVE_Init()
 284:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 285:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {}
 286:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 287:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 288:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 289:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 290:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 291:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 292:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle);
 293:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 294:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 295:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 296:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief  Receives the data from I2C slave device.
 297:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 298:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start Flag to indicate that the start condition need to be send.
 299:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 300:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer to receive data.
 301:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count The number of bytes to be received from slave.
 302:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 303:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack The flag to indicate that the NACK condition need to be send for the last byte
 304:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 305:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 306:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Receive API can be used in Interrupt and Direct modes.\n
 307:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 308:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 309:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 310:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).\n
 311:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 312:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 313:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 314:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 315:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 316:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 317:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_READ 10
 318:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
 319:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 320:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 321:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 322:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 323:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 324:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 325:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 326:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 327:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 328:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t data = 0x55;
 329:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_data;
 330:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 331:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 332:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 333:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;  
 334:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 335:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 336:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 337:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
 338:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 339:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 340:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 341:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 342:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
 343:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 344:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 345:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Read data from IO EXPANDER
 346:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 347:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 348:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 349:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
 350:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 351:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 352:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 353:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   { }
 354:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  return 0;
 355:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 356:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 357:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 358:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 359:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 360:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 361:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                        uint8_t * data, const uint32_t count, bool send_stop, bool s
 362:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 363:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 364:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits data to I2C slave device.
 365:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 366:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 367:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start The flag to indicate that the start condition need to be send.
 368:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 369:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer containing the data to transmit.
 370:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size The number of bytes to be send to slave.
 371:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 372:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 373:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 374:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 375:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Transmit API can be used in Interrupt and Direct modes.\n
 376:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 377:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 378:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 379:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write). \n
 380:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 381:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
 382:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 383:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 384:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 385:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 386:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 387:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 388:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 389:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 390:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 391:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 392:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 393:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 394:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 395:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 396:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 397:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 398:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 399:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 400:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 401:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 402:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
 403:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 404:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 405:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 406:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 407:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
 408:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 409:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 410:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 411:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 412:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 413:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 414:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 415:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 416:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 417:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 418:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 419:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 420:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                uint8_t *data, const uint32_t size, bool send_stop);
 421:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 422:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 423:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get the I2C flag status.
 424:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 425:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 426:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 427:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *			 	      bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be used to selec
 428:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 429:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 430:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t Flag status.
 431:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 432:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 433:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 434:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 435:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 436:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 437:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 438:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 439:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 440:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 441:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 442:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 443:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 444:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 445:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 446:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 447:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 448:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 449:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 450:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 451:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 452:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 453:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 454:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 455:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 456:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 457:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 458:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 459:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 460:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype);
 461:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 462:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 463:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Clear the I2C flag status.
 464:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 465:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 466:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 467:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    The bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be 
 468:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 469:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 470:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None <BR>
 471:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 472:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 473:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 474:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 475:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 476:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 477:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 478:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 479:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 480:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 481:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 482:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 483:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 484:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 485:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 486:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 487:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 488:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 489:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 490:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 491:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 492:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 493:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 494:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 495:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 496:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 497:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 498:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 499:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype);
 500:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 501:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 502:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Aborts the ongoing data transmission.
 503:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 504:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 505:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 506:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 507:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If there is a transmission in progress, it will be stopped. Once the transmission is stopped, 
 508:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * user can start a new transmission without delay.
 509:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 510:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 511:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 512:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 513:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 514:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 515:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 516:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 517:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 518:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buf[50] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
 519:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 520:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 521:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 522:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 523:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 524:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 525:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 526:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 527:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_AbortTransmit(&I2C_MASTER_0);
 528:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
 529:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 530:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 531:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 532:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
 533:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 534:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 535:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 536:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 537:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 538:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 539:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 540:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 541:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 542:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle);
 543:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 544:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 545:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** * @brief Stops the active data reception request.
 546:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 547:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 548:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 549:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 550:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a reception is in progress, it will be stopped. When a reception request
 551:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is active, user will not be able to place a new receive request till the active
 552:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception is complete. This API can stop the progressing reception to make
 553:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * a new receive request.
 554:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 555:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 556:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 557:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 558:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 559:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 560:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 561:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 562:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 563:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 564:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t rx_buf[25];
 565:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t tx_buf[2];
 566:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;
 567:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 568:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 569:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 570:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //send the address from which data to be transfered
 571:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     tx_buf[0] = 0;
 572:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 573:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 574:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 575:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_AbortReceive(&I2C_MASTER_0);
 576:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_SendStop(&I2C_MASTER_0);
 577:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 578:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 579:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 580:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 581:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 582:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
 583:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 584:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 585:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 586:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 1U;
 587:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 588:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 589:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 590:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 591:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 592:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle);
 593:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 594:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 595:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1U)
 596:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 597:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C channel using DMA.
 598:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 599:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 600:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  block_size size of the block
 601:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr    address\n
 602:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 603:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 604:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 605:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 606:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 607:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 608:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 609:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 610:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 611:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 612:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 613:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. The function uses AP
 614:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure to store the status of transmission.
 615:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 616:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens through DMA channel.
 617:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be transmitted in one API call. This limit is because of the DMA sin
 618:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 619:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 620:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 621:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the completion of data transmission.
 622:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 623:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * calls to this API.
 624:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 625:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_StartTransmitDMA API can be used in DMA mode.
 626:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "DMA" mode in advanced settings tab. \n
 627:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 628:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 629:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 630:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 631:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 632:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 633:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 634:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 635:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 636:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 637:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 638:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 639:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 640:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 641:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 642:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 643:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 644:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 645:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 646:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 647:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 648:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 649:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 650:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 651:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 652:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 653:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 654:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 655:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 656:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 657:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 658:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // trigger the DMA
 659:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitDMA(&I2C_MASTER_0, sizeof(Send_Data), Send_Data);
 660:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 661:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 662:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 663:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 664:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 665:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 666:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 667:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 668:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 669:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 670:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 671:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 672:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 673:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 674:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitDMA(const I2C_MASTER_t *const handle, uint32_t block_si
 675:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 676:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 677:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1U)
 678:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 679:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel using DMA.
 680:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 681:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 682:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 683:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param block_size  size of the block
 684:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr  address \n
 685:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 686:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 687:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 688:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 689:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 690:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 691:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 692:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 693:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed.
 694:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 695:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When all the requested number of data bytes are received, the configured callback function will 
 696:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, the user has to poll for the value of the variable, \a
 697:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * handle->runtime->rx_busy to be false. The value is updated to \a false when all the requested nu
 698:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * are received.
 699:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be received in one API call. This limit is because of the DMA single
 700:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 701:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveDMA API can be used only in DMA mode
 702:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "DMA" mode in advanced settings tab \n
 703:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 704:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 705:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 706:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 707:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 708:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 709:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 710:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 711:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 712:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 713:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Pre condition:
 714:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Transmit mode and receive mode should be configured to "DMA" in advanced settings tab
 715:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 716:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t ReadData[256];
 717:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 718:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 719:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 720:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 721:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 722:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 723:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 724:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 725:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 726:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 727:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 728:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 729:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 730:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 731:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 732:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 733:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 734:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 735:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 736:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 737:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
 738:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 739:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 740:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 741:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 742:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 743:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  
 744:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveDMA(&I2C_MASTER_0, 200, ReadData);
 745:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 746:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 747:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 748:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 749:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 750:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 751:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 752:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 753:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 754:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 755:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 756:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  @endcode
 757:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 758:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 759:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveDMA(const I2C_MASTER_t *const handle, uint32_t block_siz
 760:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 761:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 762:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1U)
 763:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 764:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C_MASTER channel.
 765:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 766:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 767:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 768:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 769:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 770:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size    number of bytes
 771:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition\n
 772:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum supported by uint32_t.
 773:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 774:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 775:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 776:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 777:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 778:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 779:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 780:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 781:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 782:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure a callback fu
 783:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. If transmit FIFO is 
 784:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the trigger limit is set to 1. So the transmit interrupt will be generated when all the data in 
 785:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * from FIFO. The function uses APP handle's runtime structure to store the data pointer, count, da
 786:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * status of transmission. This function only registers a data transmission request if there is no 
 787:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * in progress.
 788:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens in the transmit interrupt service routine. A trigger is generat
 789:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt to start loading the data. If transmit FIFO is configured, the data is filled into the
 790:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit interrupt will be generated next time when the transmit FIFO is empty. At this point of
 791:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * some more data to be transmitted, it is loaded to the FIFO again. When FIFO is not enabled, data
 792:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * byte at a time. On transmission of each byte an interrupt is generated and the next byte is tran
 793:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt service routine. Callback function is executed when all the data bytes are transmitted
 794:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of t
 795:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure( \a handle->runtime->tx_busy ) to check for the completion of data transmission.<br>
 796:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartTransmitIRQ API can be used only in Interrupt mode.
 797:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "Interrupt" mode in advanced settings tab.\n
 798:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 799:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 800:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 801:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 802:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 803:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 804:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 805:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 806:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 807:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 808:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 809:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 810:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 811:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 812:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 813:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 814:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 815:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 816:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 817:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 818:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 819:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 820:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 821:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,64,true);
 822:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 823:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 824:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 825:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 826:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 827:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 828:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 829:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 830:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 831:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 832:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 833:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 834:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 835:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 836:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 837:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1U)
 838:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 839:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel.
 840:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 841:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 842:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 843:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 844:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 845:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 846:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count    number of bytes
 847:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition
 848:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack flag to indicate the nack condition\n
 849:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum value supported by type uint32_t.
 850:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 851:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 852:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 853:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 854:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 855:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 856:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 857:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 858:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed. Based on the UI configuration, either standard re
 859:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * receive FIFO is used for data reception. An interrupt is configured for reading received data fr
 860:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function only registers a request to receive a number of data bytes from a USIC channel. If FIFO
 861:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.  When all
 862:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of data bytes are received, the configured callback function will be executed. If a callback fun
 863:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured, the user has to poll for the value of the variable, \a handle->runtime->rx_busy to b
 864:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is updated to \a false when all the requested number of data bytes are received.<br>
 865:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveIRQ API can be used only in Interrupt mode.
 866:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "Interrupt" mode in advanced settings tab.\n
 867:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 868:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 869:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 870:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 871:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 872:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 873:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 874:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
 875:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 876:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_buffer[64];
 877:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 878:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 879:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 880:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 881:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 882:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 883:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 884:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 885:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 886:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 887:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 888:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 889:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 890:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,rx_buffer,64,true, true);
 891:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 892:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 893:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 894:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 895:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 896:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 897:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 898:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 899:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 900:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 901:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 902:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                uint8_t * data, const uint32_t count, bool send_stop
 903:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 904:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 905:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 906:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 907:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the transmit FIFO event flags.
 908:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 909:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 910:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 911:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of the STBI and TBERI bits in TRBSR register in
 912:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      their bit positions.\n
 913:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t for the bitmask of event
 914:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 915:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 916:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function reads the value of TRBSR register. It masks the standard transmit buffer interrupt flag
 917:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * buffer error flag before providing the value.
 918:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * User has to mask the bits of interest before checking the status.
 919:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Enable transmit fifo in Advanced settings tab. <br>
 920:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 921:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 922:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 923:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 924:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 925:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 926:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 927:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 928:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 929:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 930:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 931:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 932:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 933:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 934:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
 935:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
 936:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 937:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 938:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
 939:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
 940:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
 941:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
 942:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
 943:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 944:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 945:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 946:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 947:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 948:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 949:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 950:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 951:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 952:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 953:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 954:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 955:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 956:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetTXFIFOStatus(const I2C_MASTER_t* const handle)
 957:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 958:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetTXFIFOStatus: invalid handle", (handle != NULL))
 959:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_GetEvent(handle->channel);
 960:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 961:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 962:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 963:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the transmit FIFO.
 964:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 965:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 966:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
 967:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of transmit FIFO filling level, transition below which the interrupt should 
 968:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to transmit FIFO size.\n
 969:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If transmit FIFO size is 16, and limit is configured as 8, FIFO standard tran
 970:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level drops from 8 to 7.\n
 971:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 972:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
 973:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 974:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 975:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO trigger limit is configured by setting its value in the TBCTR register.
 976:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO is configured to generate interrupt when the FIFO filling level drops
 977:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * below the trigger limit.
 978:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 979:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 980:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 981:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 982:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 983:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 984:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 985:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 986:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 987:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 988:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 989:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 990:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 991:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 992:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 993:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit, draining level as 10
 994:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
 995:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the interrupt handler as the limit is set to 10
 996:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, Send_Data, 16, true);
 997:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 998:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 999:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1000:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1001:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1002:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1003:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1004:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1005:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1006:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1007:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1008:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1009:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1010:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1011:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetTXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1012:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1013:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1014:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetTXFIFOTriggerLimit: invalid handle", (handle != NULL))
1015:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1016:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1017:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1018:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the receive FIFO.
1019:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1020:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1021:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
1022:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of receive FIFO filling level, transition above which the interrupt should b
1023:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to receive FIFO size.\n
1024:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If receive FIFO size is 16, and limit is configured as 8, FIFO receive buffer
1025:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level rises from 8 to 9.\n
1026:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1027:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1028:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1029:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1030:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO trigger limit is configured by setting its value in the RBCTR register.
1031:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO is configured to generate interrupt when the FIFO filling level rises
1032:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * above the trigger limit.
1033:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1034:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1035:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1036:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1037:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1038:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1039:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1040:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1041:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Rx_Data[256];
1042:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1043:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1044:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1045:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1046:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1047:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1048:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1049:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit to filling level as 10
1050:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1051:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the receive interrupt handler as the limit is set to 
1052:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, Rx_Data, 16, true, true);
1053:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
1054:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1055:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1056:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1057:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1058:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1059:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1060:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1061:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1062:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1063:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1064:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1065:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1066:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1067:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetRXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1068:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1069:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1070:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetRXFIFOTriggerLimit: invalid handle", (handle != NULL))
1071:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1072:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1073:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1074:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1075:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the transmit FIFO is full.
1076:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1077:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1078:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1079:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of transmit FIFO filling level.
1080:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if transmit FIFO is full.<br>
1081:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if transmit FIFO is not full.<br>
1082:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1083:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while filling
1084:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * data to the transmit FIFO.
1085:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Transmit should be "Direct" mode in advanced settings tab.<br>
1086:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1087:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1088:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1089:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1090:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1091:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1092:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1093:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1094:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t send_data[] = "Infineon Technologies";
1095:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1096:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1097:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1098:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();           // Initialization of DAVE APPs
1099:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1100:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1101:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1102:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1103:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1104:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1105:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1106:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1107:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1108:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &send_data[0], 10, false);
1109:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Wait when Tx FIFO is full
1110:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(!I2C_MASTER_IsTXFIFOFull(&I2C_MASTER_0))
1111:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1112:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_Transmit(&I2C_MASTER_0, false, SLAVE_ADDRESS, &send_data[0], 10, false);
1113:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1114:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(1U)
1115:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1116:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1117:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
1118:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1119:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1120:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTXFIFOFull(const I2C_MASTER_t* const handle)
1121:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1122:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTXFIFOFull: invalid handle", (handle != NULL))
1123:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_IsFull(handle->channel);
1124:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1125:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1126:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1127:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the receive FIFO is empty.
1128:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1129:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1130:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1131:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of receive FIFO filling level.
1132:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if receive FIFO is empty.<br>
1133:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if receive FIFO still has data.<br>
1134:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1135:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while reading data from the receive FIFO
1136:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1137:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1138:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1139:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1140:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1141:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1142:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1143:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1144:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1145:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1146:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1147:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1148:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1149:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1150:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1151:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1152:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1153:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1154:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1155:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1156:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1157:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1158:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1159:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1160:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1161:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1162:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1163:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1164:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1165:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1166:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1167:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1168:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1169:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1170:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1171:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1172:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1173:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1174:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1175:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1176:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1177:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1178:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1179:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1180:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
1181:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1182:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1183:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1184:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1185:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1186:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRXFIFOEmpty(const I2C_MASTER_t* const handle)
1187:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1188:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRXFIFOEmpty: invalid handle", (handle != NULL))
1189:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel);
1190:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1191:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1192:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1193:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the status of event flags related to receive FIFO.
1194:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1195:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1196:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1197:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1198:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of standard receive buffer event, alternative receive buffer event and 
1199:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * error event in their bit positions in TRBSR register.\n
1200:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for event bitmasks. Multiple events' status c
1201:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * comparison using \a OR operation.
1202:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1203:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1204:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * It provides the status of standard receive buffer event, alternative receive buffer event and re
1205:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * event.
1206:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function masks the TRBSR register with the bitmask of SRBI, ARBI and RBERI flags. User has to ma
1207:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interest before checking the status.
1208:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1209:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1210:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1211:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1212:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1213:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #define SLAVE_ADDRESS 0xA0
1214:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t mem_address[2];
1215:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   int main(void)
1216:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1217:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     DAVE_STATUS_t init_status;
1218:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1219:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     init_status = DAVE_Init();
1220:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     if(init_status == DAVE_STATUS_SUCCESS)
1221:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1222:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       mem_address[0] = 0x00;//memory which need to be read from slave
1223:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Configure receive fifo trigger limit as 10
1224:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1225:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1226:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1227:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1228:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1229:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0
1230:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1231:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1232:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1233:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     else
1234:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1235:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1236:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1237:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1238:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1239:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1240:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      return 1U;
1241:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1242:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1243:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1244:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1245:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetRXFIFOStatus(const I2C_MASTER_t* const handle)
1246:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1247:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetRXFIFOStatus: invalid handle", (handle != NULL))
1248:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_GetEvent(handle->channel);
1249:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1250:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1251:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1252:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to
1253:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * transmit FIFO.
1254:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1255:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1256:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1257:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at their bit positions in TRBSR register to be cleared.\n
1258:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t. Multiple events can be combined 
1259:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \a OR operation.
1260:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1261:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1262:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1263:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1264:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR register using the TRBSCR register. But the function does 
1265:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * value with the bit positions restricted to transmit FIFO status bits. User should ensure that th
1266:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * appropriately masked.
1267:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1268:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1269:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1270:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1271:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1272:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1273:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1274:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1275:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1276:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1277:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1278:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1279:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1280:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1281:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00; //memory which need to be read from slave
1282:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
1283:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1284:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1285:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1286:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
1287:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1288:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
1289:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1290:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
1291:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1292:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1293:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1294:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1295:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1296:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1297:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1298:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1299:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1300:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1301:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1302:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1303:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1304:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearTXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1305:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1306:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearTXFIFOStatus: invalid handle", (handle != NULL))
1307:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_ClearEvent(handle->channel, flag);
1308:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1309:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1310:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1311:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to receive FIFO. It should be used 
1312:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of standard receive buffer interrupt, alternative receive buffer interrupt and receive buffer er
1313:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1314:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1315:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1316:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at the bit positions in TRBSR register to be cleared.\n
1317:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for providing events.
1318:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             Multiple events can be input by using \a OR operation.
1319:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1320:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1321:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1322:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1323:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR using the TRBSCR register.
1324:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function does not mask the input value to clear only receive buffer
1325:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * events. So user should appropriately mask the input value before calling
1326:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the function.
1327:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1328:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1329:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1330:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1331:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1332:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1333:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1334:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1335:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1336:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1337:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1338:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1339:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1340:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1341:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
1342:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit as 10
1343:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1344:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1345:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1346:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1347:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1348:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0)
1349:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1350:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1351:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1352:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1353:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1354:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1355:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1356:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1357:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1358:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1359:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1360:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1361:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1362:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1363:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1364:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearRXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1365:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1366:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearRXFIFOStatus: invalid handle", (handle != NULL))
1367:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_ClearEvent(handle->channel, flag);
1368:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1369:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1370:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1371:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Provides the received data from receive buffer.
1372:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1373:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1374:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint8_t: Data read from RBUF.\n
1375:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1376:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1377:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This can be used in receive mode "Direct" to read the received data.
1378:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If Rx FIFO is not configured, function reads the value of RBUF register.
1379:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Otherwise it reads the data from OUTR register.
1380:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1381:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1382:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1383:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1384:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1385:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1386:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1387:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1388:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[10];
1389:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0,loc_index = 0;
1390:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1391:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1392:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1393:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1394:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1395:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1396:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1397:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1398:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1399:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1400:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1401:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1402:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1403:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1404:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1405:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1406:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1407:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1408:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1409:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1410:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        // wait for ACK
1411:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1412:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1413:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1414:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1415:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1416:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         index++;
1417:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1418:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1419:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1420:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1421:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1422:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1423:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1424:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1425:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1426:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1427:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1428:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1429:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1430:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1431:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1432:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1433:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1434:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1435:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1436:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /* Wrapper to the LLD API for reading back the value of the RBUF or OUTR register */
1437:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint8_t I2C_MASTER_GetReceivedByte(I2C_MASTER_t * const handle)
1438:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1439:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetReceivedByte: invalid handle", (handle != NULL))
1440:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   return (uint8_t)XMC_I2C_CH_GetReceivedData(handle->channel);
1441:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1442:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1443:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1444:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits single byte using I2C protocol.
1445:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1446:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1447:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  byte data byte to transmit. \n
1448:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1449:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
1450:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1451:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1452:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1453:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1454:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1455:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1456:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1457:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1458:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1459:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1460:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1461:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1462:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1463:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1464:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1465:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1466:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1467:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1468:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1469:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1470:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1471:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1472:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1473:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1474:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1475:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1476:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1477:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1478:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1479:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1480:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1481:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1482:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1483:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1484:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1485:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1486:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1487:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1488:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1489:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1490:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_TransmitByte(I2C_MASTER_t * const handle, uint8_t byte)
1491:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 190              	 .loc 2 1491 0
 191              	 .cfi_startproc
 192 0000 80B5     	 push {r7,lr}
 193              	.LCFI12:
 194              	 .cfi_def_cfa_offset 8
 195              	 .cfi_offset 7,-8
 196              	 .cfi_offset 14,-4
 197 0002 82B0     	 sub sp,sp,#8
 198              	.LCFI13:
 199              	 .cfi_def_cfa_offset 16
 200 0004 00AF     	 add r7,sp,#0
 201              	.LCFI14:
 202              	 .cfi_def_cfa_register 7
 203 0006 7860     	 str r0,[r7,#4]
 204 0008 0A1C     	 mov r2,r1
 205 000a FB1C     	 add r3,r7,#3
 206 000c 1A70     	 strb r2,[r3]
1492:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_TransmitByte: invalid handle", (handle != NULL))
1493:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterTransmit(handle->channel, byte);
 207              	 .loc 2 1493 0
 208 000e 7B68     	 ldr r3,[r7,#4]
 209 0010 1A68     	 ldr r2,[r3]
 210 0012 FB1C     	 add r3,r7,#3
 211 0014 1B78     	 ldrb r3,[r3]
 212 0016 101C     	 mov r0,r2
 213 0018 191C     	 mov r1,r3
 214 001a FFF7FEFF 	 bl XMC_I2C_CH_MasterTransmit
1494:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 215              	 .loc 2 1494 0
 216 001e BD46     	 mov sp,r7
 217 0020 02B0     	 add sp,sp,#8
 218              	 
 219 0022 80BD     	 pop {r7,pc}
 220              	 .cfi_endproc
 221              	.LFE140:
 223              	 .section .text.I2C_MASTER_SendStop,"ax",%progbits
 224              	 .align 2
 225              	 .code 16
 226              	 .thumb_func
 228              	I2C_MASTER_SendStop:
 229              	.LFB145:
1495:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1496:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enables the selected protocol events for interrupt generation.
1497:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1498:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1499:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Protocol events to be enabled for interrupt generation. \n
1500:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1501:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1502:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1503:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1504:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1505:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Enables the events by configuring CCR or PCR register based on the event.
1506:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the event is enabled, an interrupt can be generated on occurrence of the event.
1507:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The API should be used only for \a Direct mode related events. Using this API for non \a Direct 
1508:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * may not yield expected result.
1509:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1510:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1511:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1512:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1513:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1514:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1515:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1516:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1517:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1518:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1519:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1520:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1521:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1522:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1523:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1524:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1525:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1526:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1527:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1528:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1529:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1530:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_EnableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1531:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1532:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1533:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1534:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1535:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1536:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1537:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_EnableEvent(I2C_MASTER_t * const handle, uint32_t event)
1538:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1539:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_EnableEvent: invalid handle", (handle != NULL))
1540:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_EnableEvent(handle->channel, event);
1541:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1542:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1543:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Disables selected events from generating interrupt.
1544:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1545:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1546:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Events to be disabled from generating interrupt. \n
1547:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1548:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1549:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1550:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1551:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1552:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Events are disabled by clearing their respective bits in either CCR, TBCTR or RBCTR.
1553:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1554:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1555:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1556:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1557:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1558:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1559:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1560:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1561:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1562:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1563:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1564:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1565:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1566:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1567:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1568:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1569:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1570:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1571:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1572:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1573:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1574:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_DisableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1575:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1576:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1577:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1578:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1579:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1580:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1581:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1582:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_DisableEvent(I2C_MASTER_t * const handle, uint32_t event)
1583:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1584:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_DisableEvent: invalid handle", (handle != NULL))
1585:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_DisableEvent(handle->channel, event);
1586:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1587:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1588:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1589:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the ACK from slave
1590:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1591:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1592:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1593:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1594:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the ack from slave.<br>
1595:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1596:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1597:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1598:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1599:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1600:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1601:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1602:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1603:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1604:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1605:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1606:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1607:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1608:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1609:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1610:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1611:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1612:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1613:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1614:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1615:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1616:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1617:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1618:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1619:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1620:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1621:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1622:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1623:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1624:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1625:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1626:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1627:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1628:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1629:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1630:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1631:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1632:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1633:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1634:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1635:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1636:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1637:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1638:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1639:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1640:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1641:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1642:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1643:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1644:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1645:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1646:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1647:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1648:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1649:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1650:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1651:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1652:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveACK(I2C_MASTER_t * const handle)
1653:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1654:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveACK: invalid handle", (handle != NULL))
1655:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveAck(handle->channel);
1656:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1657:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1658:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the NACK from slave
1659:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1660:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1661:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1662:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1663:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the nack from slave.<br>
1664:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1665:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1666:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1667:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1668:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1669:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1670:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1671:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1672:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1673:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1674:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint32_t index = 0, loc_index = 0;
1675:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1676:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1677:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1678:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1679:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1680:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1681:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1682:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1683:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1684:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1685:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1686:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1687:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1688:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1689:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1690:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1691:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1692:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1693:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1694:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1695:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1696:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1697:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1698:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1699:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1700:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1701:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1702:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1703:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // only for the last byte
1704:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ReceiveNACK(&I2C_MASTER_0);
1705:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1706:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1707:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1708:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1709:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1710:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1711:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1712:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1713:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1714:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1715:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1716:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1717:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1718:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1719:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1720:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1721:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1722:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveNACK(I2C_MASTER_t * const handle)
1723:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1724:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveNACK: invalid handle", (handle != NULL))
1725:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveNack(handle->channel);
1726:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1727:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1728:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends stop command to slave
1729:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1730:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1731:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1732:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1733:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * At the end of transmission, sends a stop command to slave <br>
1734:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.<br>
1735:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1736:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1737:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1738:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1739:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1740:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1741:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1742:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1743:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1744:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1745:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1746:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1747:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1748:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1749:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1750:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1751:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1752:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1753:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //send the address to which data to be transfered
1754:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1755:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1756:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1757:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1758:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1759:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1760:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
1761:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1762:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1763:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1764:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1765:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1766:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1767:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1768:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1769:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1770:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1771:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1772:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1773:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStop(I2C_MASTER_t * const handle)
1774:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 230              	 .loc 2 1774 0
 231              	 .cfi_startproc
 232 0000 80B5     	 push {r7,lr}
 233              	.LCFI15:
 234              	 .cfi_def_cfa_offset 8
 235              	 .cfi_offset 7,-8
 236              	 .cfi_offset 14,-4
 237 0002 82B0     	 sub sp,sp,#8
 238              	.LCFI16:
 239              	 .cfi_def_cfa_offset 16
 240 0004 00AF     	 add r7,sp,#0
 241              	.LCFI17:
 242              	 .cfi_def_cfa_register 7
 243 0006 7860     	 str r0,[r7,#4]
1775:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStop: invalid handle", (handle != NULL))
1776:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterStop(handle->channel);
 244              	 .loc 2 1776 0
 245 0008 7B68     	 ldr r3,[r7,#4]
 246 000a 1B68     	 ldr r3,[r3]
 247 000c 181C     	 mov r0,r3
 248 000e FFF7FEFF 	 bl XMC_I2C_CH_MasterStop
1777:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 249              	 .loc 2 1777 0
 250 0012 BD46     	 mov sp,r7
 251 0014 02B0     	 add sp,sp,#8
 252              	 
 253 0016 80BD     	 pop {r7,pc}
 254              	 .cfi_endproc
 255              	.LFE145:
 257              	 .section .text.I2C_MASTER_SendStart,"ax",%progbits
 258              	 .align 2
 259              	 .code 16
 260              	 .thumb_func
 262              	I2C_MASTER_SendStart:
 263              	.LFB146:
1778:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1779:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends start command to slave
1780:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1781:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param address slave address
1782:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param cmd     command
1783:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1784:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1785:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1786:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Before start of transmission, sends a start command to slave. \n
1787:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1788:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1789:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1790:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1791:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1792:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1793:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1794:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1795:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
1796:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1797:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1798:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1799:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1800:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1801:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1802:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1803:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1804:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1805:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1806:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1807:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1808:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1809:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1810:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //send the address to which data to be transfered
1811:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1812:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1813:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1814:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1815:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1816:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1817:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1818:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1819:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       XMC_DEBUG("main: Application initialization failed");
1820:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while(1U)
1821:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       {
1822:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       }
1823:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1824:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1825:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1826:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1827:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1828:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStart(I2C_MASTER_t * const handle, const uint32_t address,
1829:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                  const XMC_I2C_CH_CMD_t cmd)
1830:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 264              	 .loc 2 1830 0
 265              	 .cfi_startproc
 266 0000 80B5     	 push {r7,lr}
 267              	.LCFI18:
 268              	 .cfi_def_cfa_offset 8
 269              	 .cfi_offset 7,-8
 270              	 .cfi_offset 14,-4
 271 0002 84B0     	 sub sp,sp,#16
 272              	.LCFI19:
 273              	 .cfi_def_cfa_offset 24
 274 0004 00AF     	 add r7,sp,#0
 275              	.LCFI20:
 276              	 .cfi_def_cfa_register 7
 277 0006 F860     	 str r0,[r7,#12]
 278 0008 B960     	 str r1,[r7,#8]
 279 000a FB1D     	 add r3,r7,#7
 280 000c 1A70     	 strb r2,[r3]
1831:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStart: invalid handle", (handle != NULL))
1832:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterStart(handle->channel, (uint16_t)address, cmd);
 281              	 .loc 2 1832 0
 282 000e FB68     	 ldr r3,[r7,#12]
 283 0010 1968     	 ldr r1,[r3]
 284 0012 BB68     	 ldr r3,[r7,#8]
 285 0014 9AB2     	 uxth r2,r3
 286 0016 FB1D     	 add r3,r7,#7
 287 0018 1B78     	 ldrb r3,[r3]
 288 001a 081C     	 mov r0,r1
 289 001c 111C     	 mov r1,r2
 290 001e 1A1C     	 mov r2,r3
 291 0020 FFF7FEFF 	 bl XMC_I2C_CH_MasterStart
1833:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 292              	 .loc 2 1833 0
 293 0024 BD46     	 mov sp,r7
 294 0026 04B0     	 add sp,sp,#16
 295              	 
 296 0028 80BD     	 pop {r7,pc}
 297              	 .cfi_endproc
 298              	.LFE146:
 300 002a C046     	 .section .text.I2C_MASTER_IsTxBusy,"ax",%progbits
 301              	 .align 2
 302              	 .code 16
 303              	 .thumb_func
 305              	I2C_MASTER_IsTxBusy:
 306              	.LFB148:
1834:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1835:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends repeated start command to slave
1836:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1837:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param address slave address
1838:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param cmd     command
1839:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1840:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1841:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1842:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Before start of transmission, sends a repeatedstart command to slave if bus acquired is true.\n
1843:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1844:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1845:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1846:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1847:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1848:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1849:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1850:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1851:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1852:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1853:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1854:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1855:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1856:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rx_buf[256];
1857:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1858:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1859:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1860:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1861:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterStart(I2C_MASTER_0.channel, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1862:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1863:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1864:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1865:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1866:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1867:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //send the address to which data to be transfered
1868:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1869:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1870:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1871:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1872:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1873:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1874:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1875:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1876:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1877:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1878:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1879:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1880:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 	   memset(rx_buf,0,16);
1881:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, false, SLAVE_ADDRESS, rx_buf, 16, true, true);
1882:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1883:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1884:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1885:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1886:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1887:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1888:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1889:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1890:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 1U;
1891:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1892:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1893:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1894:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendRepeatedStart(I2C_MASTER_t * const handle, const uint32_t addre
1895:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                          const XMC_I2C_CH_CMD_t cmd)
1896:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1897:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendRepeatedStart: invalid handle", (handle != NULL))
1898:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterRepeatedStart(handle->channel, (uint16_t)address, cmd);
1899:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1900:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1901:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1902:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends the txbusy flag
1903:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1904:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool : status of txbusy flag
1905:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  
1906:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1907:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1908:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include <DAVE.h>
1909:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1910:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
1911:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
1912:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
1913:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
1914:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
1915:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
1916:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1917:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
1918:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1919:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1920:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1921:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1922:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1923:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1924:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1925:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1926:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
1927:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
1928:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1929:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1930:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1931:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
1932:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1933:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1934:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
1935:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
1936:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1937:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
1938:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1939:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1940:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
1941:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1942:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1943:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTxBusy(I2C_MASTER_t * const handle)
1944:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 307              	 .loc 2 1944 0
 308              	 .cfi_startproc
 309 0000 80B5     	 push {r7,lr}
 310              	.LCFI21:
 311              	 .cfi_def_cfa_offset 8
 312              	 .cfi_offset 7,-8
 313              	 .cfi_offset 14,-4
 314 0002 82B0     	 sub sp,sp,#8
 315              	.LCFI22:
 316              	 .cfi_def_cfa_offset 16
 317 0004 00AF     	 add r7,sp,#0
 318              	.LCFI23:
 319              	 .cfi_def_cfa_register 7
 320 0006 7860     	 str r0,[r7,#4]
1945:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTxBusy: invalid handle", (handle != NULL))	
1946:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h ****   return handle->runtime->tx_busy;
 321              	 .loc 2 1946 0
 322 0008 7B68     	 ldr r3,[r7,#4]
 323 000a 9B68     	 ldr r3,[r3,#8]
 324 000c 2622     	 mov r2,#38
 325 000e 9B5C     	 ldrb r3,[r3,r2]
 326 0010 DBB2     	 uxtb r3,r3
1947:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 327              	 .loc 2 1947 0
 328 0012 181C     	 mov r0,r3
 329 0014 BD46     	 mov sp,r7
 330 0016 02B0     	 add sp,sp,#8
 331              	 
 332 0018 80BD     	 pop {r7,pc}
 333              	 .cfi_endproc
 334              	.LFE148:
 336 001a C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 337              	 .align 2
 338              	 .code 16
 339              	 .thumb_func
 341              	DIGITAL_IO_SetOutputHigh:
 342              	.LFB150:
 343              	 .file 3 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2016-07-08
   5:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.16 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  58:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  60:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  61:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  62:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  63:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  64:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  65:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  66:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  67:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  68:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  69:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_Common.h>
  70:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  71:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  72:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  73:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  74:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  75:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  76:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  77:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  78:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  79:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  80:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  82:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  83:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  84:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  85:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  86:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  87:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  88:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  89:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  90:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  91:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  92:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  93:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  94:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  95:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  96:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  97:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  98:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  99:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 100:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 101:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 102:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 103:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 104:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 105:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 106:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 107:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 108:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 109:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 110:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 111:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 112:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 113:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 114:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 115:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 116:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 117:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 118:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 119:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 120:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 121:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 122:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 123:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 124:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 125:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 126:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 127:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 129:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 130:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 131:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 132:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 134:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 135:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 136:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 137:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 138:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 139:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 140:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 141:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 144:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 145:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 146:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 147:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 148:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 149:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 150:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 151:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 153:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 155:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 156:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 157:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 158:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 159:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 160:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 161:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 162:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 163:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 164:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 165:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 166:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 167:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 168:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 169:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 170:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 171:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 172:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 173:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 174:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 175:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 176:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 178:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 179:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 180:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 181:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 183:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 184:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 185:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 186:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 187:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 188:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 189:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 190:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 191:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 192:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 193:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 194:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 195:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 196:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 197:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 198:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 199:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 200:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 201:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 202:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 203:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 204:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 205:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 206:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 207:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 208:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 209:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 210:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 211:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 212:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 213:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 214:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 216:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 217:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 218:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 219:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 220:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 221:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 222:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 223:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 225:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 226:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 227:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 228:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 229:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 230:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 231:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 232:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 233:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 234:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 236:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 237:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 238:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 239:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 240:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 241:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 242:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 243:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 244:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 245:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 246:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 247:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 248:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 249:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 250:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 251:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 252:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 253:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 254:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 255:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 256:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 257:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 258:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 259:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 260:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 261:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 262:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 263:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 264:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 265:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 266:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 267:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 268:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 269:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 344              	 .loc 3 269 0
 345              	 .cfi_startproc
 346 0000 80B5     	 push {r7,lr}
 347              	.LCFI24:
 348              	 .cfi_def_cfa_offset 8
 349              	 .cfi_offset 7,-8
 350              	 .cfi_offset 14,-4
 351 0002 82B0     	 sub sp,sp,#8
 352              	.LCFI25:
 353              	 .cfi_def_cfa_offset 16
 354 0004 00AF     	 add r7,sp,#0
 355              	.LCFI26:
 356              	 .cfi_def_cfa_register 7
 357 0006 7860     	 str r0,[r7,#4]
 270:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 271:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 358              	 .loc 3 271 0
 359 0008 7B68     	 ldr r3,[r7,#4]
 360 000a 1A68     	 ldr r2,[r3]
 361 000c 7B68     	 ldr r3,[r7,#4]
 362 000e 1B7B     	 ldrb r3,[r3,#12]
 363 0010 101C     	 mov r0,r2
 364 0012 191C     	 mov r1,r3
 365 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 272:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 366              	 .loc 3 272 0
 367 0018 BD46     	 mov sp,r7
 368 001a 02B0     	 add sp,sp,#8
 369              	 
 370 001c 80BD     	 pop {r7,pc}
 371              	 .cfi_endproc
 372              	.LFE150:
 374 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 375              	 .align 2
 376              	 .code 16
 377              	 .thumb_func
 379              	DIGITAL_IO_SetOutputLow:
 380              	.LFB151:
 273:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 274:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 275:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 276:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 277:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 278:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 279:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 280:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 281:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 282:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 283:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 284:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 285:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 286:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 287:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 288:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 289:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 290:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 291:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 292:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 293:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 294:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 295:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 296:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 297:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 298:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 299:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 300:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 301:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 302:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 303:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 304:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 305:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 306:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 308:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 309:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 310:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 311:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 312:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 313:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 314:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 315:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 316:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 381              	 .loc 3 316 0
 382              	 .cfi_startproc
 383 0000 80B5     	 push {r7,lr}
 384              	.LCFI27:
 385              	 .cfi_def_cfa_offset 8
 386              	 .cfi_offset 7,-8
 387              	 .cfi_offset 14,-4
 388 0002 82B0     	 sub sp,sp,#8
 389              	.LCFI28:
 390              	 .cfi_def_cfa_offset 16
 391 0004 00AF     	 add r7,sp,#0
 392              	.LCFI29:
 393              	 .cfi_def_cfa_register 7
 394 0006 7860     	 str r0,[r7,#4]
 317:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 318:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 395              	 .loc 3 318 0
 396 0008 7B68     	 ldr r3,[r7,#4]
 397 000a 1A68     	 ldr r2,[r3]
 398 000c 7B68     	 ldr r3,[r7,#4]
 399 000e 1B7B     	 ldrb r3,[r3,#12]
 400 0010 101C     	 mov r0,r2
 401 0012 191C     	 mov r1,r3
 402 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 319:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 403              	 .loc 3 319 0
 404 0018 BD46     	 mov sp,r7
 405 001a 02B0     	 add sp,sp,#8
 406              	 
 407 001c 80BD     	 pop {r7,pc}
 408              	 .cfi_endproc
 409              	.LFE151:
 411 001e C046     	 .section .text.DIGITAL_IO_ToggleOutput,"ax",%progbits
 412              	 .align 2
 413              	 .code 16
 414              	 .thumb_func
 416              	DIGITAL_IO_ToggleOutput:
 417              	.LFB152:
 320:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 321:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 322:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 323:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 324:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 325:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 326:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 327:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 328:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 329:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 330:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 331:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 332:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 333:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 334:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 335:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 336:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 337:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 338:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 339:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 340:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 341:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 342:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 343:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 344:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 345:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 346:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 347:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 348:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 349:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 350:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 351:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 352:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 353:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 354:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 355:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 356:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 357:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 358:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 359:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 360:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 361:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 362:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 363:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 364:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 365:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 366:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 367:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 368:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 418              	 .loc 3 368 0
 419              	 .cfi_startproc
 420 0000 80B5     	 push {r7,lr}
 421              	.LCFI30:
 422              	 .cfi_def_cfa_offset 8
 423              	 .cfi_offset 7,-8
 424              	 .cfi_offset 14,-4
 425 0002 82B0     	 sub sp,sp,#8
 426              	.LCFI31:
 427              	 .cfi_def_cfa_offset 16
 428 0004 00AF     	 add r7,sp,#0
 429              	.LCFI32:
 430              	 .cfi_def_cfa_register 7
 431 0006 7860     	 str r0,[r7,#4]
 369:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 370:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 432              	 .loc 3 370 0
 433 0008 7B68     	 ldr r3,[r7,#4]
 434 000a 1A68     	 ldr r2,[r3]
 435 000c 7B68     	 ldr r3,[r7,#4]
 436 000e 1B7B     	 ldrb r3,[r3,#12]
 437 0010 101C     	 mov r0,r2
 438 0012 191C     	 mov r1,r3
 439 0014 FFF7FEFF 	 bl XMC_GPIO_ToggleOutput
 371:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 440              	 .loc 3 371 0
 441 0018 BD46     	 mov sp,r7
 442 001a 02B0     	 add sp,sp,#8
 443              	 
 444 001c 80BD     	 pop {r7,pc}
 445              	 .cfi_endproc
 446              	.LFE152:
 448 001e C046     	 .section .text.DIGITAL_IO_GetInput,"ax",%progbits
 449              	 .align 2
 450              	 .code 16
 451              	 .thumb_func
 453              	DIGITAL_IO_GetInput:
 454              	.LFB153:
 372:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 373:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 374:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to read input level of port pin.
 375:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 376:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return uint32_t input logic level. Range:0-1
 377:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 378:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 379:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 380:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 381:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 382:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  None
 383:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 384:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 385:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 386:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 387:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 388:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 389:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 390:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t pin_status;
 391:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_
 392:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 393:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 394:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 395:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 396:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 397:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 398:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 399:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 400:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 401:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 402:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 403:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 404:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 405:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 406:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     pin_status = DIGITAL_IO_GetInput(&DIGITAL_IO_0);
 407:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if(pin_status == 1)
 408:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 409:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 410:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 411:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     else
 412:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 413:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 414:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 415:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 416:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 417:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 418:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 419:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 420:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 421:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE uint32_t DIGITAL_IO_GetInput(const DIGITAL_IO_t *const handler)
 422:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 455              	 .loc 3 422 0
 456              	 .cfi_startproc
 457 0000 80B5     	 push {r7,lr}
 458              	.LCFI33:
 459              	 .cfi_def_cfa_offset 8
 460              	 .cfi_offset 7,-8
 461              	 .cfi_offset 14,-4
 462 0002 82B0     	 sub sp,sp,#8
 463              	.LCFI34:
 464              	 .cfi_def_cfa_offset 16
 465 0004 00AF     	 add r7,sp,#0
 466              	.LCFI35:
 467              	 .cfi_def_cfa_register 7
 468 0006 7860     	 str r0,[r7,#4]
 423:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_GetInput: handler null pointer", handler != NULL);
 424:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h ****   return XMC_GPIO_GetInput(handler->gpio_port, handler->gpio_pin);
 469              	 .loc 3 424 0
 470 0008 7B68     	 ldr r3,[r7,#4]
 471 000a 1A68     	 ldr r2,[r3]
 472 000c 7B68     	 ldr r3,[r7,#4]
 473 000e 1B7B     	 ldrb r3,[r3,#12]
 474 0010 101C     	 mov r0,r2
 475 0012 191C     	 mov r1,r3
 476 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
 477 0018 031C     	 mov r3,r0
 425:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 478              	 .loc 3 425 0
 479 001a 181C     	 mov r0,r3
 480 001c BD46     	 mov sp,r7
 481 001e 02B0     	 add sp,sp,#8
 482              	 
 483 0020 80BD     	 pop {r7,pc}
 484              	 .cfi_endproc
 485              	.LFE153:
 487              	 .global display_init_data
 488 0022 C046     	 .section .rodata.display_init_data,"a",%progbits
 489              	 .align 2
 492              	display_init_data:
 493 0000 21       	 .byte 33
 494 0001 81       	 .byte -127
 495 0002 EF       	 .byte -17
 496              	 .comm numsticks,5,4
 497              	 .global level
 498 0003 00       	 .section .data.level,"aw",%progbits
 501              	level:
 502 0000 02       	 .byte 2
 503              	 .global rows
 504              	 .section .data.rows,"aw",%progbits
 507              	rows:
 508 0000 04       	 .byte 4
 509              	 .global randreg
 510              	 .section .data.randreg,"aw",%progbits
 511              	 .align 1
 514              	randreg:
 515 0000 0100     	 .short 1
 516              	 .global current_selection
 517              	 .section .bss.current_selection,"aw",%nobits
 520              	current_selection:
 521 0000 00       	 .space 1
 522              	 .comm timer_id,4,4
 523              	 .comm button_handle,24,4
 524              	 .comm button_status,6,4
 525              	 .global do_all_button_inhibit
 526              	 .section .bss.do_all_button_inhibit,"aw",%nobits
 529              	do_all_button_inhibit:
 530 0000 00       	 .space 1
 531              	 .global press_ticks
 532              	 .section .bss.press_ticks,"aw",%nobits
 533              	 .align 2
 536              	press_ticks:
 537 0000 00000000 	 .space 4
 538              	 .global command_press
 539              	 .section .bss.command_press,"aw",%nobits
 542              	command_press:
 543 0000 00       	 .space 1
 544              	 .global playing
 545              	 .section .bss.playing,"aw",%nobits
 548              	playing:
 549 0000 00       	 .space 1
 550              	 .comm display_ram,16,4
 551              	 .global general_timer
 552              	 .section .bss.general_timer,"aw",%nobits
 553              	 .align 2
 556              	general_timer:
 557 0000 00000000 	 .space 4
 558              	 .global display_update_timer
 559              	 .section .bss.display_update_timer,"aw",%nobits
 560              	 .align 2
 563              	display_update_timer:
 564 0000 00000000 	 .space 4
 565              	 .global heartbeat_timer
 566              	 .section .data.heartbeat_timer,"aw",%progbits
 567              	 .align 2
 570              	heartbeat_timer:
 571 0000 F4010000 	 .word 500
 572              	 .section .rodata
 573              	 .align 2
 574              	.LC3:
 575 0000 48454C4C 	 .ascii "HELLO  \000"
 575      4F202000 
 576              	 .align 2
 577              	.LC16:
 578 0008 594F5520 	 .ascii "YOU WIN  \000"
 578      57494E20 
 578      2000
 579 0012 0000     	 .align 2
 580              	.LC18:
 581 0014 4C4F5345 	 .ascii "LOSER  \000"
 581      52202000 
 582              	 .section .text.main,"ax",%progbits
 583              	 .align 2
 584              	 .global main
 585              	 .code 16
 586              	 .thumb_func
 588              	main:
 589              	.LFB197:
 590              	 .file 4 "../main.c"
   1:../main.c     **** /***********************************************************
   2:../main.c     ****  * pocket-nim
   3:../main.c     ****  * This code is for a game where stick are arranged in rows.
   4:../main.c     ****  * It is played by taking turns to remove any amount of sticks
   5:../main.c     ****  * from any single row of your choice.
   6:../main.c     ****  * The player who takes the last stick is the loser.
   7:../main.c     ****  * This code is intended for microcontrollers, and the sticks
   8:../main.c     ****  * could be LEDs, or some other display.
   9:../main.c     ****  *
  10:../main.c     ****  * This current version works with Infineon XMC 2GO
  11:../main.c     ****  * microcontroller board (
  12:../main.c     ****  *
  13:../main.c     ****  * rev 1.0 - August 2019 - shabaz
  14:../main.c     ****  * Free for all non-commercial use
  15:../main.c     ****  ***********************************************************/
  16:../main.c     **** 
  17:../main.c     **** // # uncomment to enable debug
  18:../main.c     **** //#define DO_DEBUG
  19:../main.c     **** 
  20:../main.c     **** /*************** include files ***************/
  21:../main.c     **** #include <DAVE.h>
  22:../main.c     **** #ifdef DO_DEBUG
  23:../main.c     **** #include <stdio.h>
  24:../main.c     **** #endif
  25:../main.c     **** 
  26:../main.c     **** /*************** definitions *****************/
  27:../main.c     **** #define led_address 0xe0
  28:../main.c     **** // maximum possible rows containing sticks at the start of a game.
  29:../main.c     **** // limit is 8, due to this code using unsigned chars in places
  30:../main.c     **** #define MAXROWS 5
  31:../main.c     **** #define NUM_BUTTONS 6
  32:../main.c     **** #define COMPUTER_BUTTON NUM_BUTTONS-1
  33:../main.c     **** #define FOREVER 1
  34:../main.c     **** 
  35:../main.c     **** // deliberate weakening on the easier levels
  36:../main.c     **** // lower number makes the computer play weaker.
  37:../main.c     **** // 200U is about right it seems. Set to (say) 128U for an easier game
  38:../main.c     **** #define WEAKNESS 200U
  39:../main.c     **** 
  40:../main.c     **** // button status definitions
  41:../main.c     **** #define UNPRESSED 0
  42:../main.c     **** #define FIRST_PRESS 1
  43:../main.c     **** #define PRESS_ACTIONED 2
  44:../main.c     **** 
  45:../main.c     **** // button debounce times
  46:../main.c     **** #define MILLISEC 1000
  47:../main.c     **** #define DEBOUNCE_TICK_PERIOD 60
  48:../main.c     **** #define RELEASE_TICK_PERIOD 60
  49:../main.c     **** 
  50:../main.c     **** // display related
  51:../main.c     **** #define ORIENTATION 0
  52:../main.c     **** 
  53:../main.c     **** // debug related
  54:../main.c     **** #define HEARTBEAT_DELAY 500
  55:../main.c     **** 
  56:../main.c     **** /****** const variables *****************/
  57:../main.c     **** const uint8_t display_init_data[3]={0x21, 0x81, 0xef}; // system osc. on, display on, max brightnes
  58:../main.c     **** // const bitmap for alphabet font is near the end of the file
  59:../main.c     **** 
  60:../main.c     **** /******** global variables **************/
  61:../main.c     **** unsigned char numsticks[MAXROWS]; // this array holds the number of sticks in each row
  62:../main.c     **** unsigned char level=2; // difficulty, 1-5 with 5 being is hardest. The easier levels can have less 
  63:../main.c     **** unsigned char rows=4; // number of rows being played. Max is MAXROWS
  64:../main.c     **** unsigned short int randreg=1; // this variable holds a random number
  65:../main.c     **** unsigned char current_selection=0; // this variable stores what button was pressed
  66:../main.c     **** 
  67:../main.c     **** uint32_t timer_id;
  68:../main.c     **** 
  69:../main.c     **** DIGITAL_IO_t* button_handle[NUM_BUTTONS];
  70:../main.c     **** unsigned char button_status[NUM_BUTTONS];
  71:../main.c     **** unsigned char do_all_button_inhibit=0; // a lockout for not accepting any button presses
  72:../main.c     **** unsigned int press_ticks=0; // a counter used primarily for debounce purposes
  73:../main.c     **** unsigned char command_press=0; // A button press after the computer button was held down
  74:../main.c     **** char playing=0; // this variable is set to 1 when a game is being played
  75:../main.c     **** 
  76:../main.c     **** uint16_t display_ram[8];
  77:../main.c     **** unsigned int general_timer=0;  // used for debug
  78:../main.c     **** unsigned int display_update_timer=0; // used to allow the display some time after updates
  79:../main.c     **** unsigned int heartbeat_timer=HEARTBEAT_DELAY; // used to flash an LED on the microcontroller board
  80:../main.c     **** 
  81:../main.c     **** /***** extern function prototypes *******/
  82:../main.c     **** #ifdef DO_DEBUG
  83:../main.c     **** extern void initialise_monitor_handles(void); // used to allow printf to work
  84:../main.c     **** #endif
  85:../main.c     **** 
  86:../main.c     **** /******** function prototypes ***********/
  87:../main.c     **** // core game algorithm related
  88:../main.c     **** void setup_game(void);
  89:../main.c     **** void show_status(void);
  90:../main.c     **** char user_play(void);
  91:../main.c     **** void computer_play(void);
  92:../main.c     **** 
  93:../main.c     **** // button related
  94:../main.c     **** void fast_tick(void);
  95:../main.c     **** char a_button_pressed(void);
  96:../main.c     **** 
  97:../main.c     **** // display related
  98:../main.c     **** void display_init(void);
  99:../main.c     **** void display_write(void);
 100:../main.c     **** void display_ram_blank(void);
 101:../main.c     **** void plot_ram_pixel(int x, int y);
 102:../main.c     **** void plot_ram_rows(unsigned char* rows_arr);
 103:../main.c     **** void scroll_text(char* text, char len, char all);
 104:../main.c     **** 
 105:../main.c     **** // sound related
 106:../main.c     **** void play_tone(char type);
 107:../main.c     **** 
 108:../main.c     **** // debug related
 109:../main.c     **** void set_led(char state); // controls LED2 on the microcontroller board
 110:../main.c     **** 
 111:../main.c     **** /****************************************
 112:../main.c     ****  * main function
 113:../main.c     ****  ****************************************/
 114:../main.c     **** int main(void)
 115:../main.c     **** {
 591              	 .loc 4 115 0
 592              	 .cfi_startproc
 593 0000 90B5     	 push {r4,r7,lr}
 594              	.LCFI36:
 595              	 .cfi_def_cfa_offset 12
 596              	 .cfi_offset 4,-12
 597              	 .cfi_offset 7,-8
 598              	 .cfi_offset 14,-4
 599 0002 85B0     	 sub sp,sp,#20
 600              	.LCFI37:
 601              	 .cfi_def_cfa_offset 32
 602 0004 00AF     	 add r7,sp,#0
 603              	.LCFI38:
 604              	 .cfi_def_cfa_register 7
 116:../main.c     ****   DAVE_STATUS_t status;
 117:../main.c     ****   int i;
 118:../main.c     ****   char sel;
 119:../main.c     ****   char check_winner;
 120:../main.c     ****   char winner_announced;
 121:../main.c     ****   unsigned char oldnumsticks[MAXROWS]; // used to blink the computer move a few times on the displa
 122:../main.c     **** 
 123:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 605              	 .loc 4 123 0
 606 0006 0923     	 mov r3,#9
 607 0008 FC18     	 add r4,r7,r3
 608 000a FFF7FEFF 	 bl DAVE_Init
 609 000e 031C     	 mov r3,r0
 610 0010 2370     	 strb r3,[r4]
 124:../main.c     ****   if(status != DAVE_STATUS_SUCCESS)
 611              	 .loc 4 124 0
 612 0012 0923     	 mov r3,#9
 613 0014 FB18     	 add r3,r7,r3
 614 0016 1B78     	 ldrb r3,[r3]
 615 0018 002B     	 cmp r3,#0
 616 001a 00D0     	 beq .L19
 617              	.L20:
 125:../main.c     ****   {
 126:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 127:../main.c     ****     while(1);
 618              	 .loc 4 127 0 discriminator 1
 619 001c FEE7     	 b .L20
 620              	.L19:
 128:../main.c     ****   }
 129:../main.c     **** 
 130:../main.c     ****   set_led(1); // turn on the LED on the microcontroller board (LED2) briefly for debug purposes
 621              	 .loc 4 130 0
 622 001e 0120     	 mov r0,#1
 623 0020 FFF7FEFF 	 bl set_led
 131:../main.c     **** 
 132:../main.c     ****   // create and start up the timer for the periodic tick function
 133:../main.c     ****   timer_id=(uint32_t)SYSTIMER_CreateTimer(MILLISEC,
 624              	 .loc 4 133 0
 625 0024 FA23     	 mov r3,#250
 626 0026 9A00     	 lsl r2,r3,#2
 627 0028 A14B     	 ldr r3,.L48
 628 002a 101C     	 mov r0,r2
 629 002c 0121     	 mov r1,#1
 630 002e 1A1C     	 mov r2,r3
 631 0030 0023     	 mov r3,#0
 632 0032 FFF7FEFF 	 bl SYSTIMER_CreateTimer
 633 0036 021C     	 mov r2,r0
 634 0038 9E4B     	 ldr r3,.L48+4
 635 003a 1A60     	 str r2,[r3]
 134:../main.c     **** 		   SYSTIMER_MODE_PERIODIC,(void*)fast_tick,NULL);
 135:../main.c     ****   SYSTIMER_StartTimer(timer_id);
 636              	 .loc 4 135 0
 637 003c 9D4B     	 ldr r3,.L48+4
 638 003e 1B68     	 ldr r3,[r3]
 639 0040 181C     	 mov r0,r3
 640 0042 FFF7FEFF 	 bl SYSTIMER_StartTimer
 136:../main.c     **** #ifdef DO_DEBUG
 137:../main.c     ****   initialise_monitor_handles();
 138:../main.c     **** #endif
 139:../main.c     **** 
 140:../main.c     **** display_update_timer=10;
 641              	 .loc 4 140 0
 642 0046 9C4B     	 ldr r3,.L48+8
 643 0048 0A22     	 mov r2,#10
 644 004a 1A60     	 str r2,[r3]
 141:../main.c     **** while(display_update_timer>0); // delay to allow power to settle
 645              	 .loc 4 141 0
 646 004c C046     	 mov r8,r8
 647              	.L21:
 648              	 .loc 4 141 0 is_stmt 0 discriminator 1
 649 004e 9A4B     	 ldr r3,.L48+8
 650 0050 1B68     	 ldr r3,[r3]
 651 0052 002B     	 cmp r3,#0
 652 0054 FBD1     	 bne .L21
 142:../main.c     **** display_ram_blank();
 653              	 .loc 4 142 0 is_stmt 1
 654 0056 FFF7FEFF 	 bl display_ram_blank
 143:../main.c     **** display_init();
 655              	 .loc 4 143 0
 656 005a FFF7FEFF 	 bl display_init
 144:../main.c     **** display_update_timer=100;
 657              	 .loc 4 144 0
 658 005e 964B     	 ldr r3,.L48+8
 659 0060 6422     	 mov r2,#100
 660 0062 1A60     	 str r2,[r3]
 145:../main.c     **** while(display_update_timer>0); // delay to allow display to be initialised
 661              	 .loc 4 145 0
 662 0064 C046     	 mov r8,r8
 663              	.L22:
 664              	 .loc 4 145 0 is_stmt 0 discriminator 1
 665 0066 944B     	 ldr r3,.L48+8
 666 0068 1B68     	 ldr r3,[r3]
 667 006a 002B     	 cmp r3,#0
 668 006c FBD1     	 bne .L22
 146:../main.c     **** set_led(0);
 669              	 .loc 4 146 0 is_stmt 1
 670 006e 0020     	 mov r0,#0
 671 0070 FFF7FEFF 	 bl set_led
 147:../main.c     **** 
 148:../main.c     **** #ifdef DO_DEBUG
 149:../main.c     ****   printf("Hello\n");
 150:../main.c     **** #endif
 151:../main.c     **** 
 152:../main.c     ****   scroll_text("HELLO  ", 7, 0); // lowercase is not supported! And pad with 2 spaces at the end.
 672              	 .loc 4 152 0
 673 0074 914B     	 ldr r3,.L48+12
 674 0076 181C     	 mov r0,r3
 675 0078 0721     	 mov r1,#7
 676 007a 0022     	 mov r2,#0
 677 007c FFF7FEFF 	 bl scroll_text
 153:../main.c     **** 
 154:../main.c     ****   button_handle[0]=(DIGITAL_IO_t*)&button1;
 678              	 .loc 4 154 0
 679 0080 8F4B     	 ldr r3,.L48+16
 680 0082 904A     	 ldr r2,.L48+20
 681 0084 1A60     	 str r2,[r3]
 155:../main.c     ****   button_handle[1]=(DIGITAL_IO_t*)&button2;
 682              	 .loc 4 155 0
 683 0086 8E4B     	 ldr r3,.L48+16
 684 0088 8F4A     	 ldr r2,.L48+24
 685 008a 5A60     	 str r2,[r3,#4]
 156:../main.c     ****   button_handle[2]=(DIGITAL_IO_t*)&button3;
 686              	 .loc 4 156 0
 687 008c 8C4B     	 ldr r3,.L48+16
 688 008e 8F4A     	 ldr r2,.L48+28
 689 0090 9A60     	 str r2,[r3,#8]
 157:../main.c     ****   button_handle[3]=(DIGITAL_IO_t*)&button4;
 690              	 .loc 4 157 0
 691 0092 8B4B     	 ldr r3,.L48+16
 692 0094 8E4A     	 ldr r2,.L48+32
 693 0096 DA60     	 str r2,[r3,#12]
 158:../main.c     ****   button_handle[4]=(DIGITAL_IO_t*)&button5;
 694              	 .loc 4 158 0
 695 0098 894B     	 ldr r3,.L48+16
 696 009a 8E4A     	 ldr r2,.L48+36
 697 009c 1A61     	 str r2,[r3,#16]
 159:../main.c     ****   button_handle[5]=(DIGITAL_IO_t*)&button_computer;
 698              	 .loc 4 159 0
 699 009e 884B     	 ldr r3,.L48+16
 700 00a0 8D4A     	 ldr r2,.L48+40
 701 00a2 5A61     	 str r2,[r3,#20]
 160:../main.c     ****   for (i=0; i<NUM_BUTTONS; i++)
 702              	 .loc 4 160 0
 703 00a4 0023     	 mov r3,#0
 704 00a6 FB60     	 str r3,[r7,#12]
 705 00a8 07E0     	 b .L23
 706              	.L24:
 161:../main.c     ****   {
 162:../main.c     **** 	  button_status[i]=UNPRESSED;
 707              	 .loc 4 162 0 discriminator 3
 708 00aa 8C4A     	 ldr r2,.L48+44
 709 00ac FB68     	 ldr r3,[r7,#12]
 710 00ae D318     	 add r3,r2,r3
 711 00b0 0022     	 mov r2,#0
 712 00b2 1A70     	 strb r2,[r3]
 160:../main.c     ****   for (i=0; i<NUM_BUTTONS; i++)
 713              	 .loc 4 160 0 discriminator 3
 714 00b4 FB68     	 ldr r3,[r7,#12]
 715 00b6 0133     	 add r3,r3,#1
 716 00b8 FB60     	 str r3,[r7,#12]
 717              	.L23:
 160:../main.c     ****   for (i=0; i<NUM_BUTTONS; i++)
 718              	 .loc 4 160 0 is_stmt 0 discriminator 1
 719 00ba FB68     	 ldr r3,[r7,#12]
 720 00bc 052B     	 cmp r3,#5
 721 00be F4DD     	 ble .L24
 722              	.L47:
 163:../main.c     ****   }
 164:../main.c     **** 
 165:../main.c     ****   while(FOREVER)
 166:../main.c     ****   {
 167:../main.c     ****     setup_game();
 723              	 .loc 4 167 0 is_stmt 1
 724 00c0 FFF7FEFF 	 bl setup_game
 168:../main.c     ****     winner_announced=0; // no-one has won this new game yet
 725              	 .loc 4 168 0
 726 00c4 0A23     	 mov r3,#10
 727 00c6 FB18     	 add r3,r7,r3
 728 00c8 0022     	 mov r2,#0
 729 00ca 1A70     	 strb r2,[r3]
 169:../main.c     ****     show_status();
 730              	 .loc 4 169 0
 731 00cc FFF7FEFF 	 bl show_status
 170:../main.c     ****     // wait in case a button is pressed, for it to be released
 171:../main.c     ****     while(a_button_pressed());
 732              	 .loc 4 171 0
 733 00d0 C046     	 mov r8,r8
 734              	.L25:
 735              	 .loc 4 171 0 is_stmt 0 discriminator 1
 736 00d2 FFF7FEFF 	 bl a_button_pressed
 737 00d6 031E     	 sub r3,r0,#0
 738 00d8 FBD1     	 bne .L25
 172:../main.c     ****     playing=1;
 739              	 .loc 4 172 0 is_stmt 1
 740 00da 814B     	 ldr r3,.L48+48
 741 00dc 0122     	 mov r2,#1
 742 00de 1A70     	 strb r2,[r3]
 173:../main.c     ****     while(playing)
 743              	 .loc 4 173 0
 744 00e0 DFE0     	 b .L26
 745              	.L46:
 174:../main.c     ****     {
 175:../main.c     ****        sel=user_play();
 746              	 .loc 4 175 0
 747 00e2 0823     	 mov r3,#8
 748 00e4 FC18     	 add r4,r7,r3
 749 00e6 FFF7FEFF 	 bl user_play
 750 00ea 031C     	 mov r3,r0
 751 00ec 2370     	 strb r3,[r4]
 176:../main.c     ****        if (sel==9) // a selection of 9 means the user has pressed the Computer button
 752              	 .loc 4 176 0
 753 00ee 0823     	 mov r3,#8
 754 00f0 FB18     	 add r3,r7,r3
 755 00f2 1B78     	 ldrb r3,[r3]
 756 00f4 092B     	 cmp r3,#9
 757 00f6 00D0     	 beq .LCB561
 758 00f8 BFE0     	 b .L27
 759              	.LCB561:
 177:../main.c     ****        {
 178:../main.c     ****          // time for the computer to play. But first check, has the
 179:../main.c     ****          // user actually won?
 180:../main.c     ****          check_winner=0;
 760              	 .loc 4 180 0
 761 00fa 0B23     	 mov r3,#11
 762 00fc FB18     	 add r3,r7,r3
 763 00fe 0022     	 mov r2,#0
 764 0100 1A70     	 strb r2,[r3]
 181:../main.c     ****          for (i=0; i<rows; i++)
 765              	 .loc 4 181 0
 766 0102 0023     	 mov r3,#0
 767 0104 FB60     	 str r3,[r7,#12]
 768 0106 0DE0     	 b .L28
 769              	.L29:
 182:../main.c     ****          {
 183:../main.c     ****            check_winner+=numsticks[i];
 770              	 .loc 4 183 0 discriminator 3
 771 0108 764A     	 ldr r2,.L48+52
 772 010a FB68     	 ldr r3,[r7,#12]
 773 010c D318     	 add r3,r2,r3
 774 010e 1978     	 ldrb r1,[r3]
 775 0110 0B23     	 mov r3,#11
 776 0112 FB18     	 add r3,r7,r3
 777 0114 0B22     	 mov r2,#11
 778 0116 BA18     	 add r2,r7,r2
 779 0118 1278     	 ldrb r2,[r2]
 780 011a 8A18     	 add r2,r1,r2
 781 011c 1A70     	 strb r2,[r3]
 181:../main.c     ****          for (i=0; i<rows; i++)
 782              	 .loc 4 181 0 discriminator 3
 783 011e FB68     	 ldr r3,[r7,#12]
 784 0120 0133     	 add r3,r3,#1
 785 0122 FB60     	 str r3,[r7,#12]
 786              	.L28:
 181:../main.c     ****          for (i=0; i<rows; i++)
 787              	 .loc 4 181 0 is_stmt 0 discriminator 1
 788 0124 704B     	 ldr r3,.L48+56
 789 0126 1B78     	 ldrb r3,[r3]
 790 0128 1A1E     	 sub r2,r3,#0
 791 012a FB68     	 ldr r3,[r7,#12]
 792 012c 9A42     	 cmp r2,r3
 793 012e EBDC     	 bgt .L29
 184:../main.c     ****          }
 185:../main.c     ****          if (check_winner==1) // user has won
 794              	 .loc 4 185 0 is_stmt 1
 795 0130 0B23     	 mov r3,#11
 796 0132 FB18     	 add r3,r7,r3
 797 0134 1B78     	 ldrb r3,[r3]
 798 0136 012B     	 cmp r3,#1
 799 0138 1BD1     	 bne .L30
 186:../main.c     ****          {
 187:../main.c     ****            if (winner_announced==0)
 800              	 .loc 4 187 0
 801 013a 0A23     	 mov r3,#10
 802 013c FB18     	 add r3,r7,r3
 803 013e 1B78     	 ldrb r3,[r3]
 804 0140 002B     	 cmp r3,#0
 805 0142 1AD1     	 bne .L33
 188:../main.c     ****            {
 189:../main.c     ****              display_update_timer=1000;
 806              	 .loc 4 189 0
 807 0144 5C4B     	 ldr r3,.L48+8
 808 0146 FA22     	 mov r2,#250
 809 0148 9200     	 lsl r2,r2,#2
 810 014a 1A60     	 str r2,[r3]
 190:../main.c     ****              while(display_update_timer); // wait a bit. Because the computer is a sore loser
 811              	 .loc 4 190 0
 812 014c C046     	 mov r8,r8
 813              	.L32:
 814              	 .loc 4 190 0 is_stmt 0 discriminator 1
 815 014e 5A4B     	 ldr r3,.L48+8
 816 0150 1B68     	 ldr r3,[r3]
 817 0152 002B     	 cmp r3,#0
 818 0154 FBD1     	 bne .L32
 191:../main.c     ****              play_tone(1); // play rising tone
 819              	 .loc 4 191 0 is_stmt 1
 820 0156 0120     	 mov r0,#1
 821 0158 FFF7FEFF 	 bl play_tone
 192:../main.c     ****              scroll_text("YOU WIN  ", 9, 0);
 822              	 .loc 4 192 0
 823 015c 634B     	 ldr r3,.L48+60
 824 015e 181C     	 mov r0,r3
 825 0160 0921     	 mov r1,#9
 826 0162 0022     	 mov r2,#0
 827 0164 FFF7FEFF 	 bl scroll_text
 193:../main.c     ****              winner_announced=1;
 828              	 .loc 4 193 0
 829 0168 0A23     	 mov r3,#10
 830 016a FB18     	 add r3,r7,r3
 831 016c 0122     	 mov r2,#1
 832 016e 1A70     	 strb r2,[r3]
 833 0170 03E0     	 b .L33
 834              	.L30:
 194:../main.c     ****            }
 195:../main.c     ****          }
 196:../main.c     ****          else
 197:../main.c     ****          {
 198:../main.c     ****            check_winner=0;
 835              	 .loc 4 198 0
 836 0172 0B23     	 mov r3,#11
 837 0174 FB18     	 add r3,r7,r3
 838 0176 0022     	 mov r2,#0
 839 0178 1A70     	 strb r2,[r3]
 840              	.L33:
 199:../main.c     ****          }
 200:../main.c     ****          // make a backup of the number of sticks before the computer plays
 201:../main.c     ****          // so we can do a blinking animation of the computer move
 202:../main.c     ****          for (i=0; i<rows; i++)
 841              	 .loc 4 202 0
 842 017a 0023     	 mov r3,#0
 843 017c FB60     	 str r3,[r7,#12]
 844 017e 0BE0     	 b .L34
 845              	.L35:
 203:../main.c     ****          {
 204:../main.c     ****            oldnumsticks[i]=numsticks[i];
 846              	 .loc 4 204 0 discriminator 3
 847 0180 584A     	 ldr r2,.L48+52
 848 0182 FB68     	 ldr r3,[r7,#12]
 849 0184 D318     	 add r3,r2,r3
 850 0186 1978     	 ldrb r1,[r3]
 851 0188 3A1C     	 mov r2,r7
 852 018a FB68     	 ldr r3,[r7,#12]
 853 018c D318     	 add r3,r2,r3
 854 018e 0A1C     	 add r2,r1,#0
 855 0190 1A70     	 strb r2,[r3]
 202:../main.c     ****          {
 856              	 .loc 4 202 0 discriminator 3
 857 0192 FB68     	 ldr r3,[r7,#12]
 858 0194 0133     	 add r3,r3,#1
 859 0196 FB60     	 str r3,[r7,#12]
 860              	.L34:
 202:../main.c     ****          {
 861              	 .loc 4 202 0 is_stmt 0 discriminator 1
 862 0198 534B     	 ldr r3,.L48+56
 863 019a 1B78     	 ldrb r3,[r3]
 864 019c 1A1E     	 sub r2,r3,#0
 865 019e FB68     	 ldr r3,[r7,#12]
 866 01a0 9A42     	 cmp r2,r3
 867 01a2 EDDC     	 bgt .L35
 205:../main.c     ****          }
 206:../main.c     ****          if (winner_announced==0)
 868              	 .loc 4 206 0 is_stmt 1
 869 01a4 0A23     	 mov r3,#10
 870 01a6 FB18     	 add r3,r7,r3
 871 01a8 1B78     	 ldrb r3,[r3]
 872 01aa 002B     	 cmp r3,#0
 873 01ac 01D1     	 bne .L36
 207:../main.c     ****          {
 208:../main.c     ****            computer_play();
 874              	 .loc 4 208 0
 875 01ae FFF7FEFF 	 bl computer_play
 876              	.L36:
 209:../main.c     ****          }
 210:../main.c     ****          // lets blink the computer played move a few times
 211:../main.c     ****          for (i=0; i<2; i++)
 877              	 .loc 4 211 0
 878 01b2 0023     	 mov r3,#0
 879 01b4 FB60     	 str r3,[r7,#12]
 880 01b6 1EE0     	 b .L37
 881              	.L40:
 212:../main.c     ****          {
 213:../main.c     ****            plot_ram_rows(numsticks);
 882              	 .loc 4 213 0
 883 01b8 4A4B     	 ldr r3,.L48+52
 884 01ba 181C     	 mov r0,r3
 885 01bc FFF7FEFF 	 bl plot_ram_rows
 214:../main.c     ****            display_write();
 886              	 .loc 4 214 0
 887 01c0 FFF7FEFF 	 bl display_write
 215:../main.c     ****            display_update_timer=200;
 888              	 .loc 4 215 0
 889 01c4 3C4B     	 ldr r3,.L48+8
 890 01c6 C822     	 mov r2,#200
 891 01c8 1A60     	 str r2,[r3]
 216:../main.c     ****            while(display_update_timer);
 892              	 .loc 4 216 0
 893 01ca C046     	 mov r8,r8
 894              	.L38:
 895              	 .loc 4 216 0 is_stmt 0 discriminator 1
 896 01cc 3A4B     	 ldr r3,.L48+8
 897 01ce 1B68     	 ldr r3,[r3]
 898 01d0 002B     	 cmp r3,#0
 899 01d2 FBD1     	 bne .L38
 217:../main.c     ****            plot_ram_rows(oldnumsticks);
 900              	 .loc 4 217 0 is_stmt 1
 901 01d4 3B1C     	 mov r3,r7
 902 01d6 181C     	 mov r0,r3
 903 01d8 FFF7FEFF 	 bl plot_ram_rows
 218:../main.c     ****            display_write();
 904              	 .loc 4 218 0
 905 01dc FFF7FEFF 	 bl display_write
 219:../main.c     ****            display_update_timer=200;
 906              	 .loc 4 219 0
 907 01e0 354B     	 ldr r3,.L48+8
 908 01e2 C822     	 mov r2,#200
 909 01e4 1A60     	 str r2,[r3]
 220:../main.c     ****            while(display_update_timer);
 910              	 .loc 4 220 0
 911 01e6 C046     	 mov r8,r8
 912              	.L39:
 913              	 .loc 4 220 0 is_stmt 0 discriminator 1
 914 01e8 334B     	 ldr r3,.L48+8
 915 01ea 1B68     	 ldr r3,[r3]
 916 01ec 002B     	 cmp r3,#0
 917 01ee FBD1     	 bne .L39
 211:../main.c     ****          {
 918              	 .loc 4 211 0 is_stmt 1 discriminator 2
 919 01f0 FB68     	 ldr r3,[r7,#12]
 920 01f2 0133     	 add r3,r3,#1
 921 01f4 FB60     	 str r3,[r7,#12]
 922              	.L37:
 211:../main.c     ****          {
 923              	 .loc 4 211 0 is_stmt 0 discriminator 1
 924 01f6 FB68     	 ldr r3,[r7,#12]
 925 01f8 012B     	 cmp r3,#1
 926 01fa DDDD     	 ble .L40
 221:../main.c     ****          }
 222:../main.c     ****          // has computer won?
 223:../main.c     ****          if ((check_winner==0) && (winner_announced==0)) // computer has not lost yet..
 927              	 .loc 4 223 0 is_stmt 1
 928 01fc 0B23     	 mov r3,#11
 929 01fe FB18     	 add r3,r7,r3
 930 0200 1B78     	 ldrb r3,[r3]
 931 0202 002B     	 cmp r3,#0
 932 0204 4BD1     	 bne .L45
 933              	 .loc 4 223 0 is_stmt 0 discriminator 1
 934 0206 0A23     	 mov r3,#10
 935 0208 FB18     	 add r3,r7,r3
 936 020a 1B78     	 ldrb r3,[r3]
 937 020c 002B     	 cmp r3,#0
 938 020e 46D1     	 bne .L45
 224:../main.c     ****          {
 225:../main.c     ****            for (i=0; i<rows; i++)
 939              	 .loc 4 225 0 is_stmt 1
 940 0210 0023     	 mov r3,#0
 941 0212 FB60     	 str r3,[r7,#12]
 942 0214 0DE0     	 b .L42
 943              	.L43:
 226:../main.c     ****            {
 227:../main.c     ****              check_winner+=numsticks[i];
 944              	 .loc 4 227 0 discriminator 3
 945 0216 334A     	 ldr r2,.L48+52
 946 0218 FB68     	 ldr r3,[r7,#12]
 947 021a D318     	 add r3,r2,r3
 948 021c 1978     	 ldrb r1,[r3]
 949 021e 0B23     	 mov r3,#11
 950 0220 FB18     	 add r3,r7,r3
 951 0222 0B22     	 mov r2,#11
 952 0224 BA18     	 add r2,r7,r2
 953 0226 1278     	 ldrb r2,[r2]
 954 0228 8A18     	 add r2,r1,r2
 955 022a 1A70     	 strb r2,[r3]
 225:../main.c     ****            {
 956              	 .loc 4 225 0 discriminator 3
 957 022c FB68     	 ldr r3,[r7,#12]
 958 022e 0133     	 add r3,r3,#1
 959 0230 FB60     	 str r3,[r7,#12]
 960              	.L42:
 225:../main.c     ****            {
 961              	 .loc 4 225 0 is_stmt 0 discriminator 1
 962 0232 2D4B     	 ldr r3,.L48+56
 963 0234 1B78     	 ldrb r3,[r3]
 964 0236 1A1E     	 sub r2,r3,#0
 965 0238 FB68     	 ldr r3,[r7,#12]
 966 023a 9A42     	 cmp r2,r3
 967 023c EBDC     	 bgt .L43
 228:../main.c     ****            }
 229:../main.c     ****            if (check_winner==1) // computer won
 968              	 .loc 4 229 0 is_stmt 1
 969 023e 0B23     	 mov r3,#11
 970 0240 FB18     	 add r3,r7,r3
 971 0242 1B78     	 ldrb r3,[r3]
 972 0244 012B     	 cmp r3,#1
 973 0246 2AD1     	 bne .L45
 230:../main.c     ****            {
 231:../main.c     ****              show_status();
 974              	 .loc 4 231 0
 975 0248 FFF7FEFF 	 bl show_status
 232:../main.c     ****              display_update_timer=1000;
 976              	 .loc 4 232 0
 977 024c 1A4B     	 ldr r3,.L48+8
 978 024e FA22     	 mov r2,#250
 979 0250 9200     	 lsl r2,r2,#2
 980 0252 1A60     	 str r2,[r3]
 233:../main.c     ****              while(display_update_timer);
 981              	 .loc 4 233 0
 982 0254 C046     	 mov r8,r8
 983              	.L44:
 984              	 .loc 4 233 0 is_stmt 0 discriminator 1
 985 0256 184B     	 ldr r3,.L48+8
 986 0258 1B68     	 ldr r3,[r3]
 987 025a 002B     	 cmp r3,#0
 988 025c FBD1     	 bne .L44
 234:../main.c     ****              play_tone(0); // play falling tone
 989              	 .loc 4 234 0 is_stmt 1
 990 025e 0020     	 mov r0,#0
 991 0260 FFF7FEFF 	 bl play_tone
 235:../main.c     ****              scroll_text("LOSER  ", 7, 0);
 992              	 .loc 4 235 0
 993 0264 224B     	 ldr r3,.L48+64
 994 0266 181C     	 mov r0,r3
 995 0268 0721     	 mov r1,#7
 996 026a 0022     	 mov r2,#0
 997 026c FFF7FEFF 	 bl scroll_text
 236:../main.c     ****              winner_announced=1;
 998              	 .loc 4 236 0
 999 0270 0A23     	 mov r3,#10
 1000 0272 FB18     	 add r3,r7,r3
 1001 0274 0122     	 mov r2,#1
 1002 0276 1A70     	 strb r2,[r3]
 1003 0278 11E0     	 b .L45
 1004              	.L27:
 237:../main.c     ****            }
 238:../main.c     ****          }
 239:../main.c     ****        }
 240:../main.c     ****        else if (sel>100) // this signifies that a command has arrived (Computer button was held dow
 1005              	 .loc 4 240 0
 1006 027a 0823     	 mov r3,#8
 1007 027c FB18     	 add r3,r7,r3
 1008 027e 1B78     	 ldrb r3,[r3]
 1009 0280 642B     	 cmp r3,#100
 1010 0282 0CD9     	 bls .L45
 241:../main.c     ****        {
 242:../main.c     ****          // start a new game, at the level selected in the command
 243:../main.c     ****          level=sel-100;
 1011              	 .loc 4 243 0
 1012 0284 0823     	 mov r3,#8
 1013 0286 FB18     	 add r3,r7,r3
 1014 0288 1B78     	 ldrb r3,[r3]
 1015 028a 643B     	 sub r3,r3,#100
 1016 028c DAB2     	 uxtb r2,r3
 1017 028e 194B     	 ldr r3,.L48+68
 1018 0290 1A70     	 strb r2,[r3]
 244:../main.c     ****          playing=0;
 1019              	 .loc 4 244 0
 1020 0292 134B     	 ldr r3,.L48+48
 1021 0294 0022     	 mov r2,#0
 1022 0296 1A70     	 strb r2,[r3]
 245:../main.c     ****          command_press=0;
 1023              	 .loc 4 245 0
 1024 0298 174B     	 ldr r3,.L48+72
 1025 029a 0022     	 mov r2,#0
 1026 029c 1A70     	 strb r2,[r3]
 1027              	.L45:
 246:../main.c     ****        }
 247:../main.c     ****        show_status();
 1028              	 .loc 4 247 0
 1029 029e FFF7FEFF 	 bl show_status
 1030              	.L26:
 173:../main.c     ****     {
 1031              	 .loc 4 173 0
 1032 02a2 0F4B     	 ldr r3,.L48+48
 1033 02a4 1B78     	 ldrb r3,[r3]
 1034 02a6 002B     	 cmp r3,#0
 1035 02a8 00D0     	 beq .LCB808
 1036 02aa 1AE7     	 b .L46
 1037              	.LCB808:
 248:../main.c     ****     }
 249:../main.c     ****   }
 1038              	 .loc 4 249 0
 1039 02ac 08E7     	 b .L47
 1040              	.L49:
 1041 02ae C046     	 .align 2
 1042              	.L48:
 1043 02b0 00000000 	 .word fast_tick
 1044 02b4 00000000 	 .word timer_id
 1045 02b8 00000000 	 .word display_update_timer
 1046 02bc 00000000 	 .word .LC3
 1047 02c0 00000000 	 .word button_handle
 1048 02c4 00000000 	 .word button1
 1049 02c8 00000000 	 .word button2
 1050 02cc 00000000 	 .word button3
 1051 02d0 00000000 	 .word button4
 1052 02d4 00000000 	 .word button5
 1053 02d8 00000000 	 .word button_computer
 1054 02dc 00000000 	 .word button_status
 1055 02e0 00000000 	 .word playing
 1056 02e4 00000000 	 .word numsticks
 1057 02e8 00000000 	 .word rows
 1058 02ec 08000000 	 .word .LC16
 1059 02f0 14000000 	 .word .LC18
 1060 02f4 00000000 	 .word level
 1061 02f8 00000000 	 .word command_press
 1062              	 .cfi_endproc
 1063              	.LFE197:
 1065              	 .section .text.a_button_pressed,"ax",%progbits
 1066              	 .align 2
 1067              	 .global a_button_pressed
 1068              	 .code 16
 1069              	 .thumb_func
 1071              	a_button_pressed:
 1072              	.LFB198:
 250:../main.c     **** 
 251:../main.c     ****   return(0); // this should never execute
 252:../main.c     **** }
 253:../main.c     **** 
 254:../main.c     **** 
 255:../main.c     **** 
 256:../main.c     **** /****************************************
 257:../main.c     ****  * functions
 258:../main.c     ****  ****************************************/
 259:../main.c     **** 
 260:../main.c     **** /* a_button_pressed returns 1 if any button is pressed according to the button press
 261:../main.c     ****  * status array
 262:../main.c     ****  */
 263:../main.c     **** char
 264:../main.c     **** a_button_pressed(void)
 265:../main.c     **** {
 1073              	 .loc 4 265 0
 1074              	 .cfi_startproc
 1075 0000 80B5     	 push {r7,lr}
 1076              	.LCFI39:
 1077              	 .cfi_def_cfa_offset 8
 1078              	 .cfi_offset 7,-8
 1079              	 .cfi_offset 14,-4
 1080 0002 82B0     	 sub sp,sp,#8
 1081              	.LCFI40:
 1082              	 .cfi_def_cfa_offset 16
 1083 0004 00AF     	 add r7,sp,#0
 1084              	.LCFI41:
 1085              	 .cfi_def_cfa_register 7
 266:../main.c     ****   char status=0; // assume no button is pressed
 1086              	 .loc 4 266 0
 1087 0006 FB1D     	 add r3,r7,#7
 1088 0008 0022     	 mov r2,#0
 1089 000a 1A70     	 strb r2,[r3]
 267:../main.c     ****   unsigned char i;
 268:../main.c     ****   for (i=0; i<NUM_BUTTONS; i++)
 1090              	 .loc 4 268 0
 1091 000c BB1D     	 add r3,r7,#6
 1092 000e 0022     	 mov r2,#0
 1093 0010 1A70     	 strb r2,[r3]
 1094 0012 0EE0     	 b .L51
 1095              	.L54:
 269:../main.c     ****   {
 270:../main.c     ****     if (button_status[i]!=UNPRESSED)
 1096              	 .loc 4 270 0
 1097 0014 BB1D     	 add r3,r7,#6
 1098 0016 1B78     	 ldrb r3,[r3]
 1099 0018 104A     	 ldr r2,.L57
 1100 001a D35C     	 ldrb r3,[r2,r3]
 1101 001c 002B     	 cmp r3,#0
 1102 001e 03D0     	 beq .L52
 271:../main.c     ****     {
 272:../main.c     ****       status=1; // a button was pressed!
 1103              	 .loc 4 272 0
 1104 0020 FB1D     	 add r3,r7,#7
 1105 0022 0122     	 mov r2,#1
 1106 0024 1A70     	 strb r2,[r3]
 273:../main.c     ****       break;
 1107              	 .loc 4 273 0
 1108 0026 08E0     	 b .L53
 1109              	.L52:
 268:../main.c     ****   {
 1110              	 .loc 4 268 0 discriminator 2
 1111 0028 BB1D     	 add r3,r7,#6
 1112 002a 1A78     	 ldrb r2,[r3]
 1113 002c BB1D     	 add r3,r7,#6
 1114 002e 0132     	 add r2,r2,#1
 1115 0030 1A70     	 strb r2,[r3]
 1116              	.L51:
 268:../main.c     ****   {
 1117              	 .loc 4 268 0 is_stmt 0 discriminator 1
 1118 0032 BB1D     	 add r3,r7,#6
 1119 0034 1B78     	 ldrb r3,[r3]
 1120 0036 052B     	 cmp r3,#5
 1121 0038 ECD9     	 bls .L54
 1122              	.L53:
 274:../main.c     ****     }
 275:../main.c     ****   }
 276:../main.c     ****   if (status==0)
 1123              	 .loc 4 276 0 is_stmt 1
 1124 003a FB1D     	 add r3,r7,#7
 1125 003c 1B78     	 ldrb r3,[r3]
 1126 003e 002B     	 cmp r3,#0
 1127 0040 06D1     	 bne .L55
 277:../main.c     ****   {
 278:../main.c     ****     if (do_all_button_inhibit==1)
 1128              	 .loc 4 278 0
 1129 0042 074B     	 ldr r3,.L57+4
 1130 0044 1B78     	 ldrb r3,[r3]
 1131 0046 012B     	 cmp r3,#1
 1132 0048 02D1     	 bne .L55
 279:../main.c     ****       status=1; // we're in a button release debounce period. Consider it still pressed!
 1133              	 .loc 4 279 0
 1134 004a FB1D     	 add r3,r7,#7
 1135 004c 0122     	 mov r2,#1
 1136 004e 1A70     	 strb r2,[r3]
 1137              	.L55:
 280:../main.c     ****   }
 281:../main.c     **** 
 282:../main.c     ****   return(status);
 1138              	 .loc 4 282 0
 1139 0050 FB1D     	 add r3,r7,#7
 1140 0052 1B78     	 ldrb r3,[r3]
 283:../main.c     **** }
 1141              	 .loc 4 283 0
 1142 0054 181C     	 mov r0,r3
 1143 0056 BD46     	 mov sp,r7
 1144 0058 02B0     	 add sp,sp,#8
 1145              	 
 1146 005a 80BD     	 pop {r7,pc}
 1147              	.L58:
 1148              	 .align 2
 1149              	.L57:
 1150 005c 00000000 	 .word button_status
 1151 0060 00000000 	 .word do_all_button_inhibit
 1152              	 .cfi_endproc
 1153              	.LFE198:
 1155              	 .section .text.fast_tick,"ax",%progbits
 1156              	 .align 2
 1157              	 .global fast_tick
 1158              	 .code 16
 1159              	 .thumb_func
 1161              	fast_tick:
 1162              	.LFB199:
 284:../main.c     **** 
 285:../main.c     **** /* fast_tick
 286:../main.c     ****  * occurs every millisecond
 287:../main.c     ****  * we use this single timer to do several things,
 288:../main.c     ****  * but mainly to handle button debounce
 289:../main.c     ****  */
 290:../main.c     **** void
 291:../main.c     **** fast_tick(void)
 292:../main.c     **** {
 1163              	 .loc 4 292 0
 1164              	 .cfi_startproc
 1165 0000 80B5     	 push {r7,lr}
 1166              	.LCFI42:
 1167              	 .cfi_def_cfa_offset 8
 1168              	 .cfi_offset 7,-8
 1169              	 .cfi_offset 14,-4
 1170 0002 82B0     	 sub sp,sp,#8
 1171              	.LCFI43:
 1172              	 .cfi_def_cfa_offset 16
 1173 0004 00AF     	 add r7,sp,#0
 1174              	.LCFI44:
 1175              	 .cfi_def_cfa_register 7
 293:../main.c     **** 	unsigned char pressed=0;
 1176              	 .loc 4 293 0
 1177 0006 FB1D     	 add r3,r7,#7
 1178 0008 0022     	 mov r2,#0
 1179 000a 1A70     	 strb r2,[r3]
 294:../main.c     **** 	unsigned char i;
 295:../main.c     **** 	unsigned char already_recorded_press=0;
 1180              	 .loc 4 295 0
 1181 000c 7B1D     	 add r3,r7,#5
 1182 000e 0022     	 mov r2,#0
 1183 0010 1A70     	 strb r2,[r3]
 296:../main.c     **** 
 297:../main.c     **** 	randreg++; // this acts like a seed to the random number generator
 1184              	 .loc 4 297 0
 1185 0012 5A4B     	 ldr r3,.L73
 1186 0014 1B88     	 ldrh r3,[r3]
 1187 0016 0133     	 add r3,r3,#1
 1188 0018 9AB2     	 uxth r2,r3
 1189 001a 584B     	 ldr r3,.L73
 1190 001c 1A80     	 strh r2,[r3]
 298:../main.c     **** 
 299:../main.c     **** 	// some timers that can be set and read from the application
 300:../main.c     **** 	if (general_timer>0)
 1191              	 .loc 4 300 0
 1192 001e 584B     	 ldr r3,.L73+4
 1193 0020 1B68     	 ldr r3,[r3]
 1194 0022 002B     	 cmp r3,#0
 1195 0024 04D0     	 beq .L60
 301:../main.c     **** 	  general_timer--;
 1196              	 .loc 4 301 0
 1197 0026 564B     	 ldr r3,.L73+4
 1198 0028 1B68     	 ldr r3,[r3]
 1199 002a 5A1E     	 sub r2,r3,#1
 1200 002c 544B     	 ldr r3,.L73+4
 1201 002e 1A60     	 str r2,[r3]
 1202              	.L60:
 302:../main.c     **** 
 303:../main.c     **** 	heartbeat_timer--;
 1203              	 .loc 4 303 0
 1204 0030 544B     	 ldr r3,.L73+8
 1205 0032 1B68     	 ldr r3,[r3]
 1206 0034 5A1E     	 sub r2,r3,#1
 1207 0036 534B     	 ldr r3,.L73+8
 1208 0038 1A60     	 str r2,[r3]
 304:../main.c     **** 	if (heartbeat_timer==0)
 1209              	 .loc 4 304 0
 1210 003a 524B     	 ldr r3,.L73+8
 1211 003c 1B68     	 ldr r3,[r3]
 1212 003e 002B     	 cmp r3,#0
 1213 0040 07D1     	 bne .L61
 305:../main.c     **** 	{
 306:../main.c     **** 	  heartbeat_timer=HEARTBEAT_DELAY;
 1214              	 .loc 4 306 0
 1215 0042 504B     	 ldr r3,.L73+8
 1216 0044 FA22     	 mov r2,#250
 1217 0046 5200     	 lsl r2,r2,#1
 1218 0048 1A60     	 str r2,[r3]
 307:../main.c     **** 	  DIGITAL_IO_ToggleOutput(&led2);
 1219              	 .loc 4 307 0
 1220 004a 4F4B     	 ldr r3,.L73+12
 1221 004c 181C     	 mov r0,r3
 1222 004e FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
 1223              	.L61:
 308:../main.c     **** 	}
 309:../main.c     **** 
 310:../main.c     **** 	// this timer is important for giving the display time to do its thing.
 311:../main.c     **** 	// otherwise the display can hang.
 312:../main.c     **** 	if (display_update_timer>0)
 1224              	 .loc 4 312 0
 1225 0052 4E4B     	 ldr r3,.L73+16
 1226 0054 1B68     	 ldr r3,[r3]
 1227 0056 002B     	 cmp r3,#0
 1228 0058 04D0     	 beq .L62
 313:../main.c     **** 	  display_update_timer--;
 1229              	 .loc 4 313 0
 1230 005a 4C4B     	 ldr r3,.L73+16
 1231 005c 1B68     	 ldr r3,[r3]
 1232 005e 5A1E     	 sub r2,r3,#1
 1233 0060 4A4B     	 ldr r3,.L73+16
 1234 0062 1A60     	 str r2,[r3]
 1235              	.L62:
 314:../main.c     **** 
 315:../main.c     **** 	// Handle button presses. The strategy is that on each tick, the
 316:../main.c     **** 	// buttons are checked, and if one is pressed then it is registered
 317:../main.c     **** 	// as FIRST_PRESS in the button_status array. But if the array
 318:../main.c     **** 	// contains any non-UNPRESSED value, then no button is
 319:../main.c     **** 	// registered. After a minimum of a debounce period, the button is
 320:../main.c     **** 	// unregistered, if it has been released.
 321:../main.c     **** 	// The point of all this is to do button debounce, but also to
 322:../main.c     **** 	// immediately take action on a button press (and not wait for
 323:../main.c     **** 	// a debounce period, or for the button to be released).
 324:../main.c     **** 	// No button is allowed to be registered until a further
 325:../main.c     **** 	// minimum of a release period.
 326:../main.c     **** 
 327:../main.c     **** 	if (do_all_button_inhibit==0)
 1236              	 .loc 4 327 0
 1237 0064 4A4B     	 ldr r3,.L73+20
 1238 0066 1B78     	 ldrb r3,[r3]
 1239 0068 002B     	 cmp r3,#0
 1240 006a 00D0     	 beq .LCB990
 1241 006c 74E0     	 b .L63
 1242              	.LCB990:
 328:../main.c     **** 	{
 329:../main.c     **** 		// check for button newly pressed
 330:../main.c     **** 		for (i=0; i<NUM_BUTTONS; i++)
 1243              	 .loc 4 330 0
 1244 006e BB1D     	 add r3,r7,#6
 1245 0070 0022     	 mov r2,#0
 1246 0072 1A70     	 strb r2,[r3]
 1247 0074 20E0     	 b .L64
 1248              	.L68:
 331:../main.c     **** 		{
 332:../main.c     **** 			if (button_status[i]==UNPRESSED)
 1249              	 .loc 4 332 0
 1250 0076 BB1D     	 add r3,r7,#6
 1251 0078 1B78     	 ldrb r3,[r3]
 1252 007a 464A     	 ldr r2,.L73+24
 1253 007c D35C     	 ldrb r3,[r2,r3]
 1254 007e 002B     	 cmp r3,#0
 1255 0080 10D1     	 bne .L65
 333:../main.c     **** 			{
 334:../main.c     **** 				if (DIGITAL_IO_GetInput(button_handle[i])!=1)
 1256              	 .loc 4 334 0
 1257 0082 BB1D     	 add r3,r7,#6
 1258 0084 1A78     	 ldrb r2,[r3]
 1259 0086 444B     	 ldr r3,.L73+28
 1260 0088 9200     	 lsl r2,r2,#2
 1261 008a D358     	 ldr r3,[r2,r3]
 1262 008c 181C     	 mov r0,r3
 1263 008e FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1264 0092 031E     	 sub r3,r0,#0
 1265 0094 012B     	 cmp r3,#1
 1266 0096 0AD0     	 beq .L67
 335:../main.c     **** 				{
 336:../main.c     **** 					pressed=i+1;
 1267              	 .loc 4 336 0
 1268 0098 FB1D     	 add r3,r7,#7
 1269 009a BA1D     	 add r2,r7,#6
 1270 009c 1278     	 ldrb r2,[r2]
 1271 009e 0132     	 add r2,r2,#1
 1272 00a0 1A70     	 strb r2,[r3]
 1273 00a2 04E0     	 b .L67
 1274              	.L65:
 337:../main.c     **** 				}
 338:../main.c     **** 			}
 339:../main.c     **** 			else
 340:../main.c     **** 			{
 341:../main.c     **** 				// a button is already recorded as pressed
 342:../main.c     **** 				already_recorded_press=i+1;
 1275              	 .loc 4 342 0
 1276 00a4 7B1D     	 add r3,r7,#5
 1277 00a6 BA1D     	 add r2,r7,#6
 1278 00a8 1278     	 ldrb r2,[r2]
 1279 00aa 0132     	 add r2,r2,#1
 1280 00ac 1A70     	 strb r2,[r3]
 1281              	.L67:
 330:../main.c     **** 		{
 1282              	 .loc 4 330 0 discriminator 2
 1283 00ae BB1D     	 add r3,r7,#6
 1284 00b0 1A78     	 ldrb r2,[r3]
 1285 00b2 BB1D     	 add r3,r7,#6
 1286 00b4 0132     	 add r2,r2,#1
 1287 00b6 1A70     	 strb r2,[r3]
 1288              	.L64:
 330:../main.c     **** 		{
 1289              	 .loc 4 330 0 is_stmt 0 discriminator 1
 1290 00b8 BB1D     	 add r3,r7,#6
 1291 00ba 1B78     	 ldrb r3,[r3]
 1292 00bc 052B     	 cmp r3,#5
 1293 00be DAD9     	 bls .L68
 343:../main.c     **** 			}
 344:../main.c     **** 		}
 345:../main.c     **** 		// special case. Was the computer button first held down, and
 346:../main.c     **** 		// then another button also pressed? That is a special command
 347:../main.c     **** 		// (i.e. to start the gave over
 348:../main.c     **** 		if (button_status[NUM_BUTTONS-1]!=UNPRESSED)
 1294              	 .loc 4 348 0 is_stmt 1
 1295 00c0 344B     	 ldr r3,.L73+24
 1296 00c2 5B79     	 ldrb r3,[r3,#5]
 1297 00c4 002B     	 cmp r3,#0
 1298 00c6 0FD0     	 beq .L69
 349:../main.c     **** 		{
 350:../main.c     **** 		  if ((pressed>0) && (pressed<NUM_BUTTONS))
 1299              	 .loc 4 350 0
 1300 00c8 FB1D     	 add r3,r7,#7
 1301 00ca 1B78     	 ldrb r3,[r3]
 1302 00cc 002B     	 cmp r3,#0
 1303 00ce 0BD0     	 beq .L69
 1304              	 .loc 4 350 0 is_stmt 0 discriminator 1
 1305 00d0 FB1D     	 add r3,r7,#7
 1306 00d2 1B78     	 ldrb r3,[r3]
 1307 00d4 052B     	 cmp r3,#5
 1308 00d6 07D8     	 bhi .L69
 351:../main.c     **** 		  {
 352:../main.c     **** 		    if (playing)
 1309              	 .loc 4 352 0 is_stmt 1
 1310 00d8 304B     	 ldr r3,.L73+32
 1311 00da 1B78     	 ldrb r3,[r3]
 1312 00dc 002B     	 cmp r3,#0
 1313 00de 03D0     	 beq .L69
 353:../main.c     **** 		    {
 354:../main.c     **** 		      command_press=pressed;
 1314              	 .loc 4 354 0
 1315 00e0 2F4B     	 ldr r3,.L73+36
 1316 00e2 FA1D     	 add r2,r7,#7
 1317 00e4 1278     	 ldrb r2,[r2]
 1318 00e6 1A70     	 strb r2,[r3]
 1319              	.L69:
 355:../main.c     **** 		    }
 356:../main.c     **** 		  }
 357:../main.c     **** 		}
 358:../main.c     **** 
 359:../main.c     **** 		if ((already_recorded_press==0) && (pressed>0))
 1320              	 .loc 4 359 0
 1321 00e8 7B1D     	 add r3,r7,#5
 1322 00ea 1B78     	 ldrb r3,[r3]
 1323 00ec 002B     	 cmp r3,#0
 1324 00ee 0DD1     	 bne .L70
 1325              	 .loc 4 359 0 is_stmt 0 discriminator 1
 1326 00f0 FB1D     	 add r3,r7,#7
 1327 00f2 1B78     	 ldrb r3,[r3]
 1328 00f4 002B     	 cmp r3,#0
 1329 00f6 09D0     	 beq .L70
 360:../main.c     **** 		{
 361:../main.c     **** 			button_status[pressed-1]=FIRST_PRESS;
 1330              	 .loc 4 361 0 is_stmt 1
 1331 00f8 FB1D     	 add r3,r7,#7
 1332 00fa 1B78     	 ldrb r3,[r3]
 1333 00fc 013B     	 sub r3,r3,#1
 1334 00fe 254A     	 ldr r2,.L73+24
 1335 0100 0121     	 mov r1,#1
 1336 0102 D154     	 strb r1,[r2,r3]
 362:../main.c     **** #ifdef DO_DEBUG
 363:../main.c     **** 			printf("pressed: %d\n", pressed-1);
 364:../main.c     **** #endif
 365:../main.c     **** 			press_ticks=0;
 1337              	 .loc 4 365 0
 1338 0104 274B     	 ldr r3,.L73+40
 1339 0106 0022     	 mov r2,#0
 1340 0108 1A60     	 str r2,[r3]
 1341 010a 34E0     	 b .L59
 1342              	.L70:
 366:../main.c     **** 		}
 367:../main.c     **** 		else if (already_recorded_press>0) // a button was already recorded as pressed
 1343              	 .loc 4 367 0
 1344 010c 7B1D     	 add r3,r7,#5
 1345 010e 1B78     	 ldrb r3,[r3]
 1346 0110 002B     	 cmp r3,#0
 1347 0112 30D0     	 beq .L59
 368:../main.c     **** 		{
 369:../main.c     **** 			press_ticks++;
 1348              	 .loc 4 369 0
 1349 0114 234B     	 ldr r3,.L73+40
 1350 0116 1B68     	 ldr r3,[r3]
 1351 0118 5A1C     	 add r2,r3,#1
 1352 011a 224B     	 ldr r3,.L73+40
 1353 011c 1A60     	 str r2,[r3]
 370:../main.c     **** 			if (press_ticks<DEBOUNCE_TICK_PERIOD)
 1354              	 .loc 4 370 0
 1355 011e 214B     	 ldr r3,.L73+40
 1356 0120 1B68     	 ldr r3,[r3]
 1357 0122 3B2B     	 cmp r3,#59
 1358 0124 27D9     	 bls .L59
 371:../main.c     **** 			{
 372:../main.c     **** 				// we assume button remains pressed for at least the
 373:../main.c     **** 				// debounce period
 374:../main.c     **** 			}
 375:../main.c     **** 			else
 376:../main.c     **** 			{
 377:../main.c     **** 				if (DIGITAL_IO_GetInput(button_handle[already_recorded_press-1])!=1)
 1359              	 .loc 4 377 0
 1360 0126 7B1D     	 add r3,r7,#5
 1361 0128 1B78     	 ldrb r3,[r3]
 1362 012a 5A1E     	 sub r2,r3,#1
 1363 012c 1A4B     	 ldr r3,.L73+28
 1364 012e 9200     	 lsl r2,r2,#2
 1365 0130 D358     	 ldr r3,[r2,r3]
 1366 0132 181C     	 mov r0,r3
 1367 0134 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1368 0138 031E     	 sub r3,r0,#0
 1369 013a 012B     	 cmp r3,#1
 1370 013c 1BD1     	 bne .L59
 378:../main.c     **** 				{
 379:../main.c     **** 					// the button is still pressed.
 380:../main.c     **** 				}
 381:../main.c     **** 				else
 382:../main.c     **** 				{
 383:../main.c     **** 					// the button is released.
 384:../main.c     **** 					button_status[already_recorded_press-1]=UNPRESSED;
 1371              	 .loc 4 384 0
 1372 013e 7B1D     	 add r3,r7,#5
 1373 0140 1B78     	 ldrb r3,[r3]
 1374 0142 013B     	 sub r3,r3,#1
 1375 0144 134A     	 ldr r2,.L73+24
 1376 0146 0021     	 mov r1,#0
 1377 0148 D154     	 strb r1,[r2,r3]
 385:../main.c     **** 					press_ticks=0;
 1378              	 .loc 4 385 0
 1379 014a 164B     	 ldr r3,.L73+40
 1380 014c 0022     	 mov r2,#0
 1381 014e 1A60     	 str r2,[r3]
 386:../main.c     **** 					do_all_button_inhibit=1;
 1382              	 .loc 4 386 0
 1383 0150 0F4B     	 ldr r3,.L73+20
 1384 0152 0122     	 mov r2,#1
 1385 0154 1A70     	 strb r2,[r3]
 1386 0156 0EE0     	 b .L59
 1387              	.L63:
 387:../main.c     **** 				}
 388:../main.c     **** 			}
 389:../main.c     **** 		}
 390:../main.c     **** 	}
 391:../main.c     **** 	else
 392:../main.c     **** 	{
 393:../main.c     **** 		// button presses are being ignored.
 394:../main.c     **** 		press_ticks++;
 1388              	 .loc 4 394 0
 1389 0158 124B     	 ldr r3,.L73+40
 1390 015a 1B68     	 ldr r3,[r3]
 1391 015c 5A1C     	 add r2,r3,#1
 1392 015e 114B     	 ldr r3,.L73+40
 1393 0160 1A60     	 str r2,[r3]
 395:../main.c     **** 		if (press_ticks<RELEASE_TICK_PERIOD)
 1394              	 .loc 4 395 0
 1395 0162 104B     	 ldr r3,.L73+40
 1396 0164 1B68     	 ldr r3,[r3]
 1397 0166 3B2B     	 cmp r3,#59
 1398 0168 05D9     	 bls .L59
 396:../main.c     **** 		{
 397:../main.c     **** 			// we're not done.. keep inhibiting button presses
 398:../main.c     **** 		}
 399:../main.c     **** 		else
 400:../main.c     **** 		{
 401:../main.c     **** 			do_all_button_inhibit=0;
 1399              	 .loc 4 401 0
 1400 016a 094B     	 ldr r3,.L73+20
 1401 016c 0022     	 mov r2,#0
 1402 016e 1A70     	 strb r2,[r3]
 402:../main.c     **** 			press_ticks=0;
 1403              	 .loc 4 402 0
 1404 0170 0C4B     	 ldr r3,.L73+40
 1405 0172 0022     	 mov r2,#0
 1406 0174 1A60     	 str r2,[r3]
 1407              	.L59:
 403:../main.c     **** 		}
 404:../main.c     **** 	}
 405:../main.c     **** }
 1408              	 .loc 4 405 0
 1409 0176 BD46     	 mov sp,r7
 1410 0178 02B0     	 add sp,sp,#8
 1411              	 
 1412 017a 80BD     	 pop {r7,pc}
 1413              	.L74:
 1414              	 .align 2
 1415              	.L73:
 1416 017c 00000000 	 .word randreg
 1417 0180 00000000 	 .word general_timer
 1418 0184 00000000 	 .word heartbeat_timer
 1419 0188 00000000 	 .word led2
 1420 018c 00000000 	 .word display_update_timer
 1421 0190 00000000 	 .word do_all_button_inhibit
 1422 0194 00000000 	 .word button_status
 1423 0198 00000000 	 .word button_handle
 1424 019c 00000000 	 .word playing
 1425 01a0 00000000 	 .word command_press
 1426 01a4 00000000 	 .word press_ticks
 1427              	 .cfi_endproc
 1428              	.LFE199:
 1430              	 .section .text.random_num,"ax",%progbits
 1431              	 .align 2
 1432              	 .global random_num
 1433              	 .code 16
 1434              	 .thumb_func
 1436              	random_num:
 1437              	.LFB200:
 406:../main.c     **** 
 407:../main.c     **** /* random_num
 408:../main.c     ****  * a random number generator. The magic numbers in this function represent wiring in
 409:../main.c     ****  * a linear feedback shift register, for a pseudorandom sequence.
 410:../main.c     ****  * The returned random number is in the range 0..255
 411:../main.c     ****  */
 412:../main.c     **** unsigned char
 413:../main.c     **** random_num(void)
 414:../main.c     **** {
 1438              	 .loc 4 414 0
 1439              	 .cfi_startproc
 1440 0000 80B5     	 push {r7,lr}
 1441              	.LCFI45:
 1442              	 .cfi_def_cfa_offset 8
 1443              	 .cfi_offset 7,-8
 1444              	 .cfi_offset 14,-4
 1445 0002 82B0     	 sub sp,sp,#8
 1446              	.LCFI46:
 1447              	 .cfi_def_cfa_offset 16
 1448 0004 00AF     	 add r7,sp,#0
 1449              	.LCFI47:
 1450              	 .cfi_def_cfa_register 7
 415:../main.c     ****   char i;
 416:../main.c     ****   for (i=0; i<=7; i++)
 1451              	 .loc 4 416 0
 1452 0006 FB1D     	 add r3,r7,#7
 1453 0008 0022     	 mov r2,#0
 1454 000a 1A70     	 strb r2,[r3]
 1455 000c 24E0     	 b .L76
 1456              	.L77:
 417:../main.c     ****   {
 418:../main.c     ****     randreg ^= randreg>>7;
 1457              	 .loc 4 418 0 discriminator 3
 1458 000e 184B     	 ldr r3,.L79
 1459 0010 1B88     	 ldrh r3,[r3]
 1460 0012 DB09     	 lsr r3,r3,#7
 1461 0014 9AB2     	 uxth r2,r3
 1462 0016 164B     	 ldr r3,.L79
 1463 0018 1B88     	 ldrh r3,[r3]
 1464 001a 5340     	 eor r3,r2
 1465 001c 9AB2     	 uxth r2,r3
 1466 001e 144B     	 ldr r3,.L79
 1467 0020 1A80     	 strh r2,[r3]
 419:../main.c     ****     randreg ^= randreg<<9;
 1468              	 .loc 4 419 0 discriminator 3
 1469 0022 134B     	 ldr r3,.L79
 1470 0024 1B88     	 ldrh r3,[r3]
 1471 0026 5B02     	 lsl r3,r3,#9
 1472 0028 9AB2     	 uxth r2,r3
 1473 002a 114B     	 ldr r3,.L79
 1474 002c 1B88     	 ldrh r3,[r3]
 1475 002e 9BB2     	 uxth r3,r3
 1476 0030 5340     	 eor r3,r2
 1477 0032 9BB2     	 uxth r3,r3
 1478 0034 9AB2     	 uxth r2,r3
 1479 0036 0E4B     	 ldr r3,.L79
 1480 0038 1A80     	 strh r2,[r3]
 420:../main.c     ****     randreg ^= randreg>>13;
 1481              	 .loc 4 420 0 discriminator 3
 1482 003a 0D4B     	 ldr r3,.L79
 1483 003c 1B88     	 ldrh r3,[r3]
 1484 003e 5B0B     	 lsr r3,r3,#13
 1485 0040 9AB2     	 uxth r2,r3
 1486 0042 0B4B     	 ldr r3,.L79
 1487 0044 1B88     	 ldrh r3,[r3]
 1488 0046 5340     	 eor r3,r2
 1489 0048 9AB2     	 uxth r2,r3
 1490 004a 094B     	 ldr r3,.L79
 1491 004c 1A80     	 strh r2,[r3]
 416:../main.c     ****   {
 1492              	 .loc 4 416 0 discriminator 3
 1493 004e FB1D     	 add r3,r7,#7
 1494 0050 1A78     	 ldrb r2,[r3]
 1495 0052 FB1D     	 add r3,r7,#7
 1496 0054 0132     	 add r2,r2,#1
 1497 0056 1A70     	 strb r2,[r3]
 1498              	.L76:
 416:../main.c     ****   {
 1499              	 .loc 4 416 0 is_stmt 0 discriminator 1
 1500 0058 FB1D     	 add r3,r7,#7
 1501 005a 1B78     	 ldrb r3,[r3]
 1502 005c 072B     	 cmp r3,#7
 1503 005e D6D9     	 bls .L77
 421:../main.c     ****   }
 422:../main.c     ****   return(unsigned char)(randreg & 0xff);
 1504              	 .loc 4 422 0 is_stmt 1
 1505 0060 034B     	 ldr r3,.L79
 1506 0062 1B88     	 ldrh r3,[r3]
 1507 0064 DBB2     	 uxtb r3,r3
 423:../main.c     **** }
 1508              	 .loc 4 423 0
 1509 0066 181C     	 mov r0,r3
 1510 0068 BD46     	 mov sp,r7
 1511 006a 02B0     	 add sp,sp,#8
 1512              	 
 1513 006c 80BD     	 pop {r7,pc}
 1514              	.L80:
 1515 006e C046     	 .align 2
 1516              	.L79:
 1517 0070 00000000 	 .word randreg
 1518              	 .cfi_endproc
 1519              	.LFE200:
 1521              	 .section .text.setup_game,"ax",%progbits
 1522              	 .align 2
 1523              	 .global setup_game
 1524              	 .code 16
 1525              	 .thumb_func
 1527              	setup_game:
 1528              	.LFB201:
 424:../main.c     **** 
 425:../main.c     **** /* setup_game
 426:../main.c     ****  * this function initializes the numsticks array, and the number of rows in the
 427:../main.c     ****  * game, depending on difficulty level. */
 428:../main.c     **** void
 429:../main.c     **** setup_game(void)
 430:../main.c     **** {
 1529              	 .loc 4 430 0
 1530              	 .cfi_startproc
 1531 0000 90B5     	 push {r4,r7,lr}
 1532              	.LCFI48:
 1533              	 .cfi_def_cfa_offset 12
 1534              	 .cfi_offset 4,-12
 1535              	 .cfi_offset 7,-8
 1536              	 .cfi_offset 14,-4
 1537 0002 83B0     	 sub sp,sp,#12
 1538              	.LCFI49:
 1539              	 .cfi_def_cfa_offset 24
 1540 0004 00AF     	 add r7,sp,#0
 1541              	.LCFI50:
 1542              	 .cfi_def_cfa_register 7
 431:../main.c     ****   unsigned char i;
 432:../main.c     ****   switch(level)
 1543              	 .loc 4 432 0
 1544 0006 434B     	 ldr r3,.L93
 1545 0008 1B78     	 ldrb r3,[r3]
 1546 000a 052B     	 cmp r3,#5
 1547 000c 00D9     	 bls .LCB1271
 1548 000e 7DE0     	 b .L81
 1549              	.LCB1271:
 1550 0010 9A00     	 lsl r2,r3,#2
 1551 0012 414B     	 ldr r3,.L93+4
 1552 0014 D318     	 add r3,r2,r3
 1553 0016 1B68     	 ldr r3,[r3]
 1554 0018 9F46     	 mov pc,r3
 1555              	 .section .rodata.setup_game,"a",%progbits
 1556              	 .align 2
 1557              	.L84:
 1558 0000 0C010000 	 .word .L81
 1559 0004 F2000000 	 .word .L83
 1560 0008 D2000000 	 .word .L85
 1561 000c B2000000 	 .word .L86
 1562 0010 66000000 	 .word .L87
 1563 0014 1A000000 	 .word .L88
 1564              	 .section .text.setup_game
 1565              	.L88:
 433:../main.c     ****   {
 434:../main.c     ****     case 5: // hardest. Random number of sticks in each row.
 435:../main.c     ****       // Note: the 8x8 LED matrix implementation will only have 4 rows
 436:../main.c     ****       // and 4 buttons, so this level selection will not be possible.
 437:../main.c     ****       rows=5;
 1566              	 .loc 4 437 0
 1567 001a 404B     	 ldr r3,.L93+8
 1568 001c 0522     	 mov r2,#5
 1569 001e 1A70     	 strb r2,[r3]
 438:../main.c     ****       for (i=0; i<rows; i++)
 1570              	 .loc 4 438 0
 1571 0020 FB1D     	 add r3,r7,#7
 1572 0022 0022     	 mov r2,#0
 1573 0024 1A70     	 strb r2,[r3]
 1574 0026 17E0     	 b .L89
 1575              	.L90:
 439:../main.c     ****       {
 440:../main.c     ****         numsticks[i]=random_num() & 0x07;
 1576              	 .loc 4 440 0 discriminator 3
 1577 0028 FB1D     	 add r3,r7,#7
 1578 002a 1C78     	 ldrb r4,[r3]
 1579 002c FFF7FEFF 	 bl random_num
 1580 0030 031C     	 mov r3,r0
 1581 0032 1A1C     	 mov r2,r3
 1582 0034 0723     	 mov r3,#7
 1583 0036 1340     	 and r3,r2
 1584 0038 DAB2     	 uxtb r2,r3
 1585 003a 394B     	 ldr r3,.L93+12
 1586 003c 1A55     	 strb r2,[r3,r4]
 441:../main.c     ****         numsticks[i]++; // value is between 1 and 8
 1587              	 .loc 4 441 0 discriminator 3
 1588 003e FB1D     	 add r3,r7,#7
 1589 0040 1B78     	 ldrb r3,[r3]
 1590 0042 374A     	 ldr r2,.L93+12
 1591 0044 D25C     	 ldrb r2,[r2,r3]
 1592 0046 0132     	 add r2,r2,#1
 1593 0048 D1B2     	 uxtb r1,r2
 1594 004a 354A     	 ldr r2,.L93+12
 1595 004c D154     	 strb r1,[r2,r3]
 438:../main.c     ****       for (i=0; i<rows; i++)
 1596              	 .loc 4 438 0 discriminator 3
 1597 004e FB1D     	 add r3,r7,#7
 1598 0050 1A78     	 ldrb r2,[r3]
 1599 0052 FB1D     	 add r3,r7,#7
 1600 0054 0132     	 add r2,r2,#1
 1601 0056 1A70     	 strb r2,[r3]
 1602              	.L89:
 438:../main.c     ****       for (i=0; i<rows; i++)
 1603              	 .loc 4 438 0 is_stmt 0 discriminator 1
 1604 0058 304B     	 ldr r3,.L93+8
 1605 005a 1B78     	 ldrb r3,[r3]
 1606 005c FA1D     	 add r2,r7,#7
 1607 005e 1278     	 ldrb r2,[r2]
 1608 0060 9A42     	 cmp r2,r3
 1609 0062 E1D3     	 bcc .L90
 442:../main.c     ****       }
 443:../main.c     ****       //numsticks[0]++; // one row can have up to 9 (not possible with this display)
 444:../main.c     ****       break;
 1610              	 .loc 4 444 0 is_stmt 1
 1611 0064 52E0     	 b .L81
 1612              	.L87:
 445:../main.c     ****     case 4: // hard. Random number of sticks in each row.
 446:../main.c     ****       rows=4;
 1613              	 .loc 4 446 0
 1614 0066 2D4B     	 ldr r3,.L93+8
 1615 0068 0422     	 mov r2,#4
 1616 006a 1A70     	 strb r2,[r3]
 447:../main.c     ****       for (i=0; i<rows; i++)
 1617              	 .loc 4 447 0
 1618 006c FB1D     	 add r3,r7,#7
 1619 006e 0022     	 mov r2,#0
 1620 0070 1A70     	 strb r2,[r3]
 1621 0072 17E0     	 b .L91
 1622              	.L92:
 448:../main.c     ****       {
 449:../main.c     ****         numsticks[i]=random_num() & 0x07;
 1623              	 .loc 4 449 0 discriminator 3
 1624 0074 FB1D     	 add r3,r7,#7
 1625 0076 1C78     	 ldrb r4,[r3]
 1626 0078 FFF7FEFF 	 bl random_num
 1627 007c 031C     	 mov r3,r0
 1628 007e 1A1C     	 mov r2,r3
 1629 0080 0723     	 mov r3,#7
 1630 0082 1340     	 and r3,r2
 1631 0084 DAB2     	 uxtb r2,r3
 1632 0086 264B     	 ldr r3,.L93+12
 1633 0088 1A55     	 strb r2,[r3,r4]
 450:../main.c     ****         numsticks[i]++; // value is between 1 and 8
 1634              	 .loc 4 450 0 discriminator 3
 1635 008a FB1D     	 add r3,r7,#7
 1636 008c 1B78     	 ldrb r3,[r3]
 1637 008e 244A     	 ldr r2,.L93+12
 1638 0090 D25C     	 ldrb r2,[r2,r3]
 1639 0092 0132     	 add r2,r2,#1
 1640 0094 D1B2     	 uxtb r1,r2
 1641 0096 224A     	 ldr r2,.L93+12
 1642 0098 D154     	 strb r1,[r2,r3]
 447:../main.c     ****       for (i=0; i<rows; i++)
 1643              	 .loc 4 447 0 discriminator 3
 1644 009a FB1D     	 add r3,r7,#7
 1645 009c 1A78     	 ldrb r2,[r3]
 1646 009e FB1D     	 add r3,r7,#7
 1647 00a0 0132     	 add r2,r2,#1
 1648 00a2 1A70     	 strb r2,[r3]
 1649              	.L91:
 447:../main.c     ****       for (i=0; i<rows; i++)
 1650              	 .loc 4 447 0 is_stmt 0 discriminator 1
 1651 00a4 1D4B     	 ldr r3,.L93+8
 1652 00a6 1B78     	 ldrb r3,[r3]
 1653 00a8 FA1D     	 add r2,r7,#7
 1654 00aa 1278     	 ldrb r2,[r2]
 1655 00ac 9A42     	 cmp r2,r3
 1656 00ae E1D3     	 bcc .L92
 451:../main.c     ****       }
 452:../main.c     ****       break;
 1657              	 .loc 4 452 0 is_stmt 1
 1658 00b0 2CE0     	 b .L81
 1659              	.L86:
 453:../main.c     ****     case 3: // moderate. Rows start with a pre-defined number of sticks.
 454:../main.c     ****       rows=4;
 1660              	 .loc 4 454 0
 1661 00b2 1A4B     	 ldr r3,.L93+8
 1662 00b4 0422     	 mov r2,#4
 1663 00b6 1A70     	 strb r2,[r3]
 455:../main.c     ****       numsticks[3]=7;
 1664              	 .loc 4 455 0
 1665 00b8 194B     	 ldr r3,.L93+12
 1666 00ba 0722     	 mov r2,#7
 1667 00bc DA70     	 strb r2,[r3,#3]
 456:../main.c     ****       numsticks[2]=5;
 1668              	 .loc 4 456 0
 1669 00be 184B     	 ldr r3,.L93+12
 1670 00c0 0522     	 mov r2,#5
 1671 00c2 9A70     	 strb r2,[r3,#2]
 457:../main.c     ****       numsticks[1]=3;
 1672              	 .loc 4 457 0
 1673 00c4 164B     	 ldr r3,.L93+12
 1674 00c6 0322     	 mov r2,#3
 1675 00c8 5A70     	 strb r2,[r3,#1]
 458:../main.c     ****       numsticks[0]=1;
 1676              	 .loc 4 458 0
 1677 00ca 154B     	 ldr r3,.L93+12
 1678 00cc 0122     	 mov r2,#1
 1679 00ce 1A70     	 strb r2,[r3]
 459:../main.c     ****       break;
 1680              	 .loc 4 459 0
 1681 00d0 1CE0     	 b .L81
 1682              	.L85:
 460:../main.c     ****     case 2: // intermediate. Rows start with a pre-defined number of sticks, and weakened play by t
 461:../main.c     ****       rows=4;
 1683              	 .loc 4 461 0
 1684 00d2 124B     	 ldr r3,.L93+8
 1685 00d4 0422     	 mov r2,#4
 1686 00d6 1A70     	 strb r2,[r3]
 462:../main.c     ****       numsticks[3]=7;
 1687              	 .loc 4 462 0
 1688 00d8 114B     	 ldr r3,.L93+12
 1689 00da 0722     	 mov r2,#7
 1690 00dc DA70     	 strb r2,[r3,#3]
 463:../main.c     ****       numsticks[2]=5;
 1691              	 .loc 4 463 0
 1692 00de 104B     	 ldr r3,.L93+12
 1693 00e0 0522     	 mov r2,#5
 1694 00e2 9A70     	 strb r2,[r3,#2]
 464:../main.c     ****       numsticks[1]=3;
 1695              	 .loc 4 464 0
 1696 00e4 0E4B     	 ldr r3,.L93+12
 1697 00e6 0322     	 mov r2,#3
 1698 00e8 5A70     	 strb r2,[r3,#1]
 465:../main.c     ****       numsticks[0]=1;
 1699              	 .loc 4 465 0
 1700 00ea 0D4B     	 ldr r3,.L93+12
 1701 00ec 0122     	 mov r2,#1
 1702 00ee 1A70     	 strb r2,[r3]
 466:../main.c     ****       break;
 1703              	 .loc 4 466 0
 1704 00f0 0CE0     	 b .L81
 1705              	.L83:
 467:../main.c     ****     case 1: // easy. Just three rows of pre-defined sticks and weakened play by the computer
 468:../main.c     ****       rows=3;
 1706              	 .loc 4 468 0
 1707 00f2 0A4B     	 ldr r3,.L93+8
 1708 00f4 0322     	 mov r2,#3
 1709 00f6 1A70     	 strb r2,[r3]
 469:../main.c     ****       numsticks[2]=5;
 1710              	 .loc 4 469 0
 1711 00f8 094B     	 ldr r3,.L93+12
 1712 00fa 0522     	 mov r2,#5
 1713 00fc 9A70     	 strb r2,[r3,#2]
 470:../main.c     ****       numsticks[1]=3;
 1714              	 .loc 4 470 0
 1715 00fe 084B     	 ldr r3,.L93+12
 1716 0100 0322     	 mov r2,#3
 1717 0102 5A70     	 strb r2,[r3,#1]
 471:../main.c     ****       numsticks[0]=1;
 1718              	 .loc 4 471 0
 1719 0104 064B     	 ldr r3,.L93+12
 1720 0106 0122     	 mov r2,#1
 1721 0108 1A70     	 strb r2,[r3]
 472:../main.c     ****       break;
 1722              	 .loc 4 472 0
 1723 010a C046     	 mov r8,r8
 1724              	.L81:
 473:../main.c     ****   }
 474:../main.c     **** }
 1725              	 .loc 4 474 0
 1726 010c BD46     	 mov sp,r7
 1727 010e 03B0     	 add sp,sp,#12
 1728              	 
 1729 0110 90BD     	 pop {r4,r7,pc}
 1730              	.L94:
 1731 0112 C046     	 .align 2
 1732              	.L93:
 1733 0114 00000000 	 .word level
 1734 0118 00000000 	 .word .L84
 1735 011c 00000000 	 .word rows
 1736 0120 00000000 	 .word numsticks
 1737              	 .cfi_endproc
 1738              	.LFE201:
 1740              	 .section .text.user_play,"ax",%progbits
 1741              	 .align 2
 1742              	 .global user_play
 1743              	 .code 16
 1744              	 .thumb_func
 1746              	user_play:
 1747              	.LFB202:
 475:../main.c     **** 
 476:../main.c     **** /* user_play
 477:../main.c     ****  * updates the numsticks depending on button press. Returns 9 if
 478:../main.c     ****  * it is time for the computer to make a move. */
 479:../main.c     **** char
 480:../main.c     **** user_play(void)
 481:../main.c     **** {
 1748              	 .loc 4 481 0
 1749              	 .cfi_startproc
 1750 0000 80B5     	 push {r7,lr}
 1751              	.LCFI51:
 1752              	 .cfi_def_cfa_offset 8
 1753              	 .cfi_offset 7,-8
 1754              	 .cfi_offset 14,-4
 1755 0002 84B0     	 sub sp,sp,#16
 1756              	.LCFI52:
 1757              	 .cfi_def_cfa_offset 24
 1758 0004 00AF     	 add r7,sp,#0
 1759              	.LCFI53:
 1760              	 .cfi_def_cfa_register 7
 482:../main.c     ****   unsigned char waiting_for_press=1;
 1761              	 .loc 4 482 0
 1762 0006 0F23     	 mov r3,#15
 1763 0008 FB18     	 add r3,r7,r3
 1764 000a 0122     	 mov r2,#1
 1765 000c 1A70     	 strb r2,[r3]
 483:../main.c     ****   int selection=0;
 1766              	 .loc 4 483 0
 1767 000e 0023     	 mov r3,#0
 1768 0010 BB60     	 str r3,[r7,#8]
 484:../main.c     ****   unsigned char i;
 485:../main.c     **** 
 486:../main.c     ****   while(waiting_for_press)
 1769              	 .loc 4 486 0
 1770 0012 3BE0     	 b .L96
 1771              	.L104:
 487:../main.c     ****   {
 488:../main.c     ****     for (i=0; i<NUM_BUTTONS; i++)
 1772              	 .loc 4 488 0
 1773 0014 FB1D     	 add r3,r7,#7
 1774 0016 0022     	 mov r2,#0
 1775 0018 1A70     	 strb r2,[r3]
 1776 001a 28E0     	 b .L97
 1777              	.L103:
 489:../main.c     ****     {
 490:../main.c     ****       if (button_status[i]==FIRST_PRESS)
 1778              	 .loc 4 490 0
 1779 001c FB1D     	 add r3,r7,#7
 1780 001e 1B78     	 ldrb r3,[r3]
 1781 0020 324A     	 ldr r2,.L108
 1782 0022 D35C     	 ldrb r3,[r2,r3]
 1783 0024 012B     	 cmp r3,#1
 1784 0026 1DD1     	 bne .L98
 491:../main.c     ****       {
 492:../main.c     ****     	  // a button has just been pressed. Action it.
 493:../main.c     ****     	  selection=i+1;
 1785              	 .loc 4 493 0
 1786 0028 FB1D     	 add r3,r7,#7
 1787 002a 1B78     	 ldrb r3,[r3]
 1788 002c 0133     	 add r3,r3,#1
 1789 002e BB60     	 str r3,[r7,#8]
 494:../main.c     ****         button_status[i]=PRESS_ACTIONED;
 1790              	 .loc 4 494 0
 1791 0030 FB1D     	 add r3,r7,#7
 1792 0032 1B78     	 ldrb r3,[r3]
 1793 0034 2D4A     	 ldr r2,.L108
 1794 0036 0221     	 mov r1,#2
 1795 0038 D154     	 strb r1,[r2,r3]
 495:../main.c     ****         waiting_for_press=0;
 1796              	 .loc 4 495 0
 1797 003a 0F23     	 mov r3,#15
 1798 003c FB18     	 add r3,r7,r3
 1799 003e 0022     	 mov r2,#0
 1800 0040 1A70     	 strb r2,[r3]
 496:../main.c     ****     	  if (i==COMPUTER_BUTTON)
 1801              	 .loc 4 496 0
 1802 0042 FB1D     	 add r3,r7,#7
 1803 0044 1B78     	 ldrb r3,[r3]
 1804 0046 052B     	 cmp r3,#5
 1805 0048 0BD1     	 bne .L99
 497:../main.c     ****     	  {
 498:../main.c     ****     	    selection=9; // arbitrarily use 9 to represent the computer move button
 1806              	 .loc 4 498 0
 1807 004a 0923     	 mov r3,#9
 1808 004c BB60     	 str r3,[r7,#8]
 499:../main.c     ****     	    // unlike the other buttons, we wait for the computer button to be
 500:../main.c     ****     	    // released before actioning it. This is maybe a bit more intuitive for
 501:../main.c     ****     	    // the computer move, but more importantly, we want to catch if really
 502:../main.c     ****     	    // the user is issuing an overall game command to start a new game
 503:../main.c     ****     	    while(button_status[COMPUTER_BUTTON]==PRESS_ACTIONED)
 1809              	 .loc 4 503 0
 1810 004e 04E0     	 b .L100
 1811              	.L101:
 504:../main.c     ****     	    {
 505:../main.c     ****     	      if (command_press)
 1812              	 .loc 4 505 0
 1813 0050 274B     	 ldr r3,.L108+4
 1814 0052 1B78     	 ldrb r3,[r3]
 1815 0054 002B     	 cmp r3,#0
 1816 0056 00D0     	 beq .L100
 506:../main.c     ****     	        break;
 1817              	 .loc 4 506 0
 1818 0058 03E0     	 b .L99
 1819              	.L100:
 503:../main.c     ****     	    {
 1820              	 .loc 4 503 0
 1821 005a 244B     	 ldr r3,.L108
 1822 005c 5B79     	 ldrb r3,[r3,#5]
 1823 005e 022B     	 cmp r3,#2
 1824 0060 F6D0     	 beq .L101
 1825              	.L99:
 507:../main.c     ****     	    }
 508:../main.c     ****     	  }
 509:../main.c     ****     	  break;
 1826              	 .loc 4 509 0 discriminator 1
 1827 0062 08E0     	 b .L102
 1828              	.L98:
 488:../main.c     ****     {
 1829              	 .loc 4 488 0 discriminator 2
 1830 0064 FB1D     	 add r3,r7,#7
 1831 0066 1A78     	 ldrb r2,[r3]
 1832 0068 FB1D     	 add r3,r7,#7
 1833 006a 0132     	 add r2,r2,#1
 1834 006c 1A70     	 strb r2,[r3]
 1835              	.L97:
 488:../main.c     ****     {
 1836              	 .loc 4 488 0 is_stmt 0 discriminator 1
 1837 006e FB1D     	 add r3,r7,#7
 1838 0070 1B78     	 ldrb r3,[r3]
 1839 0072 052B     	 cmp r3,#5
 1840 0074 D2D9     	 bls .L103
 1841              	.L102:
 510:../main.c     ****       }
 511:../main.c     ****     }
 512:../main.c     ****     if (command_press)
 1842              	 .loc 4 512 0 is_stmt 1
 1843 0076 1E4B     	 ldr r3,.L108+4
 1844 0078 1B78     	 ldrb r3,[r3]
 1845 007a 002B     	 cmp r3,#0
 1846 007c 06D0     	 beq .L96
 513:../main.c     ****     {
 514:../main.c     ****       // A dual button sequence. The computer play button was held down,
 515:../main.c     ****       // and another button was pressed. We use it to start the game again,
 516:../main.c     ****       // at a level depending on what button was pressed.
 517:../main.c     ****       // we use the number 100 to encode that this game command has been invoked.
 518:../main.c     ****       selection=100+command_press;
 1847              	 .loc 4 518 0
 1848 007e 1C4B     	 ldr r3,.L108+4
 1849 0080 1B78     	 ldrb r3,[r3]
 1850 0082 6433     	 add r3,r3,#100
 1851 0084 BB60     	 str r3,[r7,#8]
 519:../main.c     ****       current_selection=0; // reset, because we're starting a new game soon..
 1852              	 .loc 4 519 0
 1853 0086 1B4B     	 ldr r3,.L108+8
 1854 0088 0022     	 mov r2,#0
 1855 008a 1A70     	 strb r2,[r3]
 1856              	.L96:
 486:../main.c     ****   {
 1857              	 .loc 4 486 0
 1858 008c 0F23     	 mov r3,#15
 1859 008e FB18     	 add r3,r7,r3
 1860 0090 1B78     	 ldrb r3,[r3]
 1861 0092 002B     	 cmp r3,#0
 1862 0094 BED1     	 bne .L104
 520:../main.c     ****     }
 521:../main.c     ****   }
 522:../main.c     **** 
 523:../main.c     **** #ifdef DO_DEBUG
 524:../main.c     ****   XMC_DEBUG("row to decrement? [1-%d] or [9]computer move: ", rows);
 525:../main.c     ****   printf("selection is %d", selection);
 526:../main.c     ****   //TODO //scanf("%d", &selection);
 527:../main.c     **** #endif
 528:../main.c     ****   if ((selection<=rows) && (selection>0)) // a row button was pressed
 1863              	 .loc 4 528 0
 1864 0096 184B     	 ldr r3,.L108+12
 1865 0098 1B78     	 ldrb r3,[r3]
 1866 009a 1A1E     	 sub r2,r3,#0
 1867 009c BB68     	 ldr r3,[r7,#8]
 1868 009e 9A42     	 cmp r2,r3
 1869 00a0 1EDB     	 blt .L105
 1870              	 .loc 4 528 0 is_stmt 0 discriminator 1
 1871 00a2 BB68     	 ldr r3,[r7,#8]
 1872 00a4 002B     	 cmp r3,#0
 1873 00a6 1BDD     	 ble .L105
 529:../main.c     ****   {
 530:../main.c     ****     // check that the user isn't trying to take sticks from other rows!
 531:../main.c     ****     // once they have chosen a row, they have to stick with that row
 532:../main.c     ****     if ((current_selection==0) || (current_selection==selection))
 1874              	 .loc 4 532 0 is_stmt 1
 1875 00a8 124B     	 ldr r3,.L108+8
 1876 00aa 1B78     	 ldrb r3,[r3]
 1877 00ac 002B     	 cmp r3,#0
 1878 00ae 05D0     	 beq .L106
 1879              	 .loc 4 532 0 is_stmt 0 discriminator 1
 1880 00b0 104B     	 ldr r3,.L108+8
 1881 00b2 1B78     	 ldrb r3,[r3]
 1882 00b4 1A1E     	 sub r2,r3,#0
 1883 00b6 BB68     	 ldr r3,[r7,#8]
 1884 00b8 9A42     	 cmp r2,r3
 1885 00ba 11D1     	 bne .L105
 1886              	.L106:
 533:../main.c     ****     {
 534:../main.c     ****       if (numsticks[selection-1]>0)
 1887              	 .loc 4 534 0 is_stmt 1
 1888 00bc BB68     	 ldr r3,[r7,#8]
 1889 00be 013B     	 sub r3,r3,#1
 1890 00c0 0E4A     	 ldr r2,.L108+16
 1891 00c2 D35C     	 ldrb r3,[r2,r3]
 1892 00c4 002B     	 cmp r3,#0
 1893 00c6 0BD0     	 beq .L105
 535:../main.c     ****       {
 536:../main.c     ****         numsticks[selection-1]--;
 1894              	 .loc 4 536 0
 1895 00c8 BB68     	 ldr r3,[r7,#8]
 1896 00ca 013B     	 sub r3,r3,#1
 1897 00cc 0B4A     	 ldr r2,.L108+16
 1898 00ce D25C     	 ldrb r2,[r2,r3]
 1899 00d0 013A     	 sub r2,r2,#1
 1900 00d2 D1B2     	 uxtb r1,r2
 1901 00d4 094A     	 ldr r2,.L108+16
 1902 00d6 D154     	 strb r1,[r2,r3]
 537:../main.c     ****         current_selection=selection;
 1903              	 .loc 4 537 0
 1904 00d8 BB68     	 ldr r3,[r7,#8]
 1905 00da DAB2     	 uxtb r2,r3
 1906 00dc 054B     	 ldr r3,.L108+8
 1907 00de 1A70     	 strb r2,[r3]
 1908              	.L105:
 538:../main.c     ****       }
 539:../main.c     ****     }
 540:../main.c     ****   }
 541:../main.c     ****   return(selection);
 1909              	 .loc 4 541 0
 1910 00e0 BB68     	 ldr r3,[r7,#8]
 1911 00e2 DBB2     	 uxtb r3,r3
 542:../main.c     **** }
 1912              	 .loc 4 542 0
 1913 00e4 181C     	 mov r0,r3
 1914 00e6 BD46     	 mov sp,r7
 1915 00e8 04B0     	 add sp,sp,#16
 1916              	 
 1917 00ea 80BD     	 pop {r7,pc}
 1918              	.L109:
 1919              	 .align 2
 1920              	.L108:
 1921 00ec 00000000 	 .word button_status
 1922 00f0 00000000 	 .word command_press
 1923 00f4 00000000 	 .word current_selection
 1924 00f8 00000000 	 .word rows
 1925 00fc 00000000 	 .word numsticks
 1926              	 .cfi_endproc
 1927              	.LFE202:
 1929              	 .section .text.count_ones,"ax",%progbits
 1930              	 .align 2
 1931              	 .global count_ones
 1932              	 .code 16
 1933              	 .thumb_func
 1935              	count_ones:
 1936              	.LFB203:
 543:../main.c     **** 
 544:../main.c     **** /* count_ones
 545:../main.c     ****  * this function counts up how many binary digits are 1
 546:../main.c     ****  */
 547:../main.c     **** unsigned char
 548:../main.c     **** count_ones(unsigned char value)
 549:../main.c     **** {
 1937              	 .loc 4 549 0
 1938              	 .cfi_startproc
 1939 0000 80B5     	 push {r7,lr}
 1940              	.LCFI54:
 1941              	 .cfi_def_cfa_offset 8
 1942              	 .cfi_offset 7,-8
 1943              	 .cfi_offset 14,-4
 1944 0002 84B0     	 sub sp,sp,#16
 1945              	.LCFI55:
 1946              	 .cfi_def_cfa_offset 24
 1947 0004 00AF     	 add r7,sp,#0
 1948              	.LCFI56:
 1949              	 .cfi_def_cfa_register 7
 1950 0006 021C     	 mov r2,r0
 1951 0008 FB1D     	 add r3,r7,#7
 1952 000a 1A70     	 strb r2,[r3]
 550:../main.c     ****   char i;
 551:../main.c     ****   char sum=0;
 1953              	 .loc 4 551 0
 1954 000c 0E23     	 mov r3,#14
 1955 000e FB18     	 add r3,r7,r3
 1956 0010 0022     	 mov r2,#0
 1957 0012 1A70     	 strb r2,[r3]
 552:../main.c     **** 
 553:../main.c     ****   for (i=0; i<8; i++)
 1958              	 .loc 4 553 0
 1959 0014 0F23     	 mov r3,#15
 1960 0016 FB18     	 add r3,r7,r3
 1961 0018 0022     	 mov r2,#0
 1962 001a 1A70     	 strb r2,[r3]
 1963 001c 17E0     	 b .L111
 1964              	.L113:
 554:../main.c     ****   {
 555:../main.c     ****     if ((value & (1<<i)) != 0)
 1965              	 .loc 4 555 0
 1966 001e FB1D     	 add r3,r7,#7
 1967 0020 1A78     	 ldrb r2,[r3]
 1968 0022 0F23     	 mov r3,#15
 1969 0024 FB18     	 add r3,r7,r3
 1970 0026 1B78     	 ldrb r3,[r3]
 1971 0028 1A41     	 asr r2,r2,r3
 1972 002a 131C     	 mov r3,r2
 1973 002c 0122     	 mov r2,#1
 1974 002e 1340     	 and r3,r2
 1975 0030 06D0     	 beq .L112
 556:../main.c     ****       sum++;
 1976              	 .loc 4 556 0
 1977 0032 0E23     	 mov r3,#14
 1978 0034 FB18     	 add r3,r7,r3
 1979 0036 1A78     	 ldrb r2,[r3]
 1980 0038 0E23     	 mov r3,#14
 1981 003a FB18     	 add r3,r7,r3
 1982 003c 0132     	 add r2,r2,#1
 1983 003e 1A70     	 strb r2,[r3]
 1984              	.L112:
 553:../main.c     ****   {
 1985              	 .loc 4 553 0 discriminator 2
 1986 0040 0F23     	 mov r3,#15
 1987 0042 FB18     	 add r3,r7,r3
 1988 0044 1A78     	 ldrb r2,[r3]
 1989 0046 0F23     	 mov r3,#15
 1990 0048 FB18     	 add r3,r7,r3
 1991 004a 0132     	 add r2,r2,#1
 1992 004c 1A70     	 strb r2,[r3]
 1993              	.L111:
 553:../main.c     ****   {
 1994              	 .loc 4 553 0 is_stmt 0 discriminator 1
 1995 004e 0F23     	 mov r3,#15
 1996 0050 FB18     	 add r3,r7,r3
 1997 0052 1B78     	 ldrb r3,[r3]
 1998 0054 072B     	 cmp r3,#7
 1999 0056 E2D9     	 bls .L113
 557:../main.c     ****   }
 558:../main.c     ****   return(sum);
 2000              	 .loc 4 558 0 is_stmt 1
 2001 0058 0E23     	 mov r3,#14
 2002 005a FB18     	 add r3,r7,r3
 2003 005c 1B78     	 ldrb r3,[r3]
 559:../main.c     **** }
 2004              	 .loc 4 559 0
 2005 005e 181C     	 mov r0,r3
 2006 0060 BD46     	 mov sp,r7
 2007 0062 04B0     	 add sp,sp,#16
 2008              	 
 2009 0064 80BD     	 pop {r7,pc}
 2010              	 .cfi_endproc
 2011              	.LFE203:
 2013 0066 C046     	 .section .text.computer_play,"ax",%progbits
 2014              	 .align 2
 2015              	 .global computer_play
 2016              	 .code 16
 2017              	 .thumb_func
 2019              	computer_play:
 2020              	.LFB204:
 560:../main.c     **** 
 561:../main.c     **** 
 562:../main.c     **** /* computer_play
 563:../main.c     ****  * This function is the computer's algorithm, to try to beat the user.
 564:../main.c     ****  */
 565:../main.c     **** void
 566:../main.c     **** computer_play(void)
 567:../main.c     **** {
 2021              	 .loc 4 567 0
 2022              	 .cfi_startproc
 2023 0000 90B5     	 push {r4,r7,lr}
 2024              	.LCFI57:
 2025              	 .cfi_def_cfa_offset 12
 2026              	 .cfi_offset 4,-12
 2027              	 .cfi_offset 7,-8
 2028              	 .cfi_offset 14,-4
 2029 0002 8BB0     	 sub sp,sp,#44
 2030              	.LCFI58:
 2031              	 .cfi_def_cfa_offset 56
 2032 0004 00AF     	 add r7,sp,#0
 2033              	.LCFI59:
 2034              	 .cfi_def_cfa_register 7
 568:../main.c     ****   unsigned char x=numsticks[0]; // x is the variable X in the Wikipedia article for Nim
 2035              	 .loc 4 568 0
 2036 0006 2723     	 mov r3,#39
 2037 0008 FB18     	 add r3,r7,r3
 2038 000a CC4A     	 ldr r2,.L157
 2039 000c 1278     	 ldrb r2,[r2]
 2040 000e 1A70     	 strb r2,[r3]
 569:../main.c     ****   unsigned char interim_xor[MAXROWS]; // this array holds "the nim-sum of X and heap-size" for each
 570:../main.c     ****   unsigned char playable_rows_bitmap=0;
 2041              	 .loc 4 570 0
 2042 0010 2623     	 mov r3,#38
 2043 0012 FB18     	 add r3,r7,r3
 2044 0014 0022     	 mov r2,#0
 2045 0016 1A70     	 strb r2,[r3]
 571:../main.c     ****   unsigned char num_playable_rows=0;
 2046              	 .loc 4 571 0
 2047 0018 1923     	 mov r3,#25
 2048 001a FB18     	 add r3,r7,r3
 2049 001c 0022     	 mov r2,#0
 2050 001e 1A70     	 strb r2,[r3]
 572:../main.c     ****   unsigned char candidate[MAXROWS]; // this array holds an idea for the the number of sticks to lea
 573:../main.c     ****   unsigned char quality[MAXROWS]; // a quality value (higher is better) for how good the candidate 
 574:../main.c     ****   unsigned char peak_quality=0;
 2051              	 .loc 4 574 0
 2052 0020 2523     	 mov r3,#37
 2053 0022 FB18     	 add r3,r7,r3
 2054 0024 0022     	 mov r2,#0
 2055 0026 1A70     	 strb r2,[r3]
 575:../main.c     ****   unsigned char peak_candidate=0;
 2056              	 .loc 4 575 0
 2057 0028 2423     	 mov r3,#36
 2058 002a FB18     	 add r3,r7,r3
 2059 002c 0022     	 mov r2,#0
 2060 002e 1A70     	 strb r2,[r3]
 576:../main.c     ****   unsigned char unitychecknotneeded=0; // we need to check how many rows have only one stick remain
 2061              	 .loc 4 576 0
 2062 0030 2323     	 mov r3,#35
 2063 0032 FB18     	 add r3,r7,r3
 2064 0034 0022     	 mov r2,#0
 2065 0036 1A70     	 strb r2,[r3]
 577:../main.c     **** 
 578:../main.c     ****   int i;
 579:../main.c     ****   char j, temp;
 580:../main.c     ****   char unityheaps=0;
 2066              	 .loc 4 580 0
 2067 0038 1A23     	 mov r3,#26
 2068 003a FB18     	 add r3,r7,r3
 2069 003c 0022     	 mov r2,#0
 2070 003e 1A70     	 strb r2,[r3]
 581:../main.c     **** 
 582:../main.c     ****   // now the computer is playing. Reset the button selection for the user,
 583:../main.c     ****   // so that when it is their turn, they will be free to choose any row.
 584:../main.c     ****   current_selection=0;
 2071              	 .loc 4 584 0
 2072 0040 BF4B     	 ldr r3,.L157+4
 2073 0042 0022     	 mov r2,#0
 2074 0044 1A70     	 strb r2,[r3]
 585:../main.c     **** 
 586:../main.c     ****   for (i=0; i<MAXROWS; i++)
 2075              	 .loc 4 586 0
 2076 0046 0023     	 mov r3,#0
 2077 0048 FB61     	 str r3,[r7,#28]
 2078 004a 07E0     	 b .L116
 2079              	.L117:
 587:../main.c     ****   {
 588:../main.c     ****     quality[i]=0; // initialize the quality array
 2080              	 .loc 4 588 0 discriminator 3
 2081 004c 3A1C     	 mov r2,r7
 2082 004e FB69     	 ldr r3,[r7,#28]
 2083 0050 D318     	 add r3,r2,r3
 2084 0052 0022     	 mov r2,#0
 2085 0054 1A70     	 strb r2,[r3]
 586:../main.c     ****   {
 2086              	 .loc 4 586 0 discriminator 3
 2087 0056 FB69     	 ldr r3,[r7,#28]
 2088 0058 0133     	 add r3,r3,#1
 2089 005a FB61     	 str r3,[r7,#28]
 2090              	.L116:
 586:../main.c     ****   {
 2091              	 .loc 4 586 0 is_stmt 0 discriminator 1
 2092 005c FB69     	 ldr r3,[r7,#28]
 2093 005e 042B     	 cmp r3,#4
 2094 0060 F4DD     	 ble .L117
 589:../main.c     ****   }
 590:../main.c     **** 
 591:../main.c     ****   // find the best possible move, using the sum of
 592:../main.c     ****   // powers of two method, which is basically a
 593:../main.c     ****   // lot of XORing
 594:../main.c     ****   for (i=1; i<rows; i++)
 2095              	 .loc 4 594 0 is_stmt 1
 2096 0062 0123     	 mov r3,#1
 2097 0064 FB61     	 str r3,[r7,#28]
 2098 0066 0DE0     	 b .L118
 2099              	.L119:
 595:../main.c     ****   {
 596:../main.c     ****     x=x^numsticks[i];
 2100              	 .loc 4 596 0 discriminator 3
 2101 0068 B44A     	 ldr r2,.L157
 2102 006a FB69     	 ldr r3,[r7,#28]
 2103 006c D318     	 add r3,r2,r3
 2104 006e 1978     	 ldrb r1,[r3]
 2105 0070 2723     	 mov r3,#39
 2106 0072 FB18     	 add r3,r7,r3
 2107 0074 2722     	 mov r2,#39
 2108 0076 BA18     	 add r2,r7,r2
 2109 0078 1278     	 ldrb r2,[r2]
 2110 007a 4A40     	 eor r2,r1
 2111 007c 1A70     	 strb r2,[r3]
 594:../main.c     ****   {
 2112              	 .loc 4 594 0 discriminator 3
 2113 007e FB69     	 ldr r3,[r7,#28]
 2114 0080 0133     	 add r3,r3,#1
 2115 0082 FB61     	 str r3,[r7,#28]
 2116              	.L118:
 594:../main.c     ****   {
 2117              	 .loc 4 594 0 is_stmt 0 discriminator 1
 2118 0084 AF4B     	 ldr r3,.L157+8
 2119 0086 1B78     	 ldrb r3,[r3]
 2120 0088 1A1E     	 sub r2,r3,#0
 2121 008a FB69     	 ldr r3,[r7,#28]
 2122 008c 9A42     	 cmp r2,r3
 2123 008e EBDC     	 bgt .L119
 597:../main.c     ****   }
 598:../main.c     ****   XMC_DEBUG("x=%d\n", x);
 599:../main.c     ****   if (x>0)
 2124              	 .loc 4 599 0 is_stmt 1
 2125 0090 2723     	 mov r3,#39
 2126 0092 FB18     	 add r3,r7,r3
 2127 0094 1B78     	 ldrb r3,[r3]
 2128 0096 002B     	 cmp r3,#0
 2129 0098 00D1     	 bne .LCB1795
 2130 009a E2E1     	 b .L120
 2131              	.LCB1795:
 600:../main.c     ****   {
 601:../main.c     ****     for (i=0; i<rows; i++)
 2132              	 .loc 4 601 0
 2133 009c 0023     	 mov r3,#0
 2134 009e FB61     	 str r3,[r7,#28]
 2135 00a0 29E0     	 b .L121
 2136              	.L123:
 602:../main.c     ****     {
 603:../main.c     ****       interim_xor[i]=x^numsticks[i];
 2137              	 .loc 4 603 0
 2138 00a2 A64A     	 ldr r2,.L157
 2139 00a4 FB69     	 ldr r3,[r7,#28]
 2140 00a6 D318     	 add r3,r2,r3
 2141 00a8 1A78     	 ldrb r2,[r3]
 2142 00aa 2723     	 mov r3,#39
 2143 00ac FB18     	 add r3,r7,r3
 2144 00ae 1B78     	 ldrb r3,[r3]
 2145 00b0 5340     	 eor r3,r2
 2146 00b2 D9B2     	 uxtb r1,r3
 2147 00b4 1023     	 mov r3,#16
 2148 00b6 FA18     	 add r2,r7,r3
 2149 00b8 FB69     	 ldr r3,[r7,#28]
 2150 00ba D318     	 add r3,r2,r3
 2151 00bc 0A1C     	 add r2,r1,#0
 2152 00be 1A70     	 strb r2,[r3]
 604:../main.c     ****       if (interim_xor[i]<numsticks[i])
 2153              	 .loc 4 604 0
 2154 00c0 1023     	 mov r3,#16
 2155 00c2 FA18     	 add r2,r7,r3
 2156 00c4 FB69     	 ldr r3,[r7,#28]
 2157 00c6 D318     	 add r3,r2,r3
 2158 00c8 1A78     	 ldrb r2,[r3]
 2159 00ca 9C49     	 ldr r1,.L157
 2160 00cc FB69     	 ldr r3,[r7,#28]
 2161 00ce CB18     	 add r3,r1,r3
 2162 00d0 1B78     	 ldrb r3,[r3]
 2163 00d2 9A42     	 cmp r2,r3
 2164 00d4 0CD2     	 bcs .L122
 605:../main.c     ****       {
 606:../main.c     ****         playable_rows_bitmap |= 1<<i;
 2165              	 .loc 4 606 0
 2166 00d6 0122     	 mov r2,#1
 2167 00d8 FB69     	 ldr r3,[r7,#28]
 2168 00da 9A40     	 lsl r2,r2,r3
 2169 00dc 131C     	 mov r3,r2
 2170 00de DAB2     	 uxtb r2,r3
 2171 00e0 2623     	 mov r3,#38
 2172 00e2 FB18     	 add r3,r7,r3
 2173 00e4 1B78     	 ldrb r3,[r3]
 2174 00e6 1343     	 orr r3,r2
 2175 00e8 DAB2     	 uxtb r2,r3
 2176 00ea 2623     	 mov r3,#38
 2177 00ec FB18     	 add r3,r7,r3
 2178 00ee 1A70     	 strb r2,[r3]
 2179              	.L122:
 601:../main.c     ****     {
 2180              	 .loc 4 601 0 discriminator 2
 2181 00f0 FB69     	 ldr r3,[r7,#28]
 2182 00f2 0133     	 add r3,r3,#1
 2183 00f4 FB61     	 str r3,[r7,#28]
 2184              	.L121:
 601:../main.c     ****     {
 2185              	 .loc 4 601 0 is_stmt 0 discriminator 1
 2186 00f6 934B     	 ldr r3,.L157+8
 2187 00f8 1B78     	 ldrb r3,[r3]
 2188 00fa 1A1E     	 sub r2,r3,#0
 2189 00fc FB69     	 ldr r3,[r7,#28]
 2190 00fe 9A42     	 cmp r2,r3
 2191 0100 CFDC     	 bgt .L123
 607:../main.c     ****       }
 608:../main.c     ****     }
 609:../main.c     ****     XMC_DEBUG("interim_xor are %d, %d, %d, %d\n", interim_xor[0], interim_xor[1], interim_xor[2], i
 610:../main.c     ****     num_playable_rows=count_ones(playable_rows_bitmap);
 2192              	 .loc 4 610 0 is_stmt 1
 2193 0102 1923     	 mov r3,#25
 2194 0104 FC18     	 add r4,r7,r3
 2195 0106 2623     	 mov r3,#38
 2196 0108 FB18     	 add r3,r7,r3
 2197 010a 1B78     	 ldrb r3,[r3]
 2198 010c 181C     	 mov r0,r3
 2199 010e FFF7FEFF 	 bl count_ones
 2200 0112 031C     	 mov r3,r0
 2201 0114 2370     	 strb r3,[r4]
 611:../main.c     ****     XMC_DEBUG("num_playable_rows=%d\n", num_playable_rows);
 612:../main.c     ****     if (num_playable_rows>=1)
 2202              	 .loc 4 612 0
 2203 0116 1923     	 mov r3,#25
 2204 0118 FB18     	 add r3,r7,r3
 2205 011a 1B78     	 ldrb r3,[r3]
 2206 011c 002B     	 cmp r3,#0
 2207 011e 00D1     	 bne .LCB1867
 2208 0120 7EE1     	 b .L124
 2209              	.LCB1867:
 613:../main.c     ****     {
 614:../main.c     ****       // overall strategy: find some possible moves, and give them a weight
 615:../main.c     ****       // and then we'll pick the best of the lot.
 616:../main.c     ****       for (i=rows-1; i>=0; i--)
 2210              	 .loc 4 616 0
 2211 0122 884B     	 ldr r3,.L157+8
 2212 0124 1B78     	 ldrb r3,[r3]
 2213 0126 013B     	 sub r3,r3,#1
 2214 0128 FB61     	 str r3,[r7,#28]
 2215 012a D7E0     	 b .L125
 2216              	.L138:
 617:../main.c     ****       {
 618:../main.c     ****         if ((playable_rows_bitmap & (1<<i)) != 0) // i is a playable row
 2217              	 .loc 4 618 0
 2218 012c 2623     	 mov r3,#38
 2219 012e FB18     	 add r3,r7,r3
 2220 0130 1A78     	 ldrb r2,[r3]
 2221 0132 FB69     	 ldr r3,[r7,#28]
 2222 0134 1A41     	 asr r2,r2,r3
 2223 0136 131C     	 mov r3,r2
 2224 0138 0122     	 mov r2,#1
 2225 013a 1340     	 and r3,r2
 2226 013c 00D1     	 bne .LCB1885
 2227 013e CAE0     	 b .L126
 2228              	.LCB1885:
 619:../main.c     ****         {
 620:../main.c     ****           unitychecknotneeded=0;
 2229              	 .loc 4 620 0
 2230 0140 2323     	 mov r3,#35
 2231 0142 FB18     	 add r3,r7,r3
 2232 0144 0022     	 mov r2,#0
 2233 0146 1A70     	 strb r2,[r3]
 621:../main.c     ****           XMC_DEBUG("testing candidate %d\n", i);
 622:../main.c     ****           temp=interim_xor[i]; // reduce size of heap to XOR of its original size with x
 2234              	 .loc 4 622 0
 2235 0148 1823     	 mov r3,#24
 2236 014a FB18     	 add r3,r7,r3
 2237 014c 1022     	 mov r2,#16
 2238 014e B918     	 add r1,r7,r2
 2239 0150 FA69     	 ldr r2,[r7,#28]
 2240 0152 8A18     	 add r2,r1,r2
 2241 0154 1278     	 ldrb r2,[r2]
 2242 0156 1A70     	 strb r2,[r3]
 623:../main.c     ****           // if we make the temp move real, will it leave only heaps with size 1?
 624:../main.c     **** 
 625:../main.c     ****           if (temp==1)
 2243              	 .loc 4 625 0
 2244 0158 1823     	 mov r3,#24
 2245 015a FB18     	 add r3,r7,r3
 2246 015c 1B78     	 ldrb r3,[r3]
 2247 015e 012B     	 cmp r3,#1
 2248 0160 06D1     	 bne .L127
 626:../main.c     ****             unityheaps++;
 2249              	 .loc 4 626 0
 2250 0162 1A23     	 mov r3,#26
 2251 0164 FB18     	 add r3,r7,r3
 2252 0166 1A78     	 ldrb r2,[r3]
 2253 0168 1A23     	 mov r3,#26
 2254 016a FB18     	 add r3,r7,r3
 2255 016c 0132     	 add r2,r2,#1
 2256 016e 1A70     	 strb r2,[r3]
 2257              	.L127:
 627:../main.c     ****           for (j=0; j<rows; j++)
 2258              	 .loc 4 627 0
 2259 0170 1B23     	 mov r3,#27
 2260 0172 FB18     	 add r3,r7,r3
 2261 0174 0022     	 mov r2,#0
 2262 0176 1A70     	 strb r2,[r3]
 2263 0178 26E0     	 b .L128
 2264              	.L131:
 628:../main.c     ****           {
 629:../main.c     ****             if (j!=i)
 2265              	 .loc 4 629 0
 2266 017a 1B23     	 mov r3,#27
 2267 017c FB18     	 add r3,r7,r3
 2268 017e 1A78     	 ldrb r2,[r3]
 2269 0180 FB69     	 ldr r3,[r7,#28]
 2270 0182 9A42     	 cmp r2,r3
 2271 0184 19D0     	 beq .L129
 630:../main.c     ****             {
 631:../main.c     ****               if (numsticks[(unsigned char)j]==1)
 2272              	 .loc 4 631 0
 2273 0186 1B23     	 mov r3,#27
 2274 0188 FB18     	 add r3,r7,r3
 2275 018a 1B78     	 ldrb r3,[r3]
 2276 018c 6B4A     	 ldr r2,.L157
 2277 018e D35C     	 ldrb r3,[r2,r3]
 2278 0190 012B     	 cmp r3,#1
 2279 0192 07D1     	 bne .L130
 632:../main.c     ****               {
 633:../main.c     ****                 unityheaps++;
 2280              	 .loc 4 633 0
 2281 0194 1A23     	 mov r3,#26
 2282 0196 FB18     	 add r3,r7,r3
 2283 0198 1A78     	 ldrb r2,[r3]
 2284 019a 1A23     	 mov r3,#26
 2285 019c FB18     	 add r3,r7,r3
 2286 019e 0132     	 add r2,r2,#1
 2287 01a0 1A70     	 strb r2,[r3]
 2288 01a2 0AE0     	 b .L129
 2289              	.L130:
 634:../main.c     ****               }
 635:../main.c     ****               else if (numsticks[(unsigned char)j]>1)
 2290              	 .loc 4 635 0
 2291 01a4 1B23     	 mov r3,#27
 2292 01a6 FB18     	 add r3,r7,r3
 2293 01a8 1B78     	 ldrb r3,[r3]
 2294 01aa 644A     	 ldr r2,.L157
 2295 01ac D35C     	 ldrb r3,[r2,r3]
 2296 01ae 012B     	 cmp r3,#1
 2297 01b0 03D9     	 bls .L129
 636:../main.c     ****               {
 637:../main.c     ****                 unitychecknotneeded=1;
 2298              	 .loc 4 637 0
 2299 01b2 2323     	 mov r3,#35
 2300 01b4 FB18     	 add r3,r7,r3
 2301 01b6 0122     	 mov r2,#1
 2302 01b8 1A70     	 strb r2,[r3]
 2303              	.L129:
 627:../main.c     ****           {
 2304              	 .loc 4 627 0 discriminator 2
 2305 01ba 1B23     	 mov r3,#27
 2306 01bc FB18     	 add r3,r7,r3
 2307 01be 1A78     	 ldrb r2,[r3]
 2308 01c0 1B23     	 mov r3,#27
 2309 01c2 FB18     	 add r3,r7,r3
 2310 01c4 0132     	 add r2,r2,#1
 2311 01c6 1A70     	 strb r2,[r3]
 2312              	.L128:
 627:../main.c     ****           {
 2313              	 .loc 4 627 0 is_stmt 0 discriminator 1
 2314 01c8 5E4B     	 ldr r3,.L157+8
 2315 01ca 1B78     	 ldrb r3,[r3]
 2316 01cc 1B22     	 mov r2,#27
 2317 01ce BA18     	 add r2,r7,r2
 2318 01d0 1278     	 ldrb r2,[r2]
 2319 01d2 9A42     	 cmp r2,r3
 2320 01d4 D1D3     	 bcc .L131
 638:../main.c     ****               }
 639:../main.c     ****             }
 640:../main.c     ****           }
 641:../main.c     ****           if ((temp<=1) && (unitychecknotneeded==0))
 2321              	 .loc 4 641 0 is_stmt 1
 2322 01d6 1823     	 mov r3,#24
 2323 01d8 FB18     	 add r3,r7,r3
 2324 01da 1B78     	 ldrb r3,[r3]
 2325 01dc 012B     	 cmp r3,#1
 2326 01de 67D8     	 bhi .L132
 2327              	 .loc 4 641 0 is_stmt 0 discriminator 1
 2328 01e0 2323     	 mov r3,#35
 2329 01e2 FB18     	 add r3,r7,r3
 2330 01e4 1B78     	 ldrb r3,[r3]
 2331 01e6 002B     	 cmp r3,#0
 2332 01e8 62D1     	 bne .L132
 642:../main.c     ****           {
 643:../main.c     ****             // is unityheaps odd? We want that..
 644:../main.c     ****             if ((unityheaps & 1) != 0)
 2333              	 .loc 4 644 0 is_stmt 1
 2334 01ea 1A23     	 mov r3,#26
 2335 01ec FB18     	 add r3,r7,r3
 2336 01ee 1B78     	 ldrb r3,[r3]
 2337 01f0 0122     	 mov r2,#1
 2338 01f2 1340     	 and r3,r2
 2339 01f4 13D0     	 beq .L133
 645:../main.c     ****             {
 646:../main.c     ****               // make the move permanent
 647:../main.c     ****               candidate[i]=temp;
 2340              	 .loc 4 647 0
 2341 01f6 0823     	 mov r3,#8
 2342 01f8 FA18     	 add r2,r7,r3
 2343 01fa FB69     	 ldr r3,[r7,#28]
 2344 01fc D318     	 add r3,r2,r3
 2345 01fe 1822     	 mov r2,#24
 2346 0200 BA18     	 add r2,r7,r2
 2347 0202 1278     	 ldrb r2,[r2]
 2348 0204 1A70     	 strb r2,[r3]
 648:../main.c     ****               quality[i]+=10;
 2349              	 .loc 4 648 0
 2350 0206 3A1C     	 mov r2,r7
 2351 0208 FB69     	 ldr r3,[r7,#28]
 2352 020a D318     	 add r3,r2,r3
 2353 020c 1B78     	 ldrb r3,[r3]
 2354 020e 0A33     	 add r3,r3,#10
 2355 0210 D9B2     	 uxtb r1,r3
 2356 0212 3A1C     	 mov r2,r7
 2357 0214 FB69     	 ldr r3,[r7,#28]
 2358 0216 D318     	 add r3,r2,r3
 2359 0218 0A1C     	 add r2,r1,#0
 2360 021a 1A70     	 strb r2,[r3]
 2361 021c 47E0     	 b .L134
 2362              	.L133:
 649:../main.c     ****             } // unityheaps would be even with that move. so take different action.
 650:../main.c     ****             else if (temp==1)
 2363              	 .loc 4 650 0
 2364 021e 1823     	 mov r3,#24
 2365 0220 FB18     	 add r3,r7,r3
 2366 0222 1B78     	 ldrb r3,[r3]
 2367 0224 012B     	 cmp r3,#1
 2368 0226 11D1     	 bne .L135
 651:../main.c     ****             {
 652:../main.c     ****               // we can reduce to zero.
 653:../main.c     ****               candidate[i]=0;
 2369              	 .loc 4 653 0
 2370 0228 0823     	 mov r3,#8
 2371 022a FA18     	 add r2,r7,r3
 2372 022c FB69     	 ldr r3,[r7,#28]
 2373 022e D318     	 add r3,r2,r3
 2374 0230 0022     	 mov r2,#0
 2375 0232 1A70     	 strb r2,[r3]
 654:../main.c     ****               quality[i]+=5; // this move should be good too
 2376              	 .loc 4 654 0
 2377 0234 3A1C     	 mov r2,r7
 2378 0236 FB69     	 ldr r3,[r7,#28]
 2379 0238 D318     	 add r3,r2,r3
 2380 023a 1B78     	 ldrb r3,[r3]
 2381 023c 0533     	 add r3,r3,#5
 2382 023e D9B2     	 uxtb r1,r3
 2383 0240 3A1C     	 mov r2,r7
 2384 0242 FB69     	 ldr r3,[r7,#28]
 2385 0244 D318     	 add r3,r2,r3
 2386 0246 0A1C     	 add r2,r1,#0
 2387 0248 1A70     	 strb r2,[r3]
 2388 024a 30E0     	 b .L134
 2389              	.L135:
 655:../main.c     ****             }
 656:../main.c     ****             else
 657:../main.c     ****             {
 658:../main.c     ****               if (temp==0)
 2390              	 .loc 4 658 0
 2391 024c 1823     	 mov r3,#24
 2392 024e FB18     	 add r3,r7,r3
 2393 0250 1B78     	 ldrb r3,[r3]
 2394 0252 002B     	 cmp r3,#0
 2395 0254 17D1     	 bne .L136
 659:../main.c     ****               {
 660:../main.c     ****                 if (numsticks[i]>1)
 2396              	 .loc 4 660 0
 2397 0256 394A     	 ldr r2,.L157
 2398 0258 FB69     	 ldr r3,[r7,#28]
 2399 025a D318     	 add r3,r2,r3
 2400 025c 1B78     	 ldrb r3,[r3]
 2401 025e 012B     	 cmp r3,#1
 2402 0260 25D9     	 bls .L134
 661:../main.c     ****                 {
 662:../main.c     ****                   // we can leave one stick, to make it odd again
 663:../main.c     ****                   candidate[i]=1;
 2403              	 .loc 4 663 0
 2404 0262 0823     	 mov r3,#8
 2405 0264 FA18     	 add r2,r7,r3
 2406 0266 FB69     	 ldr r3,[r7,#28]
 2407 0268 D318     	 add r3,r2,r3
 2408 026a 0122     	 mov r2,#1
 2409 026c 1A70     	 strb r2,[r3]
 664:../main.c     ****                   quality[i]+=9; // this move should be good
 2410              	 .loc 4 664 0
 2411 026e 3A1C     	 mov r2,r7
 2412 0270 FB69     	 ldr r3,[r7,#28]
 2413 0272 D318     	 add r3,r2,r3
 2414 0274 1B78     	 ldrb r3,[r3]
 2415 0276 0933     	 add r3,r3,#9
 2416 0278 D9B2     	 uxtb r1,r3
 2417 027a 3A1C     	 mov r2,r7
 2418 027c FB69     	 ldr r3,[r7,#28]
 2419 027e D318     	 add r3,r2,r3
 2420 0280 0A1C     	 add r2,r1,#0
 2421 0282 1A70     	 strb r2,[r3]
 644:../main.c     ****             {
 2422              	 .loc 4 644 0
 2423 0284 27E0     	 b .L126
 2424              	.L136:
 665:../main.c     ****                 }
 666:../main.c     ****               }
 667:../main.c     ****               else
 668:../main.c     ****               {
 669:../main.c     ****                 // this won't be a nice move to make. But it is a valid move.
 670:../main.c     ****                 candidate[i]=temp;
 2425              	 .loc 4 670 0
 2426 0286 0823     	 mov r3,#8
 2427 0288 FA18     	 add r2,r7,r3
 2428 028a FB69     	 ldr r3,[r7,#28]
 2429 028c D318     	 add r3,r2,r3
 2430 028e 1822     	 mov r2,#24
 2431 0290 BA18     	 add r2,r7,r2
 2432 0292 1278     	 ldrb r2,[r2]
 2433 0294 1A70     	 strb r2,[r3]
 671:../main.c     ****                 quality[i]+=1;
 2434              	 .loc 4 671 0
 2435 0296 3A1C     	 mov r2,r7
 2436 0298 FB69     	 ldr r3,[r7,#28]
 2437 029a D318     	 add r3,r2,r3
 2438 029c 1B78     	 ldrb r3,[r3]
 2439 029e 0133     	 add r3,r3,#1
 2440 02a0 D9B2     	 uxtb r1,r3
 2441 02a2 3A1C     	 mov r2,r7
 2442 02a4 FB69     	 ldr r3,[r7,#28]
 2443 02a6 D318     	 add r3,r2,r3
 2444 02a8 0A1C     	 add r2,r1,#0
 2445 02aa 1A70     	 strb r2,[r3]
 644:../main.c     ****             {
 2446              	 .loc 4 644 0
 2447 02ac 13E0     	 b .L126
 2448              	.L134:
 644:../main.c     ****             {
 2449              	 .loc 4 644 0 is_stmt 0 discriminator 1
 2450 02ae 12E0     	 b .L126
 2451              	.L132:
 672:../main.c     ****               }
 673:../main.c     ****             }
 674:../main.c     ****           }
 675:../main.c     ****           else
 676:../main.c     ****           {
 677:../main.c     ****             // this action won't result in all heaps containing 1
 678:../main.c     ****             // it could be a good move.
 679:../main.c     ****             candidate[i]=temp;
 2452              	 .loc 4 679 0 is_stmt 1
 2453 02b0 0823     	 mov r3,#8
 2454 02b2 FA18     	 add r2,r7,r3
 2455 02b4 FB69     	 ldr r3,[r7,#28]
 2456 02b6 D318     	 add r3,r2,r3
 2457 02b8 1822     	 mov r2,#24
 2458 02ba BA18     	 add r2,r7,r2
 2459 02bc 1278     	 ldrb r2,[r2]
 2460 02be 1A70     	 strb r2,[r3]
 680:../main.c     ****             quality[i]+=9;
 2461              	 .loc 4 680 0
 2462 02c0 3A1C     	 mov r2,r7
 2463 02c2 FB69     	 ldr r3,[r7,#28]
 2464 02c4 D318     	 add r3,r2,r3
 2465 02c6 1B78     	 ldrb r3,[r3]
 2466 02c8 0933     	 add r3,r3,#9
 2467 02ca D9B2     	 uxtb r1,r3
 2468 02cc 3A1C     	 mov r2,r7
 2469 02ce FB69     	 ldr r3,[r7,#28]
 2470 02d0 D318     	 add r3,r2,r3
 2471 02d2 0A1C     	 add r2,r1,#0
 2472 02d4 1A70     	 strb r2,[r3]
 2473              	.L126:
 616:../main.c     ****       {
 2474              	 .loc 4 616 0 discriminator 2
 2475 02d6 FB69     	 ldr r3,[r7,#28]
 2476 02d8 013B     	 sub r3,r3,#1
 2477 02da FB61     	 str r3,[r7,#28]
 2478              	.L125:
 616:../main.c     ****       {
 2479              	 .loc 4 616 0 is_stmt 0 discriminator 1
 2480 02dc FB69     	 ldr r3,[r7,#28]
 2481 02de 002B     	 cmp r3,#0
 2482 02e0 00DB     	 blt .LCB2126
 2483 02e2 23E7     	 b .L138
 2484              	.LCB2126:
 681:../main.c     **** 
 682:../main.c     ****           }
 683:../main.c     ****           XMC_DEBUG("candidate %d quality is %d\n", i, quality[i]);
 684:../main.c     **** 
 685:../main.c     ****         } // end of if ((playable_rows_bitmap & 1<<i) != 0)
 686:../main.c     ****         // loop to get another candidate
 687:../main.c     ****       } // end of for (i=rows-1; i>=0; i--)
 688:../main.c     ****       // ok we have at least one playable move. Find the highest quality move.
 689:../main.c     ****       XMC_DEBUG("quality table: %d %d %d %d\n", quality[0], quality[1], quality[2], quality[3]);
 690:../main.c     ****       XMC_DEBUG("finding highest quality move\n");
 691:../main.c     ****       for (i=0; i<rows; i++)
 2485              	 .loc 4 691 0 is_stmt 1
 2486 02e4 0023     	 mov r3,#0
 2487 02e6 FB61     	 str r3,[r7,#28]
 2488 02e8 16E0     	 b .L139
 2489              	.L141:
 692:../main.c     ****       {
 693:../main.c     ****         if (quality[i]>=peak_quality)
 2490              	 .loc 4 693 0
 2491 02ea 3A1C     	 mov r2,r7
 2492 02ec FB69     	 ldr r3,[r7,#28]
 2493 02ee D318     	 add r3,r2,r3
 2494 02f0 1B78     	 ldrb r3,[r3]
 2495 02f2 2522     	 mov r2,#37
 2496 02f4 BA18     	 add r2,r7,r2
 2497 02f6 1278     	 ldrb r2,[r2]
 2498 02f8 9A42     	 cmp r2,r3
 2499 02fa 0AD8     	 bhi .L140
 694:../main.c     ****         {
 695:../main.c     ****           peak_quality=quality[i];
 2500              	 .loc 4 695 0
 2501 02fc 2523     	 mov r3,#37
 2502 02fe FB18     	 add r3,r7,r3
 2503 0300 391C     	 mov r1,r7
 2504 0302 FA69     	 ldr r2,[r7,#28]
 2505 0304 8A18     	 add r2,r1,r2
 2506 0306 1278     	 ldrb r2,[r2]
 2507 0308 1A70     	 strb r2,[r3]
 696:../main.c     ****           peak_candidate=i;
 2508              	 .loc 4 696 0
 2509 030a 2423     	 mov r3,#36
 2510 030c FB18     	 add r3,r7,r3
 2511 030e FA69     	 ldr r2,[r7,#28]
 2512 0310 1A70     	 strb r2,[r3]
 2513              	.L140:
 691:../main.c     ****       {
 2514              	 .loc 4 691 0 discriminator 2
 2515 0312 FB69     	 ldr r3,[r7,#28]
 2516 0314 0133     	 add r3,r3,#1
 2517 0316 FB61     	 str r3,[r7,#28]
 2518              	.L139:
 691:../main.c     ****       {
 2519              	 .loc 4 691 0 is_stmt 0 discriminator 1
 2520 0318 0A4B     	 ldr r3,.L157+8
 2521 031a 1B78     	 ldrb r3,[r3]
 2522 031c 1A1E     	 sub r2,r3,#0
 2523 031e FB69     	 ldr r3,[r7,#28]
 2524 0320 9A42     	 cmp r2,r3
 2525 0322 E2DC     	 bgt .L141
 697:../main.c     ****           XMC_DEBUG("best so far is candidate %d\n", i);
 698:../main.c     ****         }
 699:../main.c     ****       }
 700:../main.c     ****       // change the quality values to make the computer play weaker
 701:../main.c     ****       // depending on level.
 702:../main.c     ****       if ((level==1) || (level==2))
 2526              	 .loc 4 702 0 is_stmt 1
 2527 0324 084B     	 ldr r3,.L157+12
 2528 0326 1B78     	 ldrb r3,[r3]
 2529 0328 012B     	 cmp r3,#1
 2530 032a 03D0     	 beq .L142
 2531              	 .loc 4 702 0 is_stmt 0 discriminator 1
 2532 032c 064B     	 ldr r3,.L157+12
 2533 032e 1B78     	 ldrb r3,[r3]
 2534 0330 022B     	 cmp r3,#2
 2535 0332 69D1     	 bne .L143
 2536              	.L142:
 703:../main.c     ****       {
 704:../main.c     ****         for (i=0; i<rows; i++)
 2537              	 .loc 4 704 0 is_stmt 1
 2538 0334 0023     	 mov r3,#0
 2539 0336 FB61     	 str r3,[r7,#28]
 2540 0338 3CE0     	 b .L144
 2541              	.L158:
 2542 033a C046     	 .align 2
 2543              	.L157:
 2544 033c 00000000 	 .word numsticks
 2545 0340 00000000 	 .word current_selection
 2546 0344 00000000 	 .word rows
 2547 0348 00000000 	 .word level
 2548              	.L146:
 705:../main.c     ****         {
 706:../main.c     ****           if (numsticks[i]>1)
 2549              	 .loc 4 706 0
 2550 034c 564A     	 ldr r2,.L159
 2551 034e FB69     	 ldr r3,[r7,#28]
 2552 0350 D318     	 add r3,r2,r3
 2553 0352 1B78     	 ldrb r3,[r3]
 2554 0354 012B     	 cmp r3,#1
 2555 0356 2AD9     	 bls .L145
 707:../main.c     ****           {
 708:../main.c     ****             if (random_num()>WEAKNESS)
 2556              	 .loc 4 708 0
 2557 0358 FFF7FEFF 	 bl random_num
 2558 035c 031E     	 sub r3,r0,#0
 2559 035e C82B     	 cmp r3,#200
 2560 0360 25D9     	 bls .L145
 709:../main.c     ****             {
 710:../main.c     ****               candidate[i]=numsticks[i]-1;
 2561              	 .loc 4 710 0
 2562 0362 514A     	 ldr r2,.L159
 2563 0364 FB69     	 ldr r3,[r7,#28]
 2564 0366 D318     	 add r3,r2,r3
 2565 0368 1B78     	 ldrb r3,[r3]
 2566 036a 013B     	 sub r3,r3,#1
 2567 036c D9B2     	 uxtb r1,r3
 2568 036e 0823     	 mov r3,#8
 2569 0370 FA18     	 add r2,r7,r3
 2570 0372 FB69     	 ldr r3,[r7,#28]
 2571 0374 D318     	 add r3,r2,r3
 2572 0376 0A1C     	 add r2,r1,#0
 2573 0378 1A70     	 strb r2,[r3]
 711:../main.c     ****               quality[i]=peak_quality+1;
 2574              	 .loc 4 711 0
 2575 037a 2523     	 mov r3,#37
 2576 037c FB18     	 add r3,r7,r3
 2577 037e 1B78     	 ldrb r3,[r3]
 2578 0380 0133     	 add r3,r3,#1
 2579 0382 D9B2     	 uxtb r1,r3
 2580 0384 3A1C     	 mov r2,r7
 2581 0386 FB69     	 ldr r3,[r7,#28]
 2582 0388 D318     	 add r3,r2,r3
 2583 038a 0A1C     	 add r2,r1,#0
 2584 038c 1A70     	 strb r2,[r3]
 712:../main.c     ****               if (random_num()>128U)
 2585              	 .loc 4 712 0
 2586 038e FFF7FEFF 	 bl random_num
 2587 0392 031E     	 sub r3,r0,#0
 2588 0394 802B     	 cmp r3,#128
 2589 0396 0AD9     	 bls .L145
 713:../main.c     ****               {
 714:../main.c     ****                 quality[i]++;
 2590              	 .loc 4 714 0
 2591 0398 3A1C     	 mov r2,r7
 2592 039a FB69     	 ldr r3,[r7,#28]
 2593 039c D318     	 add r3,r2,r3
 2594 039e 1B78     	 ldrb r3,[r3]
 2595 03a0 0133     	 add r3,r3,#1
 2596 03a2 D9B2     	 uxtb r1,r3
 2597 03a4 3A1C     	 mov r2,r7
 2598 03a6 FB69     	 ldr r3,[r7,#28]
 2599 03a8 D318     	 add r3,r2,r3
 2600 03aa 0A1C     	 add r2,r1,#0
 2601 03ac 1A70     	 strb r2,[r3]
 2602              	.L145:
 704:../main.c     ****         {
 2603              	 .loc 4 704 0 discriminator 2
 2604 03ae FB69     	 ldr r3,[r7,#28]
 2605 03b0 0133     	 add r3,r3,#1
 2606 03b2 FB61     	 str r3,[r7,#28]
 2607              	.L144:
 704:../main.c     ****         {
 2608              	 .loc 4 704 0 is_stmt 0 discriminator 1
 2609 03b4 3D4B     	 ldr r3,.L159+4
 2610 03b6 1B78     	 ldrb r3,[r3]
 2611 03b8 1A1E     	 sub r2,r3,#0
 2612 03ba FB69     	 ldr r3,[r7,#28]
 2613 03bc 9A42     	 cmp r2,r3
 2614 03be C5DC     	 bgt .L146
 715:../main.c     ****               }
 716:../main.c     ****             }
 717:../main.c     ****           }
 718:../main.c     ****         }
 719:../main.c     ****         // now find peak candidate again
 720:../main.c     ****         peak_quality=0;
 2615              	 .loc 4 720 0 is_stmt 1
 2616 03c0 2523     	 mov r3,#37
 2617 03c2 FB18     	 add r3,r7,r3
 2618 03c4 0022     	 mov r2,#0
 2619 03c6 1A70     	 strb r2,[r3]
 721:../main.c     ****         for (i=0; i<rows; i++)
 2620              	 .loc 4 721 0
 2621 03c8 0023     	 mov r3,#0
 2622 03ca FB61     	 str r3,[r7,#28]
 2623 03cc 16E0     	 b .L147
 2624              	.L149:
 722:../main.c     ****         {
 723:../main.c     ****           if (quality[i]>=peak_quality)
 2625              	 .loc 4 723 0
 2626 03ce 3A1C     	 mov r2,r7
 2627 03d0 FB69     	 ldr r3,[r7,#28]
 2628 03d2 D318     	 add r3,r2,r3
 2629 03d4 1B78     	 ldrb r3,[r3]
 2630 03d6 2522     	 mov r2,#37
 2631 03d8 BA18     	 add r2,r7,r2
 2632 03da 1278     	 ldrb r2,[r2]
 2633 03dc 9A42     	 cmp r2,r3
 2634 03de 0AD8     	 bhi .L148
 724:../main.c     ****           {
 725:../main.c     ****             peak_quality=quality[i];
 2635              	 .loc 4 725 0
 2636 03e0 2523     	 mov r3,#37
 2637 03e2 FB18     	 add r3,r7,r3
 2638 03e4 391C     	 mov r1,r7
 2639 03e6 FA69     	 ldr r2,[r7,#28]
 2640 03e8 8A18     	 add r2,r1,r2
 2641 03ea 1278     	 ldrb r2,[r2]
 2642 03ec 1A70     	 strb r2,[r3]
 726:../main.c     ****             peak_candidate=i;
 2643              	 .loc 4 726 0
 2644 03ee 2423     	 mov r3,#36
 2645 03f0 FB18     	 add r3,r7,r3
 2646 03f2 FA69     	 ldr r2,[r7,#28]
 2647 03f4 1A70     	 strb r2,[r3]
 2648              	.L148:
 721:../main.c     ****         {
 2649              	 .loc 4 721 0 discriminator 2
 2650 03f6 FB69     	 ldr r3,[r7,#28]
 2651 03f8 0133     	 add r3,r3,#1
 2652 03fa FB61     	 str r3,[r7,#28]
 2653              	.L147:
 721:../main.c     ****         {
 2654              	 .loc 4 721 0 is_stmt 0 discriminator 1
 2655 03fc 2B4B     	 ldr r3,.L159+4
 2656 03fe 1B78     	 ldrb r3,[r3]
 2657 0400 1A1E     	 sub r2,r3,#0
 2658 0402 FB69     	 ldr r3,[r7,#28]
 2659 0404 9A42     	 cmp r2,r3
 2660 0406 E2DC     	 bgt .L149
 2661              	.L143:
 727:../main.c     ****             XMC_DEBUG("weakened best candidate so far %d\n", i);
 728:../main.c     ****           }
 729:../main.c     ****         }
 730:../main.c     **** 
 731:../main.c     ****       }
 732:../main.c     ****       numsticks[peak_candidate]=candidate[peak_candidate];
 2662              	 .loc 4 732 0 is_stmt 1
 2663 0408 2423     	 mov r3,#36
 2664 040a FB18     	 add r3,r7,r3
 2665 040c 1B78     	 ldrb r3,[r3]
 2666 040e 2422     	 mov r2,#36
 2667 0410 BA18     	 add r2,r7,r2
 2668 0412 1278     	 ldrb r2,[r2]
 2669 0414 0821     	 mov r1,#8
 2670 0416 7918     	 add r1,r7,r1
 2671 0418 895C     	 ldrb r1,[r1,r2]
 2672 041a 234A     	 ldr r2,.L159
 2673 041c D154     	 strb r1,[r2,r3]
 2674 041e 40E0     	 b .L115
 2675              	.L124:
 733:../main.c     ****     } // end of if (num_playable_rows>=1)
 734:../main.c     ****     else
 735:../main.c     ****     {
 736:../main.c     ****       // we don't have a playable row in the bitmap!
 737:../main.c     ****       // play any row we can..
 738:../main.c     ****       for (i=0; i<rows; i++)
 2676              	 .loc 4 738 0
 2677 0420 0023     	 mov r3,#0
 2678 0422 FB61     	 str r3,[r7,#28]
 2679 0424 16E0     	 b .L151
 2680              	.L153:
 739:../main.c     ****       {
 740:../main.c     ****         if (numsticks[i]>0)
 2681              	 .loc 4 740 0
 2682 0426 204A     	 ldr r2,.L159
 2683 0428 FB69     	 ldr r3,[r7,#28]
 2684 042a D318     	 add r3,r2,r3
 2685 042c 1B78     	 ldrb r3,[r3]
 2686 042e 002B     	 cmp r3,#0
 2687 0430 0DD0     	 beq .L152
 741:../main.c     ****         {
 742:../main.c     ****           numsticks[i]--;
 2688              	 .loc 4 742 0
 2689 0432 1D4A     	 ldr r2,.L159
 2690 0434 FB69     	 ldr r3,[r7,#28]
 2691 0436 D318     	 add r3,r2,r3
 2692 0438 1B78     	 ldrb r3,[r3]
 2693 043a 013B     	 sub r3,r3,#1
 2694 043c D9B2     	 uxtb r1,r3
 2695 043e 1A4A     	 ldr r2,.L159
 2696 0440 FB69     	 ldr r3,[r7,#28]
 2697 0442 D318     	 add r3,r2,r3
 2698 0444 0A1C     	 add r2,r1,#0
 2699 0446 1A70     	 strb r2,[r3]
 743:../main.c     ****           i=rows;
 2700              	 .loc 4 743 0
 2701 0448 184B     	 ldr r3,.L159+4
 2702 044a 1B78     	 ldrb r3,[r3]
 2703 044c FB61     	 str r3,[r7,#28]
 2704              	.L152:
 738:../main.c     ****       {
 2705              	 .loc 4 738 0 discriminator 2
 2706 044e FB69     	 ldr r3,[r7,#28]
 2707 0450 0133     	 add r3,r3,#1
 2708 0452 FB61     	 str r3,[r7,#28]
 2709              	.L151:
 738:../main.c     ****       {
 2710              	 .loc 4 738 0 is_stmt 0 discriminator 1
 2711 0454 154B     	 ldr r3,.L159+4
 2712 0456 1B78     	 ldrb r3,[r3]
 2713 0458 1A1E     	 sub r2,r3,#0
 2714 045a FB69     	 ldr r3,[r7,#28]
 2715 045c 9A42     	 cmp r2,r3
 2716 045e E2DC     	 bgt .L153
 2717 0460 1FE0     	 b .L115
 2718              	.L120:
 744:../main.c     ****         }
 745:../main.c     ****       }
 746:../main.c     ****     }
 747:../main.c     ****   } // end of if (x>0)
 748:../main.c     ****   else
 749:../main.c     ****   {
 750:../main.c     ****     // no strategy any more. play any row we can..
 751:../main.c     ****     for (i=0; i<rows; i++)
 2719              	 .loc 4 751 0 is_stmt 1
 2720 0462 0023     	 mov r3,#0
 2721 0464 FB61     	 str r3,[r7,#28]
 2722 0466 16E0     	 b .L154
 2723              	.L156:
 752:../main.c     ****     {
 753:../main.c     ****       if (numsticks[i]>0)
 2724              	 .loc 4 753 0
 2725 0468 0F4A     	 ldr r2,.L159
 2726 046a FB69     	 ldr r3,[r7,#28]
 2727 046c D318     	 add r3,r2,r3
 2728 046e 1B78     	 ldrb r3,[r3]
 2729 0470 002B     	 cmp r3,#0
 2730 0472 0DD0     	 beq .L155
 754:../main.c     ****       {
 755:../main.c     ****         numsticks[i]--;
 2731              	 .loc 4 755 0
 2732 0474 0C4A     	 ldr r2,.L159
 2733 0476 FB69     	 ldr r3,[r7,#28]
 2734 0478 D318     	 add r3,r2,r3
 2735 047a 1B78     	 ldrb r3,[r3]
 2736 047c 013B     	 sub r3,r3,#1
 2737 047e D9B2     	 uxtb r1,r3
 2738 0480 094A     	 ldr r2,.L159
 2739 0482 FB69     	 ldr r3,[r7,#28]
 2740 0484 D318     	 add r3,r2,r3
 2741 0486 0A1C     	 add r2,r1,#0
 2742 0488 1A70     	 strb r2,[r3]
 756:../main.c     ****         i=rows;
 2743              	 .loc 4 756 0
 2744 048a 084B     	 ldr r3,.L159+4
 2745 048c 1B78     	 ldrb r3,[r3]
 2746 048e FB61     	 str r3,[r7,#28]
 2747              	.L155:
 751:../main.c     ****     {
 2748              	 .loc 4 751 0 discriminator 2
 2749 0490 FB69     	 ldr r3,[r7,#28]
 2750 0492 0133     	 add r3,r3,#1
 2751 0494 FB61     	 str r3,[r7,#28]
 2752              	.L154:
 751:../main.c     ****     {
 2753              	 .loc 4 751 0 is_stmt 0 discriminator 1
 2754 0496 054B     	 ldr r3,.L159+4
 2755 0498 1B78     	 ldrb r3,[r3]
 2756 049a 1A1E     	 sub r2,r3,#0
 2757 049c FB69     	 ldr r3,[r7,#28]
 2758 049e 9A42     	 cmp r2,r3
 2759 04a0 E2DC     	 bgt .L156
 2760              	.L115:
 757:../main.c     ****       }
 758:../main.c     ****     }
 759:../main.c     ****   }
 760:../main.c     **** }
 2761              	 .loc 4 760 0 is_stmt 1
 2762 04a2 BD46     	 mov sp,r7
 2763 04a4 0BB0     	 add sp,sp,#44
 2764              	 
 2765 04a6 90BD     	 pop {r4,r7,pc}
 2766              	.L160:
 2767              	 .align 2
 2768              	.L159:
 2769 04a8 00000000 	 .word numsticks
 2770 04ac 00000000 	 .word rows
 2771              	 .cfi_endproc
 2772              	.LFE204:
 2774              	 .section .text.show_status,"ax",%progbits
 2775              	 .align 2
 2776              	 .global show_status
 2777              	 .code 16
 2778              	 .thumb_func
 2780              	show_status:
 2781              	.LFB205:
 761:../main.c     **** 
 762:../main.c     **** void
 763:../main.c     **** show_status(void)
 764:../main.c     **** {
 2782              	 .loc 4 764 0
 2783              	 .cfi_startproc
 2784 0000 80B5     	 push {r7,lr}
 2785              	.LCFI60:
 2786              	 .cfi_def_cfa_offset 8
 2787              	 .cfi_offset 7,-8
 2788              	 .cfi_offset 14,-4
 2789 0002 00AF     	 add r7,sp,#0
 2790              	.LCFI61:
 2791              	 .cfi_def_cfa_register 7
 765:../main.c     **** #ifdef DO_DEBUG
 766:../main.c     ****   char i;
 767:../main.c     **** #endif
 768:../main.c     **** 
 769:../main.c     ****   plot_ram_rows(numsticks);
 2792              	 .loc 4 769 0
 2793 0004 034B     	 ldr r3,.L162
 2794 0006 181C     	 mov r0,r3
 2795 0008 FFF7FEFF 	 bl plot_ram_rows
 770:../main.c     ****   display_write();
 2796              	 .loc 4 770 0
 2797 000c FFF7FEFF 	 bl display_write
 771:../main.c     **** 
 772:../main.c     **** #ifdef DO_DEBUG
 773:../main.c     ****   printf("\n");
 774:../main.c     ****   for (i=0; i<rows; i++)
 775:../main.c     ****   {
 776:../main.c     **** 	  printf("%d:  ", i+1);
 777:../main.c     ****   }
 778:../main.c     ****   printf("\n");
 779:../main.c     ****   for (i=0; i<rows; i++)
 780:../main.c     ****   {
 781:../main.c     **** 	  printf("%d   ", numsticks[(unsigned char)i]);
 782:../main.c     ****   }
 783:../main.c     ****   printf("\n");
 784:../main.c     **** #endif
 785:../main.c     **** }
 2798              	 .loc 4 785 0
 2799 0010 BD46     	 mov sp,r7
 2800              	 
 2801 0012 80BD     	 pop {r7,pc}
 2802              	.L163:
 2803              	 .align 2
 2804              	.L162:
 2805 0014 00000000 	 .word numsticks
 2806              	 .cfi_endproc
 2807              	.LFE205:
 2809              	 .section .text.set_led,"ax",%progbits
 2810              	 .align 2
 2811              	 .global set_led
 2812              	 .code 16
 2813              	 .thumb_func
 2815              	set_led:
 2816              	.LFB206:
 786:../main.c     **** 
 787:../main.c     **** /* set_led
 788:../main.c     ****  * used to turn on and off a small LED (LED2) on the microcontroller board
 789:../main.c     ****  * just for debug or heartbeat indication purposes
 790:../main.c     ****  */
 791:../main.c     **** void
 792:../main.c     **** set_led(char state)
 793:../main.c     **** {
 2817              	 .loc 4 793 0
 2818              	 .cfi_startproc
 2819 0000 80B5     	 push {r7,lr}
 2820              	.LCFI62:
 2821              	 .cfi_def_cfa_offset 8
 2822              	 .cfi_offset 7,-8
 2823              	 .cfi_offset 14,-4
 2824 0002 82B0     	 sub sp,sp,#8
 2825              	.LCFI63:
 2826              	 .cfi_def_cfa_offset 16
 2827 0004 00AF     	 add r7,sp,#0
 2828              	.LCFI64:
 2829              	 .cfi_def_cfa_register 7
 2830 0006 021C     	 mov r2,r0
 2831 0008 FB1D     	 add r3,r7,#7
 2832 000a 1A70     	 strb r2,[r3]
 794:../main.c     ****   switch(state)
 2833              	 .loc 4 794 0
 2834 000c FB1D     	 add r3,r7,#7
 2835 000e 1B78     	 ldrb r3,[r3]
 2836 0010 002B     	 cmp r3,#0
 2837 0012 02D0     	 beq .L166
 2838 0014 012B     	 cmp r3,#1
 2839 0016 05D0     	 beq .L167
 795:../main.c     ****   {
 796:../main.c     ****   case 0:
 797:../main.c     ****     DIGITAL_IO_SetOutputLow(&led2);
 798:../main.c     ****     break;
 799:../main.c     ****   case 1:
 800:../main.c     ****     DIGITAL_IO_SetOutputHigh(&led2);
 801:../main.c     ****     break;
 802:../main.c     ****   default:
 803:../main.c     ****     break;
 2840              	 .loc 4 803 0
 2841 0018 09E0     	 b .L164
 2842              	.L166:
 797:../main.c     ****     break;
 2843              	 .loc 4 797 0
 2844 001a 064B     	 ldr r3,.L169
 2845 001c 181C     	 mov r0,r3
 2846 001e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 798:../main.c     ****   case 1:
 2847              	 .loc 4 798 0
 2848 0022 04E0     	 b .L164
 2849              	.L167:
 800:../main.c     ****     break;
 2850              	 .loc 4 800 0
 2851 0024 034B     	 ldr r3,.L169
 2852 0026 181C     	 mov r0,r3
 2853 0028 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 801:../main.c     ****   default:
 2854              	 .loc 4 801 0
 2855 002c C046     	 mov r8,r8
 2856              	.L164:
 804:../main.c     ****   }
 805:../main.c     **** }
 2857              	 .loc 4 805 0
 2858 002e BD46     	 mov sp,r7
 2859 0030 02B0     	 add sp,sp,#8
 2860              	 
 2861 0032 80BD     	 pop {r7,pc}
 2862              	.L170:
 2863              	 .align 2
 2864              	.L169:
 2865 0034 00000000 	 .word led2
 2866              	 .cfi_endproc
 2867              	.LFE206:
 2869              	 .section .text.play_tone,"ax",%progbits
 2870              	 .align 2
 2871              	 .global play_tone
 2872              	 .code 16
 2873              	 .thumb_func
 2875              	play_tone:
 2876              	.LFB207:
 806:../main.c     **** 
 807:../main.c     **** void
 808:../main.c     **** play_tone(char type)
 809:../main.c     **** {
 2877              	 .loc 4 809 0
 2878              	 .cfi_startproc
 2879 0000 80B5     	 push {r7,lr}
 2880              	.LCFI65:
 2881              	 .cfi_def_cfa_offset 8
 2882              	 .cfi_offset 7,-8
 2883              	 .cfi_offset 14,-4
 2884 0002 84B0     	 sub sp,sp,#16
 2885              	.LCFI66:
 2886              	 .cfi_def_cfa_offset 24
 2887 0004 00AF     	 add r7,sp,#0
 2888              	.LCFI67:
 2889              	 .cfi_def_cfa_register 7
 2890 0006 021C     	 mov r2,r0
 2891 0008 FB1D     	 add r3,r7,#7
 2892 000a 1A70     	 strb r2,[r3]
 810:../main.c     ****   unsigned int i;
 811:../main.c     ****   PWM_CCU4_Start(&pwm1);
 2893              	 .loc 4 811 0
 2894 000c 1E4B     	 ldr r3,.L177
 2895 000e 181C     	 mov r0,r3
 2896 0010 FFF7FEFF 	 bl PWM_CCU4_Start
 812:../main.c     ****   for (i=0; i<50; i++)
 2897              	 .loc 4 812 0
 2898 0014 0023     	 mov r3,#0
 2899 0016 FB60     	 str r3,[r7,#12]
 2900 0018 2BE0     	 b .L172
 2901              	.L176:
 813:../main.c     ****   {
 814:../main.c     ****     if (type==0) // falling tone
 2902              	 .loc 4 814 0
 2903 001a FB1D     	 add r3,r7,#7
 2904 001c 1B78     	 ldrb r3,[r3]
 2905 001e 002B     	 cmp r3,#0
 2906 0020 0CD1     	 bne .L173
 815:../main.c     ****     {
 816:../main.c     ****       PWM_CCU4_SetFreq(&pwm1, 500+((50-i)*20));
 2907              	 .loc 4 816 0
 2908 0022 FB68     	 ldr r3,[r7,#12]
 2909 0024 1422     	 mov r2,#20
 2910 0026 5242     	 neg r2,r2
 2911 0028 5343     	 mul r3,r2
 2912 002a 184A     	 ldr r2,.L177+4
 2913 002c 9446     	 mov ip,r2
 2914 002e 6344     	 add r3,r3,ip
 2915 0030 154A     	 ldr r2,.L177
 2916 0032 101C     	 mov r0,r2
 2917 0034 191C     	 mov r1,r3
 2918 0036 FFF7FEFF 	 bl PWM_CCU4_SetFreq
 2919 003a 0FE0     	 b .L174
 2920              	.L173:
 817:../main.c     ****     }
 818:../main.c     ****     else if (type==1) // rising tone
 2921              	 .loc 4 818 0
 2922 003c FB1D     	 add r3,r7,#7
 2923 003e 1B78     	 ldrb r3,[r3]
 2924 0040 012B     	 cmp r3,#1
 2925 0042 0BD1     	 bne .L174
 819:../main.c     ****     {
 820:../main.c     ****       PWM_CCU4_SetFreq(&pwm1, 500+(i*20));
 2926              	 .loc 4 820 0
 2927 0044 FA68     	 ldr r2,[r7,#12]
 2928 0046 131C     	 mov r3,r2
 2929 0048 9B00     	 lsl r3,r3,#2
 2930 004a 9B18     	 add r3,r3,r2
 2931 004c 9B00     	 lsl r3,r3,#2
 2932 004e F533     	 add r3,r3,#245
 2933 0050 FF33     	 add r3,r3,#255
 2934 0052 0D4A     	 ldr r2,.L177
 2935 0054 101C     	 mov r0,r2
 2936 0056 191C     	 mov r1,r3
 2937 0058 FFF7FEFF 	 bl PWM_CCU4_SetFreq
 2938              	.L174:
 821:../main.c     ****     }
 822:../main.c     ****     general_timer=50;
 2939              	 .loc 4 822 0
 2940 005c 0C4B     	 ldr r3,.L177+8
 2941 005e 3222     	 mov r2,#50
 2942 0060 1A60     	 str r2,[r3]
 823:../main.c     ****     while(general_timer);
 2943              	 .loc 4 823 0
 2944 0062 C046     	 mov r8,r8
 2945              	.L175:
 2946              	 .loc 4 823 0 is_stmt 0 discriminator 1
 2947 0064 0A4B     	 ldr r3,.L177+8
 2948 0066 1B68     	 ldr r3,[r3]
 2949 0068 002B     	 cmp r3,#0
 2950 006a FBD1     	 bne .L175
 812:../main.c     ****   {
 2951              	 .loc 4 812 0 is_stmt 1 discriminator 2
 2952 006c FB68     	 ldr r3,[r7,#12]
 2953 006e 0133     	 add r3,r3,#1
 2954 0070 FB60     	 str r3,[r7,#12]
 2955              	.L172:
 812:../main.c     ****   {
 2956              	 .loc 4 812 0 is_stmt 0 discriminator 1
 2957 0072 FB68     	 ldr r3,[r7,#12]
 2958 0074 312B     	 cmp r3,#49
 2959 0076 D0D9     	 bls .L176
 824:../main.c     ****   }
 825:../main.c     ****   PWM_CCU4_Stop(&pwm1);
 2960              	 .loc 4 825 0 is_stmt 1
 2961 0078 034B     	 ldr r3,.L177
 2962 007a 181C     	 mov r0,r3
 2963 007c FFF7FEFF 	 bl PWM_CCU4_Stop
 826:../main.c     **** }
 2964              	 .loc 4 826 0
 2965 0080 BD46     	 mov sp,r7
 2966 0082 04B0     	 add sp,sp,#16
 2967              	 
 2968 0084 80BD     	 pop {r7,pc}
 2969              	.L178:
 2970 0086 C046     	 .align 2
 2971              	.L177:
 2972 0088 00000000 	 .word pwm1
 2973 008c DC050000 	 .word 1500
 2974 0090 00000000 	 .word general_timer
 2975              	 .cfi_endproc
 2976              	.LFE207:
 2978              	 .section .text.display_init,"ax",%progbits
 2979              	 .align 2
 2980              	 .global display_init
 2981              	 .code 16
 2982              	 .thumb_func
 2984              	display_init:
 2985              	.LFB208:
 827:../main.c     **** 
 828:../main.c     **** /************** 8x8 LED Matrix display handling functions ************/
 829:../main.c     **** 
 830:../main.c     **** /* display_init
 831:../main.c     ****  * initializes the display chip
 832:../main.c     ****  */
 833:../main.c     **** void
 834:../main.c     **** display_init(void)
 835:../main.c     **** {
 2986              	 .loc 4 835 0
 2987              	 .cfi_startproc
 2988 0000 90B5     	 push {r4,r7,lr}
 2989              	.LCFI68:
 2990              	 .cfi_def_cfa_offset 12
 2991              	 .cfi_offset 4,-12
 2992              	 .cfi_offset 7,-8
 2993              	 .cfi_offset 14,-4
 2994 0002 85B0     	 sub sp,sp,#20
 2995              	.LCFI69:
 2996              	 .cfi_def_cfa_offset 32
 2997 0004 02AF     	 add r7,sp,#8
 2998              	.LCFI70:
 2999              	 .cfi_def_cfa 7,24
 836:../main.c     ****   unsigned char i;
 837:../main.c     ****   for (i=0; i<3; i++)
 3000              	 .loc 4 837 0
 3001 0006 FB1D     	 add r3,r7,#7
 3002 0008 0022     	 mov r2,#0
 3003 000a 1A70     	 strb r2,[r3]
 3004 000c 1AE0     	 b .L180
 3005              	.L182:
 838:../main.c     ****   {
 839:../main.c     ****     I2C_MASTER_Transmit(&i2c_bus, true, led_address, (uint8_t*)(&display_init_data[i]), 1, true);
 3006              	 .loc 4 839 0
 3007 000e FB1D     	 add r3,r7,#7
 3008 0010 1A78     	 ldrb r2,[r3]
 3009 0012 104B     	 ldr r3,.L183
 3010 0014 D418     	 add r4,r2,r3
 3011 0016 104A     	 ldr r2,.L183+4
 3012 0018 0123     	 mov r3,#1
 3013 001a 0093     	 str r3,[sp]
 3014 001c 0123     	 mov r3,#1
 3015 001e 0193     	 str r3,[sp,#4]
 3016 0020 101C     	 mov r0,r2
 3017 0022 0121     	 mov r1,#1
 3018 0024 E022     	 mov r2,#224
 3019 0026 231C     	 mov r3,r4
 3020 0028 FFF7FEFF 	 bl I2C_MASTER_Transmit
 840:../main.c     ****     while(I2C_MASTER_IsTxBusy(&i2c_bus));
 3021              	 .loc 4 840 0
 3022 002c C046     	 mov r8,r8
 3023              	.L181:
 3024              	 .loc 4 840 0 is_stmt 0 discriminator 1
 3025 002e 0A4B     	 ldr r3,.L183+4
 3026 0030 181C     	 mov r0,r3
 3027 0032 FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 3028 0036 031E     	 sub r3,r0,#0
 3029 0038 F9D1     	 bne .L181
 837:../main.c     ****   {
 3030              	 .loc 4 837 0 is_stmt 1 discriminator 2
 3031 003a FB1D     	 add r3,r7,#7
 3032 003c 1A78     	 ldrb r2,[r3]
 3033 003e FB1D     	 add r3,r7,#7
 3034 0040 0132     	 add r2,r2,#1
 3035 0042 1A70     	 strb r2,[r3]
 3036              	.L180:
 837:../main.c     ****   {
 3037              	 .loc 4 837 0 is_stmt 0 discriminator 1
 3038 0044 FB1D     	 add r3,r7,#7
 3039 0046 1B78     	 ldrb r3,[r3]
 3040 0048 022B     	 cmp r3,#2
 3041 004a E0D9     	 bls .L182
 841:../main.c     ****   }
 842:../main.c     **** }
 3042              	 .loc 4 842 0 is_stmt 1
 3043 004c BD46     	 mov sp,r7
 3044 004e 03B0     	 add sp,sp,#12
 3045              	 
 3046 0050 90BD     	 pop {r4,r7,pc}
 3047              	.L184:
 3048 0052 C046     	 .align 2
 3049              	.L183:
 3050 0054 00000000 	 .word display_init_data
 3051 0058 00000000 	 .word i2c_bus
 3052              	 .cfi_endproc
 3053              	.LFE208:
 3055              	 .section .text.display_write,"ax",%progbits
 3056              	 .align 2
 3057              	 .global display_write
 3058              	 .code 16
 3059              	 .thumb_func
 3061              	display_write:
 3062              	.LFB209:
 843:../main.c     **** 
 844:../main.c     **** /* display_write
 845:../main.c     ****  * sends the display ram data to the display
 846:../main.c     ****  */
 847:../main.c     **** void
 848:../main.c     **** display_write(void)
 849:../main.c     **** {
 3063              	 .loc 4 849 0
 3064              	 .cfi_startproc
 3065 0000 80B5     	 push {r7,lr}
 3066              	.LCFI71:
 3067              	 .cfi_def_cfa_offset 8
 3068              	 .cfi_offset 7,-8
 3069              	 .cfi_offset 14,-4
 3070 0002 82B0     	 sub sp,sp,#8
 3071              	.LCFI72:
 3072              	 .cfi_def_cfa_offset 16
 3073 0004 00AF     	 add r7,sp,#0
 3074              	.LCFI73:
 3075              	 .cfi_def_cfa_register 7
 850:../main.c     ****   unsigned char i;
 851:../main.c     **** 
 852:../main.c     ****   I2C_MASTER_SendStart(&i2c_bus, led_address, XMC_I2C_CH_CMD_WRITE);
 3076              	 .loc 4 852 0
 3077 0006 264B     	 ldr r3,.L192
 3078 0008 181C     	 mov r0,r3
 3079 000a E021     	 mov r1,#224
 3080 000c 0022     	 mov r2,#0
 3081 000e FFF7FEFF 	 bl I2C_MASTER_SendStart
 853:../main.c     ****   //while(I2C_MASTER_GetFlagStatus(&i2c_bus, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U);
 854:../main.c     ****   //I2C_MASTER_ClearFlag(&i2c_bus, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 855:../main.c     **** 
 856:../main.c     ****   I2C_MASTER_TransmitByte(&i2c_bus, 0x00); // select display address 0x00
 3082              	 .loc 4 856 0
 3083 0012 234B     	 ldr r3,.L192
 3084 0014 181C     	 mov r0,r3
 3085 0016 0021     	 mov r1,#0
 3086 0018 FFF7FEFF 	 bl I2C_MASTER_TransmitByte
 857:../main.c     ****   while(I2C_MASTER_IsTxBusy(&i2c_bus));
 3087              	 .loc 4 857 0
 3088 001c C046     	 mov r8,r8
 3089              	.L186:
 3090              	 .loc 4 857 0 is_stmt 0 discriminator 1
 3091 001e 204B     	 ldr r3,.L192
 3092 0020 181C     	 mov r0,r3
 3093 0022 FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 3094 0026 031E     	 sub r3,r0,#0
 3095 0028 F9D1     	 bne .L186
 858:../main.c     **** 
 859:../main.c     ****   // now write out 128 bits, of which 64 correspond to the LEDs on an 8x8 module
 860:../main.c     ****   for (i=0; i<8; i++)
 3096              	 .loc 4 860 0 is_stmt 1
 3097 002a FB1D     	 add r3,r7,#7
 3098 002c 0022     	 mov r2,#0
 3099 002e 1A70     	 strb r2,[r3]
 3100 0030 22E0     	 b .L187
 3101              	.L190:
 861:../main.c     ****   {
 862:../main.c     ****     I2C_MASTER_TransmitByte(&i2c_bus, display_ram[i] & 0xff);
 3102              	 .loc 4 862 0
 3103 0032 FB1D     	 add r3,r7,#7
 3104 0034 1A78     	 ldrb r2,[r3]
 3105 0036 1B4B     	 ldr r3,.L192+4
 3106 0038 5200     	 lsl r2,r2,#1
 3107 003a D35A     	 ldrh r3,[r2,r3]
 3108 003c DBB2     	 uxtb r3,r3
 3109 003e 184A     	 ldr r2,.L192
 3110 0040 101C     	 mov r0,r2
 3111 0042 191C     	 mov r1,r3
 3112 0044 FFF7FEFF 	 bl I2C_MASTER_TransmitByte
 863:../main.c     ****     while(I2C_MASTER_IsTxBusy(&i2c_bus));
 3113              	 .loc 4 863 0
 3114 0048 C046     	 mov r8,r8
 3115              	.L188:
 3116              	 .loc 4 863 0 is_stmt 0 discriminator 1
 3117 004a 154B     	 ldr r3,.L192
 3118 004c 181C     	 mov r0,r3
 3119 004e FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 3120 0052 031E     	 sub r3,r0,#0
 3121 0054 F9D1     	 bne .L188
 864:../main.c     ****     I2C_MASTER_TransmitByte(&i2c_bus, 0); // display IC has 16x8 bits RAM but display is 8x8 bits
 3122              	 .loc 4 864 0 is_stmt 1
 3123 0056 124B     	 ldr r3,.L192
 3124 0058 181C     	 mov r0,r3
 3125 005a 0021     	 mov r1,#0
 3126 005c FFF7FEFF 	 bl I2C_MASTER_TransmitByte
 865:../main.c     ****     while(I2C_MASTER_IsTxBusy(&i2c_bus));
 3127              	 .loc 4 865 0
 3128 0060 C046     	 mov r8,r8
 3129              	.L189:
 3130              	 .loc 4 865 0 is_stmt 0 discriminator 1
 3131 0062 0F4B     	 ldr r3,.L192
 3132 0064 181C     	 mov r0,r3
 3133 0066 FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 3134 006a 031E     	 sub r3,r0,#0
 3135 006c F9D1     	 bne .L189
 860:../main.c     ****   {
 3136              	 .loc 4 860 0 is_stmt 1 discriminator 2
 3137 006e FB1D     	 add r3,r7,#7
 3138 0070 1A78     	 ldrb r2,[r3]
 3139 0072 FB1D     	 add r3,r7,#7
 3140 0074 0132     	 add r2,r2,#1
 3141 0076 1A70     	 strb r2,[r3]
 3142              	.L187:
 860:../main.c     ****   {
 3143              	 .loc 4 860 0 is_stmt 0 discriminator 1
 3144 0078 FB1D     	 add r3,r7,#7
 3145 007a 1B78     	 ldrb r3,[r3]
 3146 007c 072B     	 cmp r3,#7
 3147 007e D8D9     	 bls .L190
 866:../main.c     ****   }
 867:../main.c     ****   I2C_MASTER_SendStop(&i2c_bus);
 3148              	 .loc 4 867 0 is_stmt 1
 3149 0080 074B     	 ldr r3,.L192
 3150 0082 181C     	 mov r0,r3
 3151 0084 FFF7FEFF 	 bl I2C_MASTER_SendStop
 868:../main.c     **** 
 869:../main.c     ****   display_update_timer=10;
 3152              	 .loc 4 869 0
 3153 0088 074B     	 ldr r3,.L192+8
 3154 008a 0A22     	 mov r2,#10
 3155 008c 1A60     	 str r2,[r3]
 870:../main.c     ****   while(display_update_timer);
 3156              	 .loc 4 870 0
 3157 008e C046     	 mov r8,r8
 3158              	.L191:
 3159              	 .loc 4 870 0 is_stmt 0 discriminator 1
 3160 0090 054B     	 ldr r3,.L192+8
 3161 0092 1B68     	 ldr r3,[r3]
 3162 0094 002B     	 cmp r3,#0
 3163 0096 FBD1     	 bne .L191
 871:../main.c     **** 
 872:../main.c     **** }
 3164              	 .loc 4 872 0 is_stmt 1
 3165 0098 BD46     	 mov sp,r7
 3166 009a 02B0     	 add sp,sp,#8
 3167              	 
 3168 009c 80BD     	 pop {r7,pc}
 3169              	.L193:
 3170 009e C046     	 .align 2
 3171              	.L192:
 3172 00a0 00000000 	 .word i2c_bus
 3173 00a4 00000000 	 .word display_ram
 3174 00a8 00000000 	 .word display_update_timer
 3175              	 .cfi_endproc
 3176              	.LFE209:
 3178              	 .section .text.display_ram_blank,"ax",%progbits
 3179              	 .align 2
 3180              	 .global display_ram_blank
 3181              	 .code 16
 3182              	 .thumb_func
 3184              	display_ram_blank:
 3185              	.LFB210:
 873:../main.c     **** 
 874:../main.c     **** /************* display ram related functions ***********/
 875:../main.c     **** 
 876:../main.c     **** // all of these functions make modifications to the local ram representation
 877:../main.c     **** // of the display. Nothing is actually updated on the display, until
 878:../main.c     **** // display_write is called.
 879:../main.c     **** 
 880:../main.c     **** /* display_ram_blank
 881:../main.c     ****  * sets the display ram to all blank.
 882:../main.c     ****  * Doesn't update to the display, call display_write to do that.
 883:../main.c     ****  */
 884:../main.c     **** void
 885:../main.c     **** display_ram_blank(void)
 886:../main.c     **** {
 3186              	 .loc 4 886 0
 3187              	 .cfi_startproc
 3188 0000 80B5     	 push {r7,lr}
 3189              	.LCFI74:
 3190              	 .cfi_def_cfa_offset 8
 3191              	 .cfi_offset 7,-8
 3192              	 .cfi_offset 14,-4
 3193 0002 82B0     	 sub sp,sp,#8
 3194              	.LCFI75:
 3195              	 .cfi_def_cfa_offset 16
 3196 0004 00AF     	 add r7,sp,#0
 3197              	.LCFI76:
 3198              	 .cfi_def_cfa_register 7
 887:../main.c     ****   unsigned char i;
 888:../main.c     ****   for (i=0; i<8; i++)
 3199              	 .loc 4 888 0
 3200 0006 FB1D     	 add r3,r7,#7
 3201 0008 0022     	 mov r2,#0
 3202 000a 1A70     	 strb r2,[r3]
 3203 000c 0AE0     	 b .L195
 3204              	.L196:
 889:../main.c     ****   {
 890:../main.c     ****     display_ram[i]=0;
 3205              	 .loc 4 890 0 discriminator 3
 3206 000e FB1D     	 add r3,r7,#7
 3207 0010 1A78     	 ldrb r2,[r3]
 3208 0012 084B     	 ldr r3,.L197
 3209 0014 5200     	 lsl r2,r2,#1
 3210 0016 0021     	 mov r1,#0
 3211 0018 D152     	 strh r1,[r2,r3]
 888:../main.c     ****   {
 3212              	 .loc 4 888 0 discriminator 3
 3213 001a FB1D     	 add r3,r7,#7
 3214 001c 1A78     	 ldrb r2,[r3]
 3215 001e FB1D     	 add r3,r7,#7
 3216 0020 0132     	 add r2,r2,#1
 3217 0022 1A70     	 strb r2,[r3]
 3218              	.L195:
 888:../main.c     ****   {
 3219              	 .loc 4 888 0 is_stmt 0 discriminator 1
 3220 0024 FB1D     	 add r3,r7,#7
 3221 0026 1B78     	 ldrb r3,[r3]
 3222 0028 072B     	 cmp r3,#7
 3223 002a F0D9     	 bls .L196
 891:../main.c     ****   }
 892:../main.c     **** }
 3224              	 .loc 4 892 0 is_stmt 1
 3225 002c BD46     	 mov sp,r7
 3226 002e 02B0     	 add sp,sp,#8
 3227              	 
 3228 0030 80BD     	 pop {r7,pc}
 3229              	.L198:
 3230 0032 C046     	 .align 2
 3231              	.L197:
 3232 0034 00000000 	 .word display_ram
 3233              	 .cfi_endproc
 3234              	.LFE210:
 3236              	 .section .text.plot_ram_pixel,"ax",%progbits
 3237              	 .align 2
 3238              	 .global plot_ram_pixel
 3239              	 .code 16
 3240              	 .thumb_func
 3242              	plot_ram_pixel:
 3243              	.LFB211:
 893:../main.c     **** 
 894:../main.c     **** /* plot_ram_pixel
 895:../main.c     ****  * sets a pixel in the display ram.
 896:../main.c     ****  * Doesn't update the display, call display_write to do that.
 897:../main.c     ****  */
 898:../main.c     **** void
 899:../main.c     **** plot_ram_pixel(int x, int y)
 900:../main.c     **** {
 3244              	 .loc 4 900 0
 3245              	 .cfi_startproc
 3246 0000 80B5     	 push {r7,lr}
 3247              	.LCFI77:
 3248              	 .cfi_def_cfa_offset 8
 3249              	 .cfi_offset 7,-8
 3250              	 .cfi_offset 14,-4
 3251 0002 82B0     	 sub sp,sp,#8
 3252              	.LCFI78:
 3253              	 .cfi_def_cfa_offset 16
 3254 0004 00AF     	 add r7,sp,#0
 3255              	.LCFI79:
 3256              	 .cfi_def_cfa_register 7
 3257 0006 7860     	 str r0,[r7,#4]
 3258 0008 3960     	 str r1,[r7]
 901:../main.c     ****   switch(ORIENTATION) // for future use if the display orientation ever changes
 902:../main.c     ****   {
 903:../main.c     ****   case 0:
 904:../main.c     ****     x=8-x-1;
 3259              	 .loc 4 904 0
 3260 000a 7B68     	 ldr r3,[r7,#4]
 3261 000c 0722     	 mov r2,#7
 3262 000e D31A     	 sub r3,r2,r3
 3263 0010 7B60     	 str r3,[r7,#4]
 905:../main.c     ****     break;
 3264              	 .loc 4 905 0
 3265 0012 C046     	 mov r8,r8
 906:../main.c     ****   default:
 907:../main.c     ****     break;
 908:../main.c     ****   }
 909:../main.c     ****   x = x+7; // fixes an unusual mapping in the 8x8 display matrix
 3266              	 .loc 4 909 0
 3267 0014 7B68     	 ldr r3,[r7,#4]
 3268 0016 0733     	 add r3,r3,#7
 3269 0018 7B60     	 str r3,[r7,#4]
 910:../main.c     ****   x = x%8; //
 3270              	 .loc 4 910 0
 3271 001a 7B68     	 ldr r3,[r7,#4]
 3272 001c 0E4A     	 ldr r2,.L201
 3273 001e 1340     	 and r3,r2
 3274 0020 04D5     	 bpl .L200
 3275 0022 013B     	 sub r3,r3,#1
 3276 0024 0822     	 mov r2,#8
 3277 0026 5242     	 neg r2,r2
 3278 0028 1343     	 orr r3,r2
 3279 002a 0133     	 add r3,r3,#1
 3280              	.L200:
 3281 002c 7B60     	 str r3,[r7,#4]
 911:../main.c     **** 
 912:../main.c     ****   display_ram[y] |= 1<<x; // place the pixel into the local display ram
 3282              	 .loc 4 912 0
 3283 002e 0B4B     	 ldr r3,.L201+4
 3284 0030 3A68     	 ldr r2,[r7]
 3285 0032 5200     	 lsl r2,r2,#1
 3286 0034 D35A     	 ldrh r3,[r2,r3]
 3287 0036 99B2     	 uxth r1,r3
 3288 0038 0122     	 mov r2,#1
 3289 003a 7B68     	 ldr r3,[r7,#4]
 3290 003c 9A40     	 lsl r2,r2,r3
 3291 003e 131C     	 mov r3,r2
 3292 0040 9BB2     	 uxth r3,r3
 3293 0042 0A1C     	 add r2,r1,#0
 3294 0044 1343     	 orr r3,r2
 3295 0046 9BB2     	 uxth r3,r3
 3296 0048 99B2     	 uxth r1,r3
 3297 004a 044B     	 ldr r3,.L201+4
 3298 004c 3A68     	 ldr r2,[r7]
 3299 004e 5200     	 lsl r2,r2,#1
 3300 0050 D152     	 strh r1,[r2,r3]
 913:../main.c     **** }
 3301              	 .loc 4 913 0
 3302 0052 BD46     	 mov sp,r7
 3303 0054 02B0     	 add sp,sp,#8
 3304              	 
 3305 0056 80BD     	 pop {r7,pc}
 3306              	.L202:
 3307              	 .align 2
 3308              	.L201:
 3309 0058 07000080 	 .word -2147483641
 3310 005c 00000000 	 .word display_ram
 3311              	 .cfi_endproc
 3312              	.LFE211:
 3314              	 .section .text.plot_ram_rows,"ax",%progbits
 3315              	 .align 2
 3316              	 .global plot_ram_rows
 3317              	 .code 16
 3318              	 .thumb_func
 3320              	plot_ram_rows:
 3321              	.LFB212:
 914:../main.c     **** 
 915:../main.c     **** /* plot_ram_rows
 916:../main.c     ****  * puts each row content into the local display ram. Use display_write to
 917:../main.c     ****  * then send it to the display module.
 918:../main.c     ****  */
 919:../main.c     **** void
 920:../main.c     **** plot_ram_rows(unsigned char* rows_arr)
 921:../main.c     **** {
 3322              	 .loc 4 921 0
 3323              	 .cfi_startproc
 3324 0000 80B5     	 push {r7,lr}
 3325              	.LCFI80:
 3326              	 .cfi_def_cfa_offset 8
 3327              	 .cfi_offset 7,-8
 3328              	 .cfi_offset 14,-4
 3329 0002 84B0     	 sub sp,sp,#16
 3330              	.LCFI81:
 3331              	 .cfi_def_cfa_offset 24
 3332 0004 00AF     	 add r7,sp,#0
 3333              	.LCFI82:
 3334              	 .cfi_def_cfa_register 7
 3335 0006 7860     	 str r0,[r7,#4]
 922:../main.c     ****   unsigned char i, j;
 923:../main.c     ****   display_ram_blank();
 3336              	 .loc 4 923 0
 3337 0008 FFF7FEFF 	 bl display_ram_blank
 924:../main.c     ****   for (i=0; i<rows; i++)
 3338              	 .loc 4 924 0
 3339 000c 0F23     	 mov r3,#15
 3340 000e FB18     	 add r3,r7,r3
 3341 0010 0022     	 mov r2,#0
 3342 0012 1A70     	 strb r2,[r3]
 3343 0014 30E0     	 b .L204
 3344              	.L208:
 925:../main.c     ****   {
 926:../main.c     ****     if (rows_arr[i]>0)
 3345              	 .loc 4 926 0
 3346 0016 0F23     	 mov r3,#15
 3347 0018 FB18     	 add r3,r7,r3
 3348 001a 1B78     	 ldrb r3,[r3]
 3349 001c 7A68     	 ldr r2,[r7,#4]
 3350 001e D318     	 add r3,r2,r3
 3351 0020 1B78     	 ldrb r3,[r3]
 3352 0022 002B     	 cmp r3,#0
 3353 0024 21D0     	 beq .L205
 927:../main.c     ****     {
 928:../main.c     ****       for (j=0; j<rows_arr[i]; j++)
 3354              	 .loc 4 928 0
 3355 0026 0E23     	 mov r3,#14
 3356 0028 FB18     	 add r3,r7,r3
 3357 002a 0022     	 mov r2,#0
 3358 002c 1A70     	 strb r2,[r3]
 3359 002e 11E0     	 b .L206
 3360              	.L207:
 929:../main.c     ****       {
 930:../main.c     ****         plot_ram_pixel((int)i*2, (int)j);
 3361              	 .loc 4 930 0 discriminator 3
 3362 0030 0F23     	 mov r3,#15
 3363 0032 FB18     	 add r3,r7,r3
 3364 0034 1B78     	 ldrb r3,[r3]
 3365 0036 5A00     	 lsl r2,r3,#1
 3366 0038 0E23     	 mov r3,#14
 3367 003a FB18     	 add r3,r7,r3
 3368 003c 1B78     	 ldrb r3,[r3]
 3369 003e 101C     	 mov r0,r2
 3370 0040 191C     	 mov r1,r3
 3371 0042 FFF7FEFF 	 bl plot_ram_pixel
 928:../main.c     ****       {
 3372              	 .loc 4 928 0 discriminator 3
 3373 0046 0E23     	 mov r3,#14
 3374 0048 FB18     	 add r3,r7,r3
 3375 004a 1A78     	 ldrb r2,[r3]
 3376 004c 0E23     	 mov r3,#14
 3377 004e FB18     	 add r3,r7,r3
 3378 0050 0132     	 add r2,r2,#1
 3379 0052 1A70     	 strb r2,[r3]
 3380              	.L206:
 928:../main.c     ****       {
 3381              	 .loc 4 928 0 is_stmt 0 discriminator 1
 3382 0054 0F23     	 mov r3,#15
 3383 0056 FB18     	 add r3,r7,r3
 3384 0058 1B78     	 ldrb r3,[r3]
 3385 005a 7A68     	 ldr r2,[r7,#4]
 3386 005c D318     	 add r3,r2,r3
 3387 005e 1B78     	 ldrb r3,[r3]
 3388 0060 0E22     	 mov r2,#14
 3389 0062 BA18     	 add r2,r7,r2
 3390 0064 1278     	 ldrb r2,[r2]
 3391 0066 9A42     	 cmp r2,r3
 3392 0068 E2D3     	 bcc .L207
 3393              	.L205:
 924:../main.c     ****   {
 3394              	 .loc 4 924 0 is_stmt 1 discriminator 2
 3395 006a 0F23     	 mov r3,#15
 3396 006c FB18     	 add r3,r7,r3
 3397 006e 1A78     	 ldrb r2,[r3]
 3398 0070 0F23     	 mov r3,#15
 3399 0072 FB18     	 add r3,r7,r3
 3400 0074 0132     	 add r2,r2,#1
 3401 0076 1A70     	 strb r2,[r3]
 3402              	.L204:
 924:../main.c     ****   {
 3403              	 .loc 4 924 0 is_stmt 0 discriminator 1
 3404 0078 044B     	 ldr r3,.L209
 3405 007a 1B78     	 ldrb r3,[r3]
 3406 007c 0F22     	 mov r2,#15
 3407 007e BA18     	 add r2,r7,r2
 3408 0080 1278     	 ldrb r2,[r2]
 3409 0082 9A42     	 cmp r2,r3
 3410 0084 C7D3     	 bcc .L208
 931:../main.c     ****       }
 932:../main.c     ****     }
 933:../main.c     ****   }
 934:../main.c     **** }
 3411              	 .loc 4 934 0 is_stmt 1
 3412 0086 BD46     	 mov sp,r7
 3413 0088 04B0     	 add sp,sp,#16
 3414              	 
 3415 008a 80BD     	 pop {r7,pc}
 3416              	.L210:
 3417              	 .align 2
 3418              	.L209:
 3419 008c 00000000 	 .word rows
 3420              	 .cfi_endproc
 3421              	.LFE212:
 3423              	 .global alpha_bitmap
 3424              	 .section .rodata.alpha_bitmap,"a",%progbits
 3425              	 .align 2
 3428              	alpha_bitmap:
 3429 0000 00       	 .byte 0
 3430 0001 00       	 .byte 0
 3431 0002 00       	 .byte 0
 3432 0003 00       	 .byte 0
 3433 0004 00       	 .byte 0
 3434 0005 00       	 .byte 0
 3435 0006 00       	 .byte 0
 3436 0007 04       	 .byte 4
 3437 0008 00       	 .byte 0
 3438 0009 04       	 .byte 4
 3439 000a 04       	 .byte 4
 3440 000b 04       	 .byte 4
 3441 000c 04       	 .byte 4
 3442 000d 04       	 .byte 4
 3443 000e 00       	 .byte 0
 3444 000f 00       	 .byte 0
 3445 0010 00       	 .byte 0
 3446 0011 00       	 .byte 0
 3447 0012 0A       	 .byte 10
 3448 0013 0A       	 .byte 10
 3449 0014 0A       	 .byte 10
 3450 0015 0A       	 .byte 10
 3451 0016 0A       	 .byte 10
 3452 0017 1F       	 .byte 31
 3453 0018 0A       	 .byte 10
 3454 0019 1F       	 .byte 31
 3455 001a 0A       	 .byte 10
 3456 001b 0A       	 .byte 10
 3457 001c 04       	 .byte 4
 3458 001d 1E       	 .byte 30
 3459 001e 05       	 .byte 5
 3460 001f 0E       	 .byte 14
 3461 0020 14       	 .byte 20
 3462 0021 0F       	 .byte 15
 3463 0022 04       	 .byte 4
 3464 0023 03       	 .byte 3
 3465 0024 13       	 .byte 19
 3466 0025 08       	 .byte 8
 3467 0026 04       	 .byte 4
 3468 0027 02       	 .byte 2
 3469 0028 19       	 .byte 25
 3470 0029 18       	 .byte 24
 3471 002a 0D       	 .byte 13
 3472 002b 12       	 .byte 18
 3473 002c 15       	 .byte 21
 3474 002d 08       	 .byte 8
 3475 002e 14       	 .byte 20
 3476 002f 12       	 .byte 18
 3477 0030 0C       	 .byte 12
 3478 0031 00       	 .byte 0
 3479 0032 00       	 .byte 0
 3480 0033 00       	 .byte 0
 3481 0034 00       	 .byte 0
 3482 0035 00       	 .byte 0
 3483 0036 04       	 .byte 4
 3484 0037 04       	 .byte 4
 3485 0038 02       	 .byte 2
 3486 0039 03       	 .byte 3
 3487 003a 08       	 .byte 8
 3488 003b 08       	 .byte 8
 3489 003c 08       	 .byte 8
 3490 003d 04       	 .byte 4
 3491 003e 02       	 .byte 2
 3492 003f 08       	 .byte 8
 3493 0040 04       	 .byte 4
 3494 0041 02       	 .byte 2
 3495 0042 02       	 .byte 2
 3496 0043 02       	 .byte 2
 3497 0044 04       	 .byte 4
 3498 0045 08       	 .byte 8
 3499 0046 00       	 .byte 0
 3500 0047 04       	 .byte 4
 3501 0048 15       	 .byte 21
 3502 0049 0E       	 .byte 14
 3503 004a 15       	 .byte 21
 3504 004b 04       	 .byte 4
 3505 004c 00       	 .byte 0
 3506 004d 00       	 .byte 0
 3507 004e 04       	 .byte 4
 3508 004f 04       	 .byte 4
 3509 0050 1F       	 .byte 31
 3510 0051 04       	 .byte 4
 3511 0052 04       	 .byte 4
 3512 0053 00       	 .byte 0
 3513 0054 08       	 .byte 8
 3514 0055 04       	 .byte 4
 3515 0056 0C       	 .byte 12
 3516 0057 00       	 .byte 0
 3517 0058 00       	 .byte 0
 3518 0059 00       	 .byte 0
 3519 005a 00       	 .byte 0
 3520 005b 00       	 .byte 0
 3521 005c 00       	 .byte 0
 3522 005d 00       	 .byte 0
 3523 005e 1F       	 .byte 31
 3524 005f 00       	 .byte 0
 3525 0060 00       	 .byte 0
 3526 0061 00       	 .byte 0
 3527 0062 0C       	 .byte 12
 3528 0063 0C       	 .byte 12
 3529 0064 00       	 .byte 0
 3530 0065 00       	 .byte 0
 3531 0066 00       	 .byte 0
 3532 0067 00       	 .byte 0
 3533 0068 00       	 .byte 0
 3534 0069 00       	 .byte 0
 3535 006a 10       	 .byte 16
 3536 006b 08       	 .byte 8
 3537 006c 04       	 .byte 4
 3538 006d 02       	 .byte 2
 3539 006e 01       	 .byte 1
 3540 006f 00       	 .byte 0
 3541 0070 0E       	 .byte 14
 3542 0071 11       	 .byte 17
 3543 0072 11       	 .byte 17
 3544 0073 11       	 .byte 17
 3545 0074 11       	 .byte 17
 3546 0075 11       	 .byte 17
 3547 0076 0E       	 .byte 14
 3548 0077 0E       	 .byte 14
 3549 0078 04       	 .byte 4
 3550 0079 04       	 .byte 4
 3551 007a 04       	 .byte 4
 3552 007b 04       	 .byte 4
 3553 007c 0C       	 .byte 12
 3554 007d 04       	 .byte 4
 3555 007e 1F       	 .byte 31
 3556 007f 10       	 .byte 16
 3557 0080 08       	 .byte 8
 3558 0081 06       	 .byte 6
 3559 0082 01       	 .byte 1
 3560 0083 11       	 .byte 17
 3561 0084 0E       	 .byte 14
 3562 0085 0E       	 .byte 14
 3563 0086 11       	 .byte 17
 3564 0087 01       	 .byte 1
 3565 0088 06       	 .byte 6
 3566 0089 01       	 .byte 1
 3567 008a 11       	 .byte 17
 3568 008b 0E       	 .byte 14
 3569 008c 02       	 .byte 2
 3570 008d 02       	 .byte 2
 3571 008e 1F       	 .byte 31
 3572 008f 12       	 .byte 18
 3573 0090 0A       	 .byte 10
 3574 0091 06       	 .byte 6
 3575 0092 02       	 .byte 2
 3576 0093 0E       	 .byte 14
 3577 0094 11       	 .byte 17
 3578 0095 01       	 .byte 1
 3579 0096 01       	 .byte 1
 3580 0097 1E       	 .byte 30
 3581 0098 10       	 .byte 16
 3582 0099 1F       	 .byte 31
 3583 009a 0E       	 .byte 14
 3584 009b 11       	 .byte 17
 3585 009c 11       	 .byte 17
 3586 009d 1E       	 .byte 30
 3587 009e 10       	 .byte 16
 3588 009f 08       	 .byte 8
 3589 00a0 06       	 .byte 6
 3590 00a1 08       	 .byte 8
 3591 00a2 08       	 .byte 8
 3592 00a3 08       	 .byte 8
 3593 00a4 04       	 .byte 4
 3594 00a5 02       	 .byte 2
 3595 00a6 01       	 .byte 1
 3596 00a7 1F       	 .byte 31
 3597 00a8 0E       	 .byte 14
 3598 00a9 11       	 .byte 17
 3599 00aa 11       	 .byte 17
 3600 00ab 0E       	 .byte 14
 3601 00ac 11       	 .byte 17
 3602 00ad 11       	 .byte 17
 3603 00ae 0E       	 .byte 14
 3604 00af 0C       	 .byte 12
 3605 00b0 02       	 .byte 2
 3606 00b1 01       	 .byte 1
 3607 00b2 0F       	 .byte 15
 3608 00b3 11       	 .byte 17
 3609 00b4 11       	 .byte 17
 3610 00b5 0E       	 .byte 14
 3611 00b6 00       	 .byte 0
 3612 00b7 0C       	 .byte 12
 3613 00b8 0C       	 .byte 12
 3614 00b9 00       	 .byte 0
 3615 00ba 0C       	 .byte 12
 3616 00bb 0C       	 .byte 12
 3617 00bc 00       	 .byte 0
 3618 00bd 08       	 .byte 8
 3619 00be 04       	 .byte 4
 3620 00bf 0C       	 .byte 12
 3621 00c0 00       	 .byte 0
 3622 00c1 0C       	 .byte 12
 3623 00c2 0C       	 .byte 12
 3624 00c3 00       	 .byte 0
 3625 00c4 02       	 .byte 2
 3626 00c5 04       	 .byte 4
 3627 00c6 08       	 .byte 8
 3628 00c7 10       	 .byte 16
 3629 00c8 08       	 .byte 8
 3630 00c9 04       	 .byte 4
 3631 00ca 02       	 .byte 2
 3632 00cb 00       	 .byte 0
 3633 00cc 00       	 .byte 0
 3634 00cd 1F       	 .byte 31
 3635 00ce 00       	 .byte 0
 3636 00cf 1F       	 .byte 31
 3637 00d0 00       	 .byte 0
 3638 00d1 00       	 .byte 0
 3639 00d2 08       	 .byte 8
 3640 00d3 04       	 .byte 4
 3641 00d4 02       	 .byte 2
 3642 00d5 01       	 .byte 1
 3643 00d6 02       	 .byte 2
 3644 00d7 04       	 .byte 4
 3645 00d8 08       	 .byte 8
 3646 00d9 04       	 .byte 4
 3647 00da 00       	 .byte 0
 3648 00db 04       	 .byte 4
 3649 00dc 02       	 .byte 2
 3650 00dd 01       	 .byte 1
 3651 00de 11       	 .byte 17
 3652 00df 0E       	 .byte 14
 3653 00e0 0E       	 .byte 14
 3654 00e1 15       	 .byte 21
 3655 00e2 15       	 .byte 21
 3656 00e3 0D       	 .byte 13
 3657 00e4 01       	 .byte 1
 3658 00e5 11       	 .byte 17
 3659 00e6 0E       	 .byte 14
 3660 00e7 11       	 .byte 17
 3661 00e8 11       	 .byte 17
 3662 00e9 1F       	 .byte 31
 3663 00ea 11       	 .byte 17
 3664 00eb 11       	 .byte 17
 3665 00ec 0A       	 .byte 10
 3666 00ed 04       	 .byte 4
 3667 00ee 1E       	 .byte 30
 3668 00ef 09       	 .byte 9
 3669 00f0 09       	 .byte 9
 3670 00f1 0E       	 .byte 14
 3671 00f2 09       	 .byte 9
 3672 00f3 09       	 .byte 9
 3673 00f4 1E       	 .byte 30
 3674 00f5 0E       	 .byte 14
 3675 00f6 11       	 .byte 17
 3676 00f7 10       	 .byte 16
 3677 00f8 10       	 .byte 16
 3678 00f9 10       	 .byte 16
 3679 00fa 11       	 .byte 17
 3680 00fb 0E       	 .byte 14
 3681 00fc 1E       	 .byte 30
 3682 00fd 09       	 .byte 9
 3683 00fe 09       	 .byte 9
 3684 00ff 09       	 .byte 9
 3685 0100 09       	 .byte 9
 3686 0101 09       	 .byte 9
 3687 0102 1E       	 .byte 30
 3688 0103 1F       	 .byte 31
 3689 0104 10       	 .byte 16
 3690 0105 10       	 .byte 16
 3691 0106 1E       	 .byte 30
 3692 0107 10       	 .byte 16
 3693 0108 10       	 .byte 16
 3694 0109 1F       	 .byte 31
 3695 010a 10       	 .byte 16
 3696 010b 10       	 .byte 16
 3697 010c 10       	 .byte 16
 3698 010d 1E       	 .byte 30
 3699 010e 10       	 .byte 16
 3700 010f 10       	 .byte 16
 3701 0110 1F       	 .byte 31
 3702 0111 0F       	 .byte 15
 3703 0112 11       	 .byte 17
 3704 0113 11       	 .byte 17
 3705 0114 13       	 .byte 19
 3706 0115 10       	 .byte 16
 3707 0116 11       	 .byte 17
 3708 0117 0E       	 .byte 14
 3709 0118 11       	 .byte 17
 3710 0119 11       	 .byte 17
 3711 011a 11       	 .byte 17
 3712 011b 1F       	 .byte 31
 3713 011c 11       	 .byte 17
 3714 011d 11       	 .byte 17
 3715 011e 11       	 .byte 17
 3716 011f 0E       	 .byte 14
 3717 0120 04       	 .byte 4
 3718 0121 04       	 .byte 4
 3719 0122 04       	 .byte 4
 3720 0123 04       	 .byte 4
 3721 0124 04       	 .byte 4
 3722 0125 0E       	 .byte 14
 3723 0126 0C       	 .byte 12
 3724 0127 12       	 .byte 18
 3725 0128 02       	 .byte 2
 3726 0129 02       	 .byte 2
 3727 012a 02       	 .byte 2
 3728 012b 02       	 .byte 2
 3729 012c 07       	 .byte 7
 3730 012d 11       	 .byte 17
 3731 012e 12       	 .byte 18
 3732 012f 14       	 .byte 20
 3733 0130 18       	 .byte 24
 3734 0131 14       	 .byte 20
 3735 0132 12       	 .byte 18
 3736 0133 11       	 .byte 17
 3737 0134 1F       	 .byte 31
 3738 0135 10       	 .byte 16
 3739 0136 10       	 .byte 16
 3740 0137 10       	 .byte 16
 3741 0138 10       	 .byte 16
 3742 0139 10       	 .byte 16
 3743 013a 10       	 .byte 16
 3744 013b 11       	 .byte 17
 3745 013c 11       	 .byte 17
 3746 013d 11       	 .byte 17
 3747 013e 15       	 .byte 21
 3748 013f 15       	 .byte 21
 3749 0140 1B       	 .byte 27
 3750 0141 11       	 .byte 17
 3751 0142 11       	 .byte 17
 3752 0143 11       	 .byte 17
 3753 0144 13       	 .byte 19
 3754 0145 15       	 .byte 21
 3755 0146 19       	 .byte 25
 3756 0147 11       	 .byte 17
 3757 0148 11       	 .byte 17
 3758 0149 0E       	 .byte 14
 3759 014a 11       	 .byte 17
 3760 014b 11       	 .byte 17
 3761 014c 11       	 .byte 17
 3762 014d 11       	 .byte 17
 3763 014e 11       	 .byte 17
 3764 014f 0E       	 .byte 14
 3765 0150 10       	 .byte 16
 3766 0151 10       	 .byte 16
 3767 0152 10       	 .byte 16
 3768 0153 1E       	 .byte 30
 3769 0154 11       	 .byte 17
 3770 0155 11       	 .byte 17
 3771 0156 1E       	 .byte 30
 3772 0157 0D       	 .byte 13
 3773 0158 12       	 .byte 18
 3774 0159 15       	 .byte 21
 3775 015a 11       	 .byte 17
 3776 015b 11       	 .byte 17
 3777 015c 11       	 .byte 17
 3778 015d 0E       	 .byte 14
 3779 015e 11       	 .byte 17
 3780 015f 12       	 .byte 18
 3781 0160 14       	 .byte 20
 3782 0161 1E       	 .byte 30
 3783 0162 11       	 .byte 17
 3784 0163 11       	 .byte 17
 3785 0164 1E       	 .byte 30
 3786 0165 0E       	 .byte 14
 3787 0166 11       	 .byte 17
 3788 0167 01       	 .byte 1
 3789 0168 0E       	 .byte 14
 3790 0169 10       	 .byte 16
 3791 016a 11       	 .byte 17
 3792 016b 0E       	 .byte 14
 3793 016c 04       	 .byte 4
 3794 016d 04       	 .byte 4
 3795 016e 04       	 .byte 4
 3796 016f 04       	 .byte 4
 3797 0170 04       	 .byte 4
 3798 0171 04       	 .byte 4
 3799 0172 1F       	 .byte 31
 3800 0173 0E       	 .byte 14
 3801 0174 11       	 .byte 17
 3802 0175 11       	 .byte 17
 3803 0176 11       	 .byte 17
 3804 0177 11       	 .byte 17
 3805 0178 11       	 .byte 17
 3806 0179 11       	 .byte 17
 3807 017a 04       	 .byte 4
 3808 017b 0A       	 .byte 10
 3809 017c 11       	 .byte 17
 3810 017d 11       	 .byte 17
 3811 017e 11       	 .byte 17
 3812 017f 11       	 .byte 17
 3813 0180 11       	 .byte 17
 3814 0181 0A       	 .byte 10
 3815 0182 15       	 .byte 21
 3816 0183 15       	 .byte 21
 3817 0184 15       	 .byte 21
 3818 0185 11       	 .byte 17
 3819 0186 11       	 .byte 17
 3820 0187 11       	 .byte 17
 3821 0188 11       	 .byte 17
 3822 0189 11       	 .byte 17
 3823 018a 0A       	 .byte 10
 3824 018b 04       	 .byte 4
 3825 018c 0A       	 .byte 10
 3826 018d 11       	 .byte 17
 3827 018e 11       	 .byte 17
 3828 018f 04       	 .byte 4
 3829 0190 04       	 .byte 4
 3830 0191 04       	 .byte 4
 3831 0192 0A       	 .byte 10
 3832 0193 11       	 .byte 17
 3833 0194 11       	 .byte 17
 3834 0195 11       	 .byte 17
 3835 0196 1F       	 .byte 31
 3836 0197 10       	 .byte 16
 3837 0198 08       	 .byte 8
 3838 0199 04       	 .byte 4
 3839 019a 02       	 .byte 2
 3840 019b 01       	 .byte 1
 3841 019c 1F       	 .byte 31
 3842 019d 000000   	 .section .text.scroll_text,"ax",%progbits
 3843              	 .align 2
 3844              	 .global scroll_text
 3845              	 .code 16
 3846              	 .thumb_func
 3848              	scroll_text:
 3849              	.LFB213:
 935:../main.c     **** 
 936:../main.c     **** // a portion of the ASCII table as a 5x7 bitmap
 937:../main.c     **** // stored as row bitmaps (i.e 7 values per character)
 938:../main.c     **** // to make it a bit easier to map to the 8x8 LED display,
 939:../main.c     **** // at the expense of a bit more ROM usage than storing
 940:../main.c     **** // column bitmaps.
 941:../main.c     **** // Also characters are reflected: the rightmost part of each character is the
 942:../main.c     **** // LSB in this bitmap, just to map easier to the 8x8 display.
 943:../main.c     **** // There may be visual errors in some of these bitmaps that may need
 944:../main.c     **** // correction, since it was hand-coded, not automated, and not fully
 945:../main.c     **** // checked yet.
 946:../main.c     **** const unsigned char alpha_bitmap[]={
 947:../main.c     **** 0, 0, 0, 0, 0, 0, 0,         /*   */
 948:../main.c     **** 4, 0, 4, 4, 4, 4, 4,         /* ! */
 949:../main.c     **** 0, 0, 0, 0, 10, 10, 10,      /* " */
 950:../main.c     **** 10, 10, 31, 10, 31, 10, 10,  /* # */
 951:../main.c     **** 4, 30, 5, 14, 20, 15, 4,     /* $ */
 952:../main.c     **** 3, 19, 8, 4, 2, 25, 24,      /* % */
 953:../main.c     **** 13, 18, 21, 8, 20, 18, 12,   /* & */
 954:../main.c     **** 0, 0, 0, 0, 0, 4, 4,         /* ' */
 955:../main.c     **** 2, 3, 8, 8, 8, 4, 2,         /* ( */
 956:../main.c     **** 8, 4, 2, 2, 2, 4, 8,         /* ) */
 957:../main.c     **** 0, 4, 21, 14, 21, 4, 0,      /* * */
 958:../main.c     **** 0, 4, 4, 31, 4, 4, 0,        /* + */
 959:../main.c     **** 8, 4, 12, 0, 0, 0, 0,        /* , */
 960:../main.c     **** 0, 0, 0, 31, 0, 0, 0,        /* - */
 961:../main.c     **** 12, 12, 0, 0, 0, 0, 0,       /* . */
 962:../main.c     **** 0, 16, 8, 4, 2, 1, 0,        /* / */
 963:../main.c     **** 14, 17, 17, 17, 17, 17, 14,  /* 0 */
 964:../main.c     **** 14, 4, 4, 4, 4, 12, 4,       /* 1 */
 965:../main.c     **** 31, 16, 8, 6, 1, 17, 14,     /* 2 */
 966:../main.c     **** 14, 17, 1, 6, 1, 17, 14,     /* 3 */
 967:../main.c     **** 2, 2, 31, 18, 10, 6, 2,      /* 4 */
 968:../main.c     **** 14, 17, 1, 1, 30, 16, 31,    /* 5 */
 969:../main.c     **** 14, 17, 17, 30, 16, 8, 6,    /* 6 */
 970:../main.c     **** 8, 8, 8, 4, 2, 1, 31,        /* 7 */
 971:../main.c     **** 14, 17, 17, 14, 17, 17, 14,  /* 8 */
 972:../main.c     **** 12, 2, 1, 15, 17, 17, 14,    /* 9 */
 973:../main.c     **** 0, 12, 12, 0, 12, 12, 0,     /* : */
 974:../main.c     **** 8, 4, 12, 0, 12, 12, 0,      /* ; */
 975:../main.c     **** 2, 4, 8, 16, 8, 4, 2,        /* < */
 976:../main.c     **** 0, 0, 31, 0, 31, 0, 0,       /* = */
 977:../main.c     **** 8, 4, 2, 1, 2, 4, 8,         /* > */
 978:../main.c     **** 4, 0, 4, 2, 1, 17, 14,       /* ? */
 979:../main.c     **** 14, 21, 21, 13, 1, 17, 14,   /* @ */
 980:../main.c     **** 17, 17, 31, 17, 17, 10, 4,   /* A */
 981:../main.c     **** 30, 9, 9, 14, 9, 9, 30,      /* B */
 982:../main.c     **** 14, 17, 16, 16, 16, 17, 14,  /* C */
 983:../main.c     **** 30, 9, 9, 9, 9, 9, 30,       /* D */
 984:../main.c     **** 31, 16, 16, 30, 16, 16, 31,  /* E */
 985:../main.c     **** 16, 16, 16, 30, 16, 16, 31,  /* F */
 986:../main.c     **** 15, 17, 17, 19, 16, 17, 14,  /* G */
 987:../main.c     **** 17, 17, 17, 31, 17, 17, 17,  /* H */
 988:../main.c     **** 14, 4, 4, 4, 4, 4, 14,       /* I */
 989:../main.c     **** 12, 18, 2, 2, 2, 2, 7,       /* J */
 990:../main.c     **** 17, 18, 20, 24, 20, 18, 17,  /* K */
 991:../main.c     **** 31, 16, 16, 16, 16, 16, 16,  /* L */
 992:../main.c     **** 17, 17, 17, 21, 21, 27, 17,  /* M */
 993:../main.c     **** 17, 17, 19, 21, 25, 17, 17,  /* N */
 994:../main.c     **** 14, 17, 17, 17, 17, 17, 14,  /* O */
 995:../main.c     **** 16, 16, 16, 30, 17, 17, 30 , /* P */
 996:../main.c     **** 13, 18, 21, 17, 17, 17, 14,  /* Q */
 997:../main.c     **** 17, 18, 20, 30, 17, 17, 30,  /* R */
 998:../main.c     **** 14, 17, 1, 14, 16, 17, 14,   /* S */
 999:../main.c     **** 4, 4, 4, 4, 4, 4, 31,        /* T */
1000:../main.c     **** 14, 17, 17, 17, 17, 17, 17,  /* U */
1001:../main.c     **** 4, 10, 17, 17, 17, 17, 17,   /* V */
1002:../main.c     **** 10, 21, 21, 21, 17, 17, 17,  /* W */
1003:../main.c     **** 17, 17, 10, 4, 10, 17, 17,   /* X */
1004:../main.c     **** 4, 4, 4, 10, 17, 17, 17,     /* Y */
1005:../main.c     **** 31, 16, 8, 4, 2, 1, 31,      /* Z */
1006:../main.c     **** };
1007:../main.c     **** 
1008:../main.c     **** /* scroll_text
1009:../main.c     ****  * This function will display a text message.
1010:../main.c     ****  * It doesn't use any C library features, so
1011:../main.c     ****  * it is limited. To fully scroll off a
1012:../main.c     ****  * message, ensure there are two spaces at the end
1013:../main.c     ****  * of the text array (and len increased by 2 to
1014:../main.c     ****  * reflect that). The variable all, if set to 1,
1015:../main.c     ****  * will wipe the bottom row of the display.
1016:../main.c     ****  * If set to zero, it will leave the final
1017:../main.c     ****  * stick at the bottom of the display.
1018:../main.c     ****  */
1019:../main.c     **** void
1020:../main.c     **** scroll_text(char* text, char len, char all)
1021:../main.c     **** {
 3850              	 .loc 4 1021 0
 3851              	 .cfi_startproc
 3852 0000 80B5     	 push {r7,lr}
 3853              	.LCFI83:
 3854              	 .cfi_def_cfa_offset 8
 3855              	 .cfi_offset 7,-8
 3856              	 .cfi_offset 14,-4
 3857 0002 88B0     	 sub sp,sp,#32
 3858              	.LCFI84:
 3859              	 .cfi_def_cfa_offset 40
 3860 0004 00AF     	 add r7,sp,#0
 3861              	.LCFI85:
 3862              	 .cfi_def_cfa_register 7
 3863 0006 7860     	 str r0,[r7,#4]
 3864 0008 081C     	 mov r0,r1
 3865 000a 111C     	 mov r1,r2
 3866 000c FB1C     	 add r3,r7,#3
 3867 000e 021C     	 add r2,r0,#0
 3868 0010 1A70     	 strb r2,[r3]
 3869 0012 BB1C     	 add r3,r7,#2
 3870 0014 0A1C     	 add r2,r1,#0
 3871 0016 1A70     	 strb r2,[r3]
1022:../main.c     ****   char first=1;
 3872              	 .loc 4 1022 0
 3873 0018 1F23     	 mov r3,#31
 3874 001a FB18     	 add r3,r7,r3
 3875 001c 0122     	 mov r2,#1
 3876 001e 1A70     	 strb r2,[r3]
1023:../main.c     ****   char i, xmov, y, startx;
1024:../main.c     ****   char a, b; // two partial characters can be scrolled on the 8-wide display since each character i
1025:../main.c     ****   unsigned int idx_a, idx_b;
1026:../main.c     ****   unsigned short int ab_slice; // this variable stores a bitmap of a row, for two characters
1027:../main.c     ****   for (i=0; i<len-1; i++)
 3877              	 .loc 4 1027 0
 3878 0020 1E23     	 mov r3,#30
 3879 0022 FB18     	 add r3,r7,r3
 3880 0024 0022     	 mov r2,#0
 3881 0026 1A70     	 strb r2,[r3]
 3882 0028 EDE0     	 b .L212
 3883              	.L224:
1028:../main.c     ****   {
1029:../main.c     ****     // this algorithm revolves around reducing the problem to scrolling only
1030:../main.c     ****     // two characters. At the appropriate point in the animation, the for loop
1031:../main.c     ****     // is used to update the a and b variables to make a become the previous b, and
1032:../main.c     ****     // and the next character gets placed in b.
1033:../main.c     ****     a=text[(unsigned char)i];
 3884              	 .loc 4 1033 0
 3885 002a 1E23     	 mov r3,#30
 3886 002c FB18     	 add r3,r7,r3
 3887 002e 1B78     	 ldrb r3,[r3]
 3888 0030 7A68     	 ldr r2,[r7,#4]
 3889 0032 D218     	 add r2,r2,r3
 3890 0034 1723     	 mov r3,#23
 3891 0036 FB18     	 add r3,r7,r3
 3892 0038 1278     	 ldrb r2,[r2]
 3893 003a 1A70     	 strb r2,[r3]
1034:../main.c     ****     b=text[(unsigned char)(i+1)];
 3894              	 .loc 4 1034 0
 3895 003c 1E23     	 mov r3,#30
 3896 003e FB18     	 add r3,r7,r3
 3897 0040 1B78     	 ldrb r3,[r3]
 3898 0042 0133     	 add r3,r3,#1
 3899 0044 DBB2     	 uxtb r3,r3
 3900 0046 1A1C     	 mov r2,r3
 3901 0048 7B68     	 ldr r3,[r7,#4]
 3902 004a 9A18     	 add r2,r3,r2
 3903 004c 1623     	 mov r3,#22
 3904 004e FB18     	 add r3,r7,r3
 3905 0050 1278     	 ldrb r2,[r2]
 3906 0052 1A70     	 strb r2,[r3]
1035:../main.c     ****     idx_a=(unsigned int)(a-' '); // get an index into the alphabet bitmap
 3907              	 .loc 4 1035 0
 3908 0054 1723     	 mov r3,#23
 3909 0056 FB18     	 add r3,r7,r3
 3910 0058 1B78     	 ldrb r3,[r3]
 3911 005a 203B     	 sub r3,r3,#32
 3912 005c 3B61     	 str r3,[r7,#16]
1036:../main.c     ****     idx_a=idx_a*7;               //
 3913              	 .loc 4 1036 0
 3914 005e 3A69     	 ldr r2,[r7,#16]
 3915 0060 131C     	 mov r3,r2
 3916 0062 DB00     	 lsl r3,r3,#3
 3917 0064 9B1A     	 sub r3,r3,r2
 3918 0066 3B61     	 str r3,[r7,#16]
1037:../main.c     **** 
1038:../main.c     ****     idx_b=(unsigned int)(b-' '); // get an index into the alphabet bitmap
 3919              	 .loc 4 1038 0
 3920 0068 1623     	 mov r3,#22
 3921 006a FB18     	 add r3,r7,r3
 3922 006c 1B78     	 ldrb r3,[r3]
 3923 006e 203B     	 sub r3,r3,#32
 3924 0070 FB60     	 str r3,[r7,#12]
1039:../main.c     ****     idx_b=idx_b*7;               //
 3925              	 .loc 4 1039 0
 3926 0072 FA68     	 ldr r2,[r7,#12]
 3927 0074 131C     	 mov r3,r2
 3928 0076 DB00     	 lsl r3,r3,#3
 3929 0078 9B1A     	 sub r3,r3,r2
 3930 007a FB60     	 str r3,[r7,#12]
1040:../main.c     **** 
1041:../main.c     ****     if (all)
 3931              	 .loc 4 1041 0
 3932 007c BB1C     	 add r3,r7,#2
 3933 007e 1B78     	 ldrb r3,[r3]
 3934 0080 002B     	 cmp r3,#0
 3935 0082 02D0     	 beq .L213
1042:../main.c     ****     {
1043:../main.c     ****       display_ram[0]=0; // bottom row is blank
 3936              	 .loc 4 1043 0
 3937 0084 664B     	 ldr r3,.L225
 3938 0086 0022     	 mov r2,#0
 3939 0088 1A80     	 strh r2,[r3]
 3940              	.L213:
1044:../main.c     ****     }
1045:../main.c     ****     if (first)
 3941              	 .loc 4 1045 0
 3942 008a 1F23     	 mov r3,#31
 3943 008c FB18     	 add r3,r7,r3
 3944 008e 1B78     	 ldrb r3,[r3]
 3945 0090 002B     	 cmp r3,#0
 3946 0092 04D0     	 beq .L214
1046:../main.c     ****       startx=0;
 3947              	 .loc 4 1046 0
 3948 0094 1B23     	 mov r3,#27
 3949 0096 FB18     	 add r3,r7,r3
 3950 0098 0022     	 mov r2,#0
 3951 009a 1A70     	 strb r2,[r3]
 3952 009c 03E0     	 b .L215
 3953              	.L214:
1047:../main.c     ****     else
1048:../main.c     ****       startx=6;         // after the very first character, subsequent characters are placed at the 
 3954              	 .loc 4 1048 0
 3955 009e 1B23     	 mov r3,#27
 3956 00a0 FB18     	 add r3,r7,r3
 3957 00a2 0622     	 mov r2,#6
 3958 00a4 1A70     	 strb r2,[r3]
 3959              	.L215:
1049:../main.c     ****     for (xmov=startx; xmov<11; xmov++) // step through to scroll two characters
 3960              	 .loc 4 1049 0
 3961 00a6 1D23     	 mov r3,#29
 3962 00a8 FB18     	 add r3,r7,r3
 3963 00aa 1B22     	 mov r2,#27
 3964 00ac BA18     	 add r2,r7,r2
 3965 00ae 1278     	 ldrb r2,[r2]
 3966 00b0 1A70     	 strb r2,[r3]
 3967 00b2 97E0     	 b .L216
 3968              	.L223:
1050:../main.c     ****     {
1051:../main.c     ****       for (y=0; y<7; y++)
 3969              	 .loc 4 1051 0
 3970 00b4 1C23     	 mov r3,#28
 3971 00b6 FB18     	 add r3,r7,r3
 3972 00b8 0022     	 mov r2,#0
 3973 00ba 1A70     	 strb r2,[r3]
 3974 00bc 7BE0     	 b .L217
 3975              	.L221:
1052:../main.c     ****       {
1053:../main.c     ****         // the left byte of ab_slice will ultimately get displayed.
1054:../main.c     ****         // the left character (a) is put into ab_slice so that only the leftmost part of the charac
1055:../main.c     ****         ab_slice=((unsigned short int)(alpha_bitmap[idx_a+y]))<<(xmov+4);
 3976              	 .loc 4 1055 0
 3977 00be 1C23     	 mov r3,#28
 3978 00c0 FB18     	 add r3,r7,r3
 3979 00c2 1A78     	 ldrb r2,[r3]
 3980 00c4 3B69     	 ldr r3,[r7,#16]
 3981 00c6 D318     	 add r3,r2,r3
 3982 00c8 564A     	 ldr r2,.L225+4
 3983 00ca D35C     	 ldrb r3,[r2,r3]
 3984 00cc 1A1C     	 mov r2,r3
 3985 00ce 1D23     	 mov r3,#29
 3986 00d0 FB18     	 add r3,r7,r3
 3987 00d2 1B78     	 ldrb r3,[r3]
 3988 00d4 0433     	 add r3,r3,#4
 3989 00d6 9A40     	 lsl r2,r2,r3
 3990 00d8 1823     	 mov r3,#24
 3991 00da FB18     	 add r3,r7,r3
 3992 00dc 1A80     	 strh r2,[r3]
1056:../main.c     ****         if (xmov>5)
 3993              	 .loc 4 1056 0
 3994 00de 1D23     	 mov r3,#29
 3995 00e0 FB18     	 add r3,r7,r3
 3996 00e2 1B78     	 ldrb r3,[r3]
 3997 00e4 052B     	 cmp r3,#5
 3998 00e6 16D9     	 bls .L218
1057:../main.c     ****         {
1058:../main.c     ****           // the next character (b) needs to start showing on the display.
1059:../main.c     ****           // // the b character is butted next to a, with a space of a single bit
1060:../main.c     ****           ab_slice |= (((unsigned short int)((alpha_bitmap[idx_b+y])))<<(xmov-2));
 3999              	 .loc 4 1060 0
 4000 00e8 1C23     	 mov r3,#28
 4001 00ea FB18     	 add r3,r7,r3
 4002 00ec 1A78     	 ldrb r2,[r3]
 4003 00ee FB68     	 ldr r3,[r7,#12]
 4004 00f0 D318     	 add r3,r2,r3
 4005 00f2 4C4A     	 ldr r2,.L225+4
 4006 00f4 D35C     	 ldrb r3,[r2,r3]
 4007 00f6 1A1C     	 mov r2,r3
 4008 00f8 1D23     	 mov r3,#29
 4009 00fa FB18     	 add r3,r7,r3
 4010 00fc 1B78     	 ldrb r3,[r3]
 4011 00fe 023B     	 sub r3,r3,#2
 4012 0100 9A40     	 lsl r2,r2,r3
 4013 0102 131C     	 mov r3,r2
 4014 0104 9AB2     	 uxth r2,r3
 4015 0106 1823     	 mov r3,#24
 4016 0108 FB18     	 add r3,r7,r3
 4017 010a 1B88     	 ldrh r3,[r3]
 4018 010c 1343     	 orr r3,r2
 4019 010e 9AB2     	 uxth r2,r3
 4020 0110 1823     	 mov r3,#24
 4021 0112 FB18     	 add r3,r7,r3
 4022 0114 1A80     	 strh r2,[r3]
 4023              	.L218:
1061:../main.c     ****         }
1062:../main.c     ****         // now shift it all to the right, so that the part to be displayed is in the
1063:../main.c     ****         // lower 8 bits
1064:../main.c     ****         display_ram[y+1]=(((unsigned short int)(ab_slice))>>8);
 4024              	 .loc 4 1064 0
 4025 0116 1C23     	 mov r3,#28
 4026 0118 FB18     	 add r3,r7,r3
 4027 011a 1B78     	 ldrb r3,[r3]
 4028 011c 5A1C     	 add r2,r3,#1
 4029 011e 1823     	 mov r3,#24
 4030 0120 FB18     	 add r3,r7,r3
 4031 0122 1B88     	 ldrh r3,[r3]
 4032 0124 1B0A     	 lsr r3,r3,#8
 4033 0126 99B2     	 uxth r1,r3
 4034 0128 3D4B     	 ldr r3,.L225
 4035 012a 5200     	 lsl r2,r2,#1
 4036 012c D152     	 strh r1,[r2,r3]
1065:../main.c     ****         // the 8x8 display module has weird mapping. we need to fix in software
1066:../main.c     ****         if (display_ram[y+1] & 0x01)
 4037              	 .loc 4 1066 0
 4038 012e 1C23     	 mov r3,#28
 4039 0130 FB18     	 add r3,r7,r3
 4040 0132 1B78     	 ldrb r3,[r3]
 4041 0134 5A1C     	 add r2,r3,#1
 4042 0136 3A4B     	 ldr r3,.L225
 4043 0138 5200     	 lsl r2,r2,#1
 4044 013a D35A     	 ldrh r3,[r2,r3]
 4045 013c 1A1C     	 mov r2,r3
 4046 013e 0123     	 mov r3,#1
 4047 0140 1340     	 and r3,r2
 4048 0142 21D0     	 beq .L219
1067:../main.c     ****         {
1068:../main.c     ****           display_ram[y+1]=display_ram[y+1]>>1;
 4049              	 .loc 4 1068 0
 4050 0144 1C23     	 mov r3,#28
 4051 0146 FB18     	 add r3,r7,r3
 4052 0148 1B78     	 ldrb r3,[r3]
 4053 014a 5A1C     	 add r2,r3,#1
 4054 014c 1C23     	 mov r3,#28
 4055 014e FB18     	 add r3,r7,r3
 4056 0150 1B78     	 ldrb r3,[r3]
 4057 0152 591C     	 add r1,r3,#1
 4058 0154 324B     	 ldr r3,.L225
 4059 0156 4900     	 lsl r1,r1,#1
 4060 0158 CB5A     	 ldrh r3,[r1,r3]
 4061 015a 5B08     	 lsr r3,r3,#1
 4062 015c 99B2     	 uxth r1,r3
 4063 015e 304B     	 ldr r3,.L225
 4064 0160 5200     	 lsl r2,r2,#1
 4065 0162 D152     	 strh r1,[r2,r3]
1069:../main.c     ****           display_ram[y+1]|=0x80;
 4066              	 .loc 4 1069 0
 4067 0164 1C23     	 mov r3,#28
 4068 0166 FB18     	 add r3,r7,r3
 4069 0168 1B78     	 ldrb r3,[r3]
 4070 016a 5A1C     	 add r2,r3,#1
 4071 016c 1C23     	 mov r3,#28
 4072 016e FB18     	 add r3,r7,r3
 4073 0170 1B78     	 ldrb r3,[r3]
 4074 0172 591C     	 add r1,r3,#1
 4075 0174 2A4B     	 ldr r3,.L225
 4076 0176 4900     	 lsl r1,r1,#1
 4077 0178 CB5A     	 ldrh r3,[r1,r3]
 4078 017a 8021     	 mov r1,#128
 4079 017c 0B43     	 orr r3,r1
 4080 017e 99B2     	 uxth r1,r3
 4081 0180 274B     	 ldr r3,.L225
 4082 0182 5200     	 lsl r2,r2,#1
 4083 0184 D152     	 strh r1,[r2,r3]
 4084 0186 0FE0     	 b .L220
 4085              	.L219:
1070:../main.c     ****         }
1071:../main.c     ****         else
1072:../main.c     ****         {
1073:../main.c     ****           display_ram[y+1]=display_ram[y+1]>>1;
 4086              	 .loc 4 1073 0
 4087 0188 1C23     	 mov r3,#28
 4088 018a FB18     	 add r3,r7,r3
 4089 018c 1B78     	 ldrb r3,[r3]
 4090 018e 5A1C     	 add r2,r3,#1
 4091 0190 1C23     	 mov r3,#28
 4092 0192 FB18     	 add r3,r7,r3
 4093 0194 1B78     	 ldrb r3,[r3]
 4094 0196 591C     	 add r1,r3,#1
 4095 0198 214B     	 ldr r3,.L225
 4096 019a 4900     	 lsl r1,r1,#1
 4097 019c CB5A     	 ldrh r3,[r1,r3]
 4098 019e 5B08     	 lsr r3,r3,#1
 4099 01a0 99B2     	 uxth r1,r3
 4100 01a2 1F4B     	 ldr r3,.L225
 4101 01a4 5200     	 lsl r2,r2,#1
 4102 01a6 D152     	 strh r1,[r2,r3]
 4103              	.L220:
1051:../main.c     ****       {
 4104              	 .loc 4 1051 0 discriminator 2
 4105 01a8 1C23     	 mov r3,#28
 4106 01aa FB18     	 add r3,r7,r3
 4107 01ac 1A78     	 ldrb r2,[r3]
 4108 01ae 1C23     	 mov r3,#28
 4109 01b0 FB18     	 add r3,r7,r3
 4110 01b2 0132     	 add r2,r2,#1
 4111 01b4 1A70     	 strb r2,[r3]
 4112              	.L217:
1051:../main.c     ****       {
 4113              	 .loc 4 1051 0 is_stmt 0 discriminator 1
 4114 01b6 1C23     	 mov r3,#28
 4115 01b8 FB18     	 add r3,r7,r3
 4116 01ba 1B78     	 ldrb r3,[r3]
 4117 01bc 062B     	 cmp r3,#6
 4118 01be 00D8     	 bhi .LCB3274
 4119 01c0 7DE7     	 b .L221
 4120              	.LCB3274:
1074:../main.c     ****         }
1075:../main.c     ****       }
1076:../main.c     ****       // display the ram
1077:../main.c     ****       display_write();
 4121              	 .loc 4 1077 0 is_stmt 1
 4122 01c2 FFF7FEFF 	 bl display_write
1078:../main.c     ****       display_update_timer=70; // 70msec scrolling delay
 4123              	 .loc 4 1078 0
 4124 01c6 184B     	 ldr r3,.L225+8
 4125 01c8 4622     	 mov r2,#70
 4126 01ca 1A60     	 str r2,[r3]
1079:../main.c     ****       while(display_update_timer);
 4127              	 .loc 4 1079 0
 4128 01cc C046     	 mov r8,r8
 4129              	.L222:
 4130              	 .loc 4 1079 0 is_stmt 0 discriminator 1
 4131 01ce 164B     	 ldr r3,.L225+8
 4132 01d0 1B68     	 ldr r3,[r3]
 4133 01d2 002B     	 cmp r3,#0
 4134 01d4 FBD1     	 bne .L222
1049:../main.c     ****     {
 4135              	 .loc 4 1049 0 is_stmt 1 discriminator 2
 4136 01d6 1D23     	 mov r3,#29
 4137 01d8 FB18     	 add r3,r7,r3
 4138 01da 1A78     	 ldrb r2,[r3]
 4139 01dc 1D23     	 mov r3,#29
 4140 01de FB18     	 add r3,r7,r3
 4141 01e0 0132     	 add r2,r2,#1
 4142 01e2 1A70     	 strb r2,[r3]
 4143              	.L216:
1049:../main.c     ****     {
 4144              	 .loc 4 1049 0 is_stmt 0 discriminator 1
 4145 01e4 1D23     	 mov r3,#29
 4146 01e6 FB18     	 add r3,r7,r3
 4147 01e8 1B78     	 ldrb r3,[r3]
 4148 01ea 0A2B     	 cmp r3,#10
 4149 01ec 00D8     	 bhi .LCB3299
 4150 01ee 61E7     	 b .L223
 4151              	.LCB3299:
1080:../main.c     ****     }
1081:../main.c     ****     first=0;
 4152              	 .loc 4 1081 0 is_stmt 1 discriminator 2
 4153 01f0 1F23     	 mov r3,#31
 4154 01f2 FB18     	 add r3,r7,r3
 4155 01f4 0022     	 mov r2,#0
 4156 01f6 1A70     	 strb r2,[r3]
1027:../main.c     ****   {
 4157              	 .loc 4 1027 0 discriminator 2
 4158 01f8 1E23     	 mov r3,#30
 4159 01fa FB18     	 add r3,r7,r3
 4160 01fc 1A78     	 ldrb r2,[r3]
 4161 01fe 1E23     	 mov r3,#30
 4162 0200 FB18     	 add r3,r7,r3
 4163 0202 0132     	 add r2,r2,#1
 4164 0204 1A70     	 strb r2,[r3]
 4165              	.L212:
1027:../main.c     ****   {
 4166              	 .loc 4 1027 0 is_stmt 0 discriminator 1
 4167 0206 1E23     	 mov r3,#30
 4168 0208 FB18     	 add r3,r7,r3
 4169 020a 1A78     	 ldrb r2,[r3]
 4170 020c FB1C     	 add r3,r7,#3
 4171 020e 1B78     	 ldrb r3,[r3]
 4172 0210 013B     	 sub r3,r3,#1
 4173 0212 9A42     	 cmp r2,r3
 4174 0214 00DA     	 bge .LCB3320
 4175 0216 08E7     	 b .L224
 4176              	.LCB3320:
1082:../main.c     ****   }
1083:../main.c     **** }
 4177              	 .loc 4 1083 0 is_stmt 1
 4178 0218 BD46     	 mov sp,r7
 4179 021a 08B0     	 add sp,sp,#32
 4180              	 
 4181 021c 80BD     	 pop {r7,pc}
 4182              	.L226:
 4183 021e C046     	 .align 2
 4184              	.L225:
 4185 0220 00000000 	 .word display_ram
 4186 0224 00000000 	 .word alpha_bitmap
 4187 0228 00000000 	 .word display_update_timer
 4188              	 .cfi_endproc
 4189              	.LFE213:
 4191              	 .text
 4192              	.Letext0:
 4193              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4194              	 .file 6 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4195              	 .file 7 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/CMSIS/Infineon/XMC1100_series/Include/XMC1100.h"
 4196              	 .file 8 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc/xmc1_scu.h"
 4197              	 .file 9 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc/xmc1_gpio.h"
 4198              	 .file 10 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc/xmc_usic.h"
 4199              	 .file 11 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc/xmc_i2c.h"
 4200              	 .file 12 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/SYSTIMER/systimer.h"
 4201              	 .file 13 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc/xmc_ccu4.h"
 4202              	 .file 14 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 4203              	 .file 15 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/PWM_CCU4/pwm_ccu4.h"
 4204              	 .file 16 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DAVE.h"
 4205              	 .file 17 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/CMSIS/Infineon/XMC1100_series/Include/system_XMC1100.h"
 4206              	 .file 18 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/I2C_MASTER/i2c_master_extern.h"
 4207              	 .file 19 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 4208              	 .file 20 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Dave/Generated/PWM_CCU4/pwm_ccu4_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:22     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:58     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:62     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:98     .text.XMC_GPIO_ToggleOutput:00000000 $t
    {standard input}:102    .text.XMC_GPIO_ToggleOutput:00000000 XMC_GPIO_ToggleOutput
    {standard input}:136    .text.XMC_GPIO_ToggleOutput:00000020 $d
    {standard input}:141    .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:145    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:183    .text.I2C_MASTER_TransmitByte:00000000 $t
    {standard input}:187    .text.I2C_MASTER_TransmitByte:00000000 I2C_MASTER_TransmitByte
    {standard input}:224    .text.I2C_MASTER_SendStop:00000000 $t
    {standard input}:228    .text.I2C_MASTER_SendStop:00000000 I2C_MASTER_SendStop
    {standard input}:258    .text.I2C_MASTER_SendStart:00000000 $t
    {standard input}:262    .text.I2C_MASTER_SendStart:00000000 I2C_MASTER_SendStart
    {standard input}:301    .text.I2C_MASTER_IsTxBusy:00000000 $t
    {standard input}:305    .text.I2C_MASTER_IsTxBusy:00000000 I2C_MASTER_IsTxBusy
    {standard input}:337    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:341    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:375    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:379    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:412    .text.DIGITAL_IO_ToggleOutput:00000000 $t
    {standard input}:416    .text.DIGITAL_IO_ToggleOutput:00000000 DIGITAL_IO_ToggleOutput
    {standard input}:449    .text.DIGITAL_IO_GetInput:00000000 $t
    {standard input}:453    .text.DIGITAL_IO_GetInput:00000000 DIGITAL_IO_GetInput
    {standard input}:492    .rodata.display_init_data:00000000 display_init_data
    {standard input}:489    .rodata.display_init_data:00000000 $d
                            *COM*:00000005 numsticks
    {standard input}:501    .data.level:00000000 level
    {standard input}:507    .data.rows:00000000 rows
    {standard input}:514    .data.randreg:00000000 randreg
    {standard input}:511    .data.randreg:00000000 $d
    {standard input}:520    .bss.current_selection:00000000 current_selection
    {standard input}:521    .bss.current_selection:00000000 $d
                            *COM*:00000004 timer_id
                            *COM*:00000018 button_handle
                            *COM*:00000006 button_status
    {standard input}:529    .bss.do_all_button_inhibit:00000000 do_all_button_inhibit
    {standard input}:530    .bss.do_all_button_inhibit:00000000 $d
    {standard input}:536    .bss.press_ticks:00000000 press_ticks
    {standard input}:533    .bss.press_ticks:00000000 $d
    {standard input}:542    .bss.command_press:00000000 command_press
    {standard input}:543    .bss.command_press:00000000 $d
    {standard input}:548    .bss.playing:00000000 playing
    {standard input}:549    .bss.playing:00000000 $d
                            *COM*:00000010 display_ram
    {standard input}:556    .bss.general_timer:00000000 general_timer
    {standard input}:553    .bss.general_timer:00000000 $d
    {standard input}:563    .bss.display_update_timer:00000000 display_update_timer
    {standard input}:560    .bss.display_update_timer:00000000 $d
    {standard input}:570    .data.heartbeat_timer:00000000 heartbeat_timer
    {standard input}:567    .data.heartbeat_timer:00000000 $d
    {standard input}:573    .rodata:00000000 $d
    {standard input}:583    .text.main:00000000 $t
    {standard input}:588    .text.main:00000000 main
    {standard input}:2815   .text.set_led:00000000 set_led
    {standard input}:3184   .text.display_ram_blank:00000000 display_ram_blank
    {standard input}:2984   .text.display_init:00000000 display_init
    {standard input}:3848   .text.scroll_text:00000000 scroll_text
    {standard input}:1527   .text.setup_game:00000000 setup_game
    {standard input}:2780   .text.show_status:00000000 show_status
    {standard input}:1071   .text.a_button_pressed:00000000 a_button_pressed
    {standard input}:1746   .text.user_play:00000000 user_play
    {standard input}:2875   .text.play_tone:00000000 play_tone
    {standard input}:2019   .text.computer_play:00000000 computer_play
    {standard input}:3320   .text.plot_ram_rows:00000000 plot_ram_rows
    {standard input}:3061   .text.display_write:00000000 display_write
    {standard input}:1043   .text.main:000002b0 $d
    {standard input}:1161   .text.fast_tick:00000000 fast_tick
    {standard input}:1066   .text.a_button_pressed:00000000 $t
    {standard input}:1150   .text.a_button_pressed:0000005c $d
    {standard input}:1156   .text.fast_tick:00000000 $t
    {standard input}:1416   .text.fast_tick:0000017c $d
    {standard input}:1431   .text.random_num:00000000 $t
    {standard input}:1436   .text.random_num:00000000 random_num
    {standard input}:1517   .text.random_num:00000070 $d
    {standard input}:1522   .text.setup_game:00000000 $t
    {standard input}:1556   .rodata.setup_game:00000000 $d
    {standard input}:1733   .text.setup_game:00000114 $d
    {standard input}:1741   .text.user_play:00000000 $t
    {standard input}:1921   .text.user_play:000000ec $d
    {standard input}:1930   .text.count_ones:00000000 $t
    {standard input}:1935   .text.count_ones:00000000 count_ones
    {standard input}:2014   .text.computer_play:00000000 $t
    {standard input}:2544   .text.computer_play:0000033c $d
    {standard input}:2550   .text.computer_play:0000034c $t
    {standard input}:2769   .text.computer_play:000004a8 $d
    {standard input}:2775   .text.show_status:00000000 $t
    {standard input}:2805   .text.show_status:00000014 $d
    {standard input}:2810   .text.set_led:00000000 $t
    {standard input}:2865   .text.set_led:00000034 $d
    {standard input}:2870   .text.play_tone:00000000 $t
    {standard input}:2972   .text.play_tone:00000088 $d
    {standard input}:2979   .text.display_init:00000000 $t
    {standard input}:3050   .text.display_init:00000054 $d
    {standard input}:3056   .text.display_write:00000000 $t
    {standard input}:3172   .text.display_write:000000a0 $d
    {standard input}:3179   .text.display_ram_blank:00000000 $t
    {standard input}:3232   .text.display_ram_blank:00000034 $d
    {standard input}:3237   .text.plot_ram_pixel:00000000 $t
    {standard input}:3242   .text.plot_ram_pixel:00000000 plot_ram_pixel
    {standard input}:3309   .text.plot_ram_pixel:00000058 $d
    {standard input}:3315   .text.plot_ram_rows:00000000 $t
    {standard input}:3419   .text.plot_ram_rows:0000008c $d
    {standard input}:3428   .rodata.alpha_bitmap:00000000 alpha_bitmap
    {standard input}:3425   .rodata.alpha_bitmap:00000000 $d
    {standard input}:3843   .text.scroll_text:00000000 $t
    {standard input}:4185   .text.scroll_text:00000220 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_I2C_CH_MasterTransmit
XMC_I2C_CH_MasterStop
XMC_I2C_CH_MasterStart
DAVE_Init
SYSTIMER_CreateTimer
SYSTIMER_StartTimer
button1
button2
button3
button4
button5
button_computer
led2
PWM_CCU4_Start
PWM_CCU4_SetFreq
PWM_CCU4_Stop
pwm1
I2C_MASTER_Transmit
i2c_bus
