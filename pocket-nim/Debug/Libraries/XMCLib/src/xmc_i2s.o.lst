   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_i2s.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_USIC_CH_GetTransmitBufferStatus:
  23              	.LFB72:
  24              	 .file 1 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2016-04-10
   4:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   *************************************************************************************************
   7:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  77:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
  79:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
  80:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  81:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  82:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  83:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  84:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  85:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
  86:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
  87:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
  88:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
  89:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
  90:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
  91:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
  92:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
  93:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
  94:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
  95:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
  96:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
  98:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
  99:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 100:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 101:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 102:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 103:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 104:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 105:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 106:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 107:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 108:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 109:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 110:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 111:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 112:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 113:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 114:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 115:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 116:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 117:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 119:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 122:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 123:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 124:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 125:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 126:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 127:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 128:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 129:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 130:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 131:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 132:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 133:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 134:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 135:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 136:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 137:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 138:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 139:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 140:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 141:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 142:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 143:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 144:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 145:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 146:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 147:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 148:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 149:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 150:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 151:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 152:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 154:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 155:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 156:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 157:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 158:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 159:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 160:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 161:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 162:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 163:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 164:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 165:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 166:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 167:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 168:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 169:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 170:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 171:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 172:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 173:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 174:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 175:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 176:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 177:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 178:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 179:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 180:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 181:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 182:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 183:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 184:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 185:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 186:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 187:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 188:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 189:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 190:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 191:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 192:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 193:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 194:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 195:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 196:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 197:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 198:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 199:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 200:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 201:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 202:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 203:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 204:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 205:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 206:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 207:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 208:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 209:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 210:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 211:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 212:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 213:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 214:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 215:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 216:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 217:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 218:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 219:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 220:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 221:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 222:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 223:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 224:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 225:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 226:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 227:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 228:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 229:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 230:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 231:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 232:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 233:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 234:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 235:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 236:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 237:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 238:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 239:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 240:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 241:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 242:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 243:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 244:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 245:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 246:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 247:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 248:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 249:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 250:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 251:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 252:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 253:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 254:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 255:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 256:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 257:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 258:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 259:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 260:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 261:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 262:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 263:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 264:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 265:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 266:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 267:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 268:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 269:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 270:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 271:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 272:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 273:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 274:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 275:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 276:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 277:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 278:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 279:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 280:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 281:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 282:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 283:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 284:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 285:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 286:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 287:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 288:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 289:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 290:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 291:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 292:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 293:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 294:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 295:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 296:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 297:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 298:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 299:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 300:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 301:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 302:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 303:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 304:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 305:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 306:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 307:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 308:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 309:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 310:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 311:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 312:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 313:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 314:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 315:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 316:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 317:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 318:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 319:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 320:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 321:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 322:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 323:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 324:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 325:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 326:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 327:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 328:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 329:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 330:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 331:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 332:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 333:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 334:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 335:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 336:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 337:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 338:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 339:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 340:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 341:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 342:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 343:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 344:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 345:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 346:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 347:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 348:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 349:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 350:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 351:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 352:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 353:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 354:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 355:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 356:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 357:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 358:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 359:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 360:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 361:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 362:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 363:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 364:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 365:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 366:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 367:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 368:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 369:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 370:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 371:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 372:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 373:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 374:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 375:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 376:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 377:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 378:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 379:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 380:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 381:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 382:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 383:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 384:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 385:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 386:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 387:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 388:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 389:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 390:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 391:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 392:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 393:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 394:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 395:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 396:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 397:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 398:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 399:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 400:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 401:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 402:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 403:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 404:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 405:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 406:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 407:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 408:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 409:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 410:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 411:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 412:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 413:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 414:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 415:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 416:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 417:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 418:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 419:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 420:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 421:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 422:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 423:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 424:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 425:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 426:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 427:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 428:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 429:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 430:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 431:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 432:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 433:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 434:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 435:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 436:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 437:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 438:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 439:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 440:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 441:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 442:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 443:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 444:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 445:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 446:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 447:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 448:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 449:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 450:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 451:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 452:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 453:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 454:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 455:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 456:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 457:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 458:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 459:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 460:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 461:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 462:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 463:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 464:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 465:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 466:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 467:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 468:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 469:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 470:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 471:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 472:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 473:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 474:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 475:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 476:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 477:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 478:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 479:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 480:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 481:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 482:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 483:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 484:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 485:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   };
 486:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 487:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 488:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 489:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 490:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 491:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 492:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 493:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 494:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 495:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   };
 496:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 497:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 498:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 499:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 500:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 501:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 502:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 503:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 504:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 505:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 506:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 507:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 508:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 509:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 510:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 511:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 512:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 513:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 514:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 515:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 516:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 517:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 518:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 519:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 520:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 521:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 522:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 523:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 524:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 525:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 526:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 527:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 528:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 529:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 530:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 531:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 532:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 533:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 534:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 535:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 536:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 537:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 538:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 539:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 540:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 541:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 542:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 543:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 544:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 545:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 546:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 547:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 548:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 549:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 550:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 551:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 552:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 553:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 555:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 556:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 557:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 558:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 559:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 560:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 563:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 564:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 565:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 566:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 567:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 568:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 569:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 570:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 571:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 572:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 573:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 574:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 575:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 576:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 577:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 578:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 579:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 580:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 581:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 582:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 583:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 584:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 585:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 586:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 587:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 588:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 589:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 590:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 591:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 592:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 593:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 594:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 595:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 596:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 597:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 598:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 599:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 600:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 601:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 602:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 603:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 604:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 605:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 606:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 607:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 608:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 609:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 610:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 611:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 612:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 613:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 614:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 615:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 616:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 617:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 619:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 620:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 621:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 622:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 624:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 625:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 626:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 627:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 628:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 629:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 630:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 631:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 632:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 633:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 634:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 635:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 636:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 637:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 638:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 639:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 640:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 641:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 642:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 643:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 644:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 645:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 646:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 647:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 648:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 649:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 650:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 651:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 652:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 653:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 654:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 655:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 656:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 657:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 658:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 659:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 660:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 661:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 662:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 663:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 664:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 665:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 666:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 667:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 668:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 669:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 670:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 674:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 675:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 676:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 677:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 678:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 679:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 680:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 681:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 682:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 683:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 684:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 685:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 686:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 687:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 688:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 689:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 690:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 691:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 692:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 693:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 694:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 695:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 696:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 697:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 698:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 699:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 700:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 701:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 703:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 704:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 705:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 706:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 707:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 708:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 709:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 710:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 711:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 712:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 713:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 714:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 715:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 716:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 717:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 718:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 719:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 720:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 722:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 723:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 724:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 725:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 726:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 727:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 728:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 729:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 730:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 731:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 732:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 733:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 734:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 735:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 736:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 737:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 738:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 739:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 740:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 741:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 742:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 744:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 745:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 746:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 747:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 748:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 749:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 750:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 751:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 752:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 753:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 754:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 755:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 756:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 757:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 758:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 759:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 760:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 761:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 762:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 763:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 764:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 765:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 766:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 767:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 768:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 769:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 770:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 771:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 772:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 773:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 774:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 775:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 776:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 777:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 778:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 780:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 781:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 782:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 783:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 784:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 785:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 786:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 787:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 788:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 789:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 790:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 791:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 792:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 793:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 794:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 795:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 796:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 797:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 798:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 799:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 800:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 801:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 802:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 803:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 804:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 805:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 806:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 807:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 808:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 809:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 810:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 811:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 812:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 813:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 814:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 815:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 816:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 817:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 818:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 819:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 820:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 821:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 822:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 823:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 824:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 825:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 826:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 827:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 828:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 829:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 830:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 831:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 832:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 833:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 834:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 835:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 836:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 837:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 838:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 839:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 840:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 841:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 842:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 843:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 844:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 845:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 846:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 847:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 848:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 849:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 850:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 851:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 852:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 853:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 854:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 856:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 857:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 858:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 859:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 860:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 861:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 862:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 863:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 864:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 865:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 866:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 867:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 868:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 869:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 870:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 871:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 872:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 873:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 874:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 875:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 876:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 877:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 878:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 879:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 880:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 881:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 882:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 883:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 884:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 885:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 886:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 887:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 888:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 889:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 890:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 892:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 893:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 894:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 895:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 896:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 897:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 898:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 899:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 900:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 901:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 902:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 903:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 904:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 905:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 906:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 907:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
 908:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 909:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 910:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 911:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
 912:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 913:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 914:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 915:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 916:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
 917:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
 918:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
 919:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 920:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
 921:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
 922:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 923:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 924:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 925:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 926:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 927:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
 928:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 929:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 930:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 931:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
 932:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 933:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 934:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
 935:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 936:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
 937:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 938:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 939:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 940:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 941:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 942:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 943:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 944:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
 945:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
 946:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 947:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 948:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 949:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
 950:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
 951:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 953:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 954:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
 955:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 956:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
 957:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 958:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
 959:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 960:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 961:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 962:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 963:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 964:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
 965:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
 966:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
 967:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 968:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 969:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 970:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
 971:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
 972:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 973:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 974:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 975:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
 976:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 977:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
 978:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint16_t data,
 979:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint32_t transmit_control_information)
 980:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 981:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
 982:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 983:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 984:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 985:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 986:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 987:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
 988:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
 989:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
 990:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 991:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 992:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 993:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
 994:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
 995:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 996:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 997:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
 998:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 999:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1000:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1001:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1002:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1003:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1004:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1005:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1006:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1007:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1008:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1009:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1010:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1011:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1012:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1013:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1014:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1015:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1016:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1017:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly. 
1018:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1019:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1020:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1021:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1022:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1023:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1024:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1025:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1026:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1027:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1028:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1029:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1030:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1031:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1032:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1033:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1034:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1035:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1036:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1037:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1038:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1039:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1040:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1041:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1042:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1043:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1044:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1045:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1046:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1047:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1048:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1049:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1050:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1051:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1052:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1053:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1054:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1055:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1056:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1057:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1058:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1059:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1060:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1061:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1062:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1064:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1065:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
1066:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1067:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1068:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1069:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1070:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1071:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1072:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1073:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1074:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1075:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1076:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1077:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1078:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1079:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1080:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1081:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1082:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1083:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1084:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1085:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1086:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1087:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1088:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1089:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1090:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1091:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1092:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          const uint32_t service_request);
1093:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1094:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1095:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1096:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1097:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1098:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1099:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1100:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1101:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1102:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1103:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1104:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1105:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1106:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1107:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1108:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1109:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1110:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1111:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
  25              	 .loc 1 1111 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
1112:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
  39              	 .loc 1 1112 0
  40 0008 7B68     	 ldr r3,[r7,#4]
  41 000a 9B6B     	 ldr r3,[r3,#56]
  42 000c DBB2     	 uxtb r3,r3
  43 000e 7F22     	 mov r2,#127
  44 0010 9343     	 bic r3,r2
  45 0012 DBB2     	 uxtb r3,r3
1113:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
  46              	 .loc 1 1113 0
  47 0014 181C     	 mov r0,r3
  48 0016 BD46     	 mov sp,r7
  49 0018 02B0     	 add sp,sp,#8
  50              	 
  51 001a 80BD     	 pop {r7,pc}
  52              	 .cfi_endproc
  53              	.LFE72:
  55              	 .section .text.XMC_USIC_CH_SetMode,"ax",%progbits
  56              	 .align 2
  57              	 .code 16
  58              	 .thumb_func
  60              	XMC_USIC_CH_SetMode:
  61              	.LFB107:
1114:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1115:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1116:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1117:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1118:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1119:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1120:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1121:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1122:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1123:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1124:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1125:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1126:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1127:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte. 
1128:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1129:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1130:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1131:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1132:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1133:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1134:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1135:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1136:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1137:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1138:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1139:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1140:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1141:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1142:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1143:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1144:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1145:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1146:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1147:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                              
1148:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1149:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1150:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1151:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1152:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1153:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1154:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1155:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1156:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1157:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1158:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                          const XMC_USIC_CH_START_TRANSMISION_MODE_t
1159:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1160:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1161:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1162:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1163:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1164:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1165:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1166:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1167:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1168:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1169:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1170:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1171:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1172:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1173:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1174:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1175:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1176:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1177:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1178:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1179:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output
1180:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1181:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1182:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1183:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1184:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1185:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1186:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1187:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1188:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1189:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1190:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1191:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the 
1192:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1193:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1194:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1195:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1196:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1197:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1198:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1199:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1200:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1201:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1202:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_SELMD_Msk |
1203:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_WAMD_Msk |
1204:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_HPCMD_Msk))) |
1205:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1206:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1207:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1208:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1209:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1210:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1211:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1212:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1213:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1214:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1215:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1216:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1217:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1218:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1219:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1220:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1221:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1222:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1223:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1224:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1225:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1226:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1227:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1228:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1229:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1230:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1231:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1232:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1233:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1234:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1235:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1236:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1237:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1238:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1239:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1240:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1241:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1242:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1243:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1244:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1245:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1246:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1247:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1248:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1250:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1251:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1252:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1253:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1254:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1255:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1256:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1257:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1258:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1259:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1260:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1261:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1262:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1263:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1264:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1265:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1266:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1267:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1268:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1269:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1270:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be 
1271:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled. 
1272:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1273:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1274:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1275:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1276:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1277:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1278:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1279:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1280:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1281:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1282:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1283:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1284:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1285:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1286:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1287:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1288:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1289:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1290:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1291:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1292:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1293:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1294:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1295:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                 const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buf
1296:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1297:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1298:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1299:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1300:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1301:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1302:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1303:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1304:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1305:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1306:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1307:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1308:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1309:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the 
1310:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1311:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1312:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1313:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1314:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1315:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1316:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                      const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive
1317:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1318:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1319:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1320:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1321:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1322:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1323:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1324:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1325:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1326:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1327:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1328:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1329:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1330:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1331:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1332:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1333:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1334:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1335:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1336:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1337:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1338:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1339:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1340:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1341:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1342:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1343:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1344:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1345:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1346:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1347:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1348:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1349:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1350:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1351:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1352:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1353:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1354:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1355:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1356:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1357:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1358:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1359:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1360:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1361:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the 
1362:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1363:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1364:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1365:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1366:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1367:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1368:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1369:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1370:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1371:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1372:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1373:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1374:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1375:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1376:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1377:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1378:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1379:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1380:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1381:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1382:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1383:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1384:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1385:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1386:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1387:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1388:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1389:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1390:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1391:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1392:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1393:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1394:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1395:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1396:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1397:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1398:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1399:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1400:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1401:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1402:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1403:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1404:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1405:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent(). 
1406:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1407:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1408:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1409:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1410:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1411:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1412:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1413:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1414:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1415:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1416:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1417:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1418:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1419:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1420:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1421:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1422:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1423:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1424:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1425:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1426:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1427:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1428:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1429:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1430:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1431:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1432:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1433:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1434:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1435:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1436:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1437:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1438:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1439:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1440:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1441:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1442:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
1443:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1444:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1445:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1446:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1447:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1448:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1449:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1450:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1451:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1452:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1453:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1454:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1455:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1456:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1457:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1458:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1459:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1460:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1461:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1462:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1463:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1464:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1465:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1466:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1467:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1468:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1469:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1470:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1471:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1472:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1473:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1474:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1475:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1476:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1477:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1478:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1479:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1480:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1481:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1482:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1483:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1484:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1485:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1486:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1487:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1488:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1489:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1490:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1491:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1492:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1493:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1494:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1495:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1496:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1497:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1498:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1499:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1500:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1501:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1502:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1503:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1504:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1505:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1506:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1507:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1508:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1509:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1510:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1511:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1512:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1513:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1514:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1515:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1516:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1517:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1518:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1519:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1520:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1521:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1522:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1523:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1524:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1525:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1526:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1527:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1528:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1529:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1530:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1531:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1532:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1533:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1534:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1535:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1536:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1537:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1538:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1539:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1540:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1541:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1542:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1543:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1544:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1545:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1546:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1547:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1548:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1549:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1550:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1551:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1552:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1553:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1554:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1556:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1557:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1558:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO, 
1559:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1560:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1561:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1562:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1563:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1564:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1565:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1566:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1567:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1568:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1569:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1570:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1571:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1572:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n 
1573:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1574:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1575:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1576:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1577:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1578:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1579:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1580:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1581:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1582:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1583:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1584:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1585:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1586:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1587:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1588:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1589:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1590:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1591:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1592:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1593:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1594:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1595:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1596:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1597:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1598:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1599:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1600:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1601:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1602:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1603:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1604:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1605:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1606:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1607:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1608:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_TBERI_Msk));
1609:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1610:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1611:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1612:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1613:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1614:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1615:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1616:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1617:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1618:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1619:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1620:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1621:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1622:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1623:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1624:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1625:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1626:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1627:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1628:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1629:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1630:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1631:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1632:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1633:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1634:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1635:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1636:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1637:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1638:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1639:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1640:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1641:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1642:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1643:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1644:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1645:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1646:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1647:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1648:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1649:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1650:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1651:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1652:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1653:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1654:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1655:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1656:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
1657:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1658:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1659:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1660:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1661:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1666:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1667:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1668:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1669:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1670:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1671:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1672:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1673:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the 
1674:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1675:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1676:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1677:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1678:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1679:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1680:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1681:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1682:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1683:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1684:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1685:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1686:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1687:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1688:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1689:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1690:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1691:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
1692:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1693:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
1694:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1695:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1696:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1697:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1698:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1699:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1700:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1701:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1702:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1703:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
1704:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1705:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1706:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1710:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
1711:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
1712:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
1713:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1714:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1715:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1716:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
1717:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1718:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent(). 
1719:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
1720:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1721:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1722:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1723:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1724:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1725:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1726:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1727:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
1728:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1729:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1730:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1731:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1732:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1733:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
1734:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1735:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1736:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
1737:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
1738:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1739:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1740:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1741:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
1742:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1743:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1744:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1745:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
1746:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1747:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1748:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1749:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1750:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1751:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1752:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1753:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1754:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1755:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
1756:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1757:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1758:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1759:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1760:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1761:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
1762:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
1763:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1764:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1765:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
1766:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
1767:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
1768:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
1769:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
1770:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1771:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1772:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
1773:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1774:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
1775:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1776:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
1777:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1778:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1779:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1780:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1781:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1782:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1783:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1784:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1785:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
1786:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
1787:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1788:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1789:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
1790:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1791:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
1792:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1793:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
1794:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1795:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1796:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1797:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1798:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1799:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
1800:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
1801:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1802:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1803:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
1804:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
1805:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
1806:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1807:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1808:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
1809:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1810:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1811:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1812:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
1813:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1814:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1815:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1816:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1817:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1818:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
1819:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
1820:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1821:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1822:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
1823:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
1824:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
1825:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
1826:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1827:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1828:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1829:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1830:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1831:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1832:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
1833:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1834:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1835:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1836:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1837:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1838:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
1839:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
1840:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1841:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1842:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
1843:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
1844:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the 
1845:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
1846:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1847:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1848:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1849:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1850:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1851:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1852:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
1853:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1854:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1855:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1856:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1857:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1858:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
1859:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
1860:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
1861:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1862:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1863:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
1864:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
1865:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
1866:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
1867:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1868:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1869:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1870:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1872:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
1873:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1874:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1875:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1876:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
1877:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_RBERI_Msk |
1878:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_ARBI_Msk));
1879:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1880:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1881:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1882:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1883:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1884:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
1885:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
1886:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
1887:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1888:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1889:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1890:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
1891:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1892:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1893:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
1894:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1895:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1896:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1897:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1898:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
1899:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1900:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1901:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1902:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1903:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1904:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1905:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1906:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1907:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1908:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1909:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1910:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1911:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1912:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
1913:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
1914:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1915:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1916:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
1917:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1918:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
1919:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1920:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
1921:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1922:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1923:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1924:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1925:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1926:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1927:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1928:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1929:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
1930:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
1931:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1932:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1933:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
1934:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1935:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
1936:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1937:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
1938:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1939:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1940:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1941:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1942:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1943:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
1944:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
1945:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1946:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1947:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1948:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
1949:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1950:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
1951:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSI
1952:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1953:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
1954:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1955:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1956:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1957:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1958:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
1959:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
1960:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
1961:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
1962:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
1963:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
1964:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
1965:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
1966:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1967:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1968:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1969:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
1970:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
1971:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
1972:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
1973:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
1974:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
1975:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1976:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1977:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
1978:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIV
1979:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
1980:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1981:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
1982:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                              USIC_CH_BRG_SCLKOSEL_Msk))) |
1983:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
1984:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
1985:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1986:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1987:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1988:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1989:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1990:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param mode USIC channel operation mode. \n
1991:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_OPERATING_MODE_IDLE, @ref XMC_USIC_CH_OPERATING_MODE_SPI,
1992:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_UART, @ref XMC_USIC_CH_OPERATING_MODE_I2S,
1993:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_I2C.
1994:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1995:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1996:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1997:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the USIC channel operation mode.\n\n
1998:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S.
1999:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The API sets the input operation mode to the USIC channel.
2000:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
2001:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2002:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_Enable(), XMC_USIC_CH_Enable() \n\n\n
2003:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
2004:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMode(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_
2005:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
  62              	 .loc 1 2005 0
  63              	 .cfi_startproc
  64 0000 80B5     	 push {r7,lr}
  65              	.LCFI3:
  66              	 .cfi_def_cfa_offset 8
  67              	 .cfi_offset 7,-8
  68              	 .cfi_offset 14,-4
  69 0002 82B0     	 sub sp,sp,#8
  70              	.LCFI4:
  71              	 .cfi_def_cfa_offset 16
  72 0004 00AF     	 add r7,sp,#0
  73              	.LCFI5:
  74              	 .cfi_def_cfa_register 7
  75 0006 7860     	 str r0,[r7,#4]
  76 0008 0A1C     	 mov r2,r1
  77 000a FB1C     	 add r3,r7,#3
  78 000c 1A70     	 strb r2,[r3]
2006:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR = (uint32_t)(channel->CCR & (~(USIC_CH_CCR_MODE_Msk))) | (uint32_t)mode;
  79              	 .loc 1 2006 0
  80 000e 7B68     	 ldr r3,[r7,#4]
  81 0010 1B6C     	 ldr r3,[r3,#64]
  82 0012 0F22     	 mov r2,#15
  83 0014 9343     	 bic r3,r2
  84 0016 1A1C     	 mov r2,r3
  85 0018 FB1C     	 add r3,r7,#3
  86 001a 1B78     	 ldrb r3,[r3]
  87 001c 1A43     	 orr r2,r3
  88 001e 7B68     	 ldr r3,[r7,#4]
  89 0020 1A64     	 str r2,[r3,#64]
2007:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
  90              	 .loc 1 2007 0
  91 0022 BD46     	 mov sp,r7
  92 0024 02B0     	 add sp,sp,#8
  93              	 
  94 0026 80BD     	 pop {r7,pc}
  95              	 .cfi_endproc
  96              	.LFE107:
  98              	 .section .text.XMC_I2S_CH_ClearStatusFlag,"ax",%progbits
  99              	 .align 2
 100              	 .code 16
 101              	 .thumb_func
 103              	XMC_I2S_CH_ClearStatusFlag:
 104              	.LFB113:
 105              	 .file 2 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc/xmc_i2s.h"
   1:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
   2:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @file xmc_i2s.h
   3:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @date 2016-06-30
   4:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
   5:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @cond
   6:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  **************************************************************************************************
   7:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
   9:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * All rights reserved.
  11:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  12:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * following conditions are met:
  14:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  15:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * disclaimer.
  17:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  18:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.
  20:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  21:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * products derived from this software without specific prior written permission.
  23:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  24:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  32:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Infineon Technologies AG dave@infineon.com).
  34:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  **************************************************************************************************
  35:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  36:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Change History
  37:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * --------------
  38:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  39:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2015-08-21:
  40:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Initial <br>
  41:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  42:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2015-08-24:
  43:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_I2S_CH_DisableDelayCompensation()
  44:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *       XMC_I2S_CH_EnableDelayCompensation() <br>
  45:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  46:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2015-09-01:
  47:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Modified XMC_I2S_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br>
  48:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Modified XMC_I2S_CH_EVENT_t enum for supporting XMC_I2S_CH_EnableEvent() and XMC_I2S_CH_Di
  49:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *       for supporting multiple events configuration <br>
  50:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  51:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2015-09-14:
  52:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Modified XMC_I2S_CH_SetSystemWordLength for supporting up to 63 system word length<br>
  53:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  54:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2016-05-20:
  55:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Added XMC_I2S_CH_EnableDataTransmission() and XMC_I2S_CH_DisableDataTransmission()
  56:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  57:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * 2016-06-30:
  58:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *     - Documentation updates.
  59:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  60:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @endcond
  61:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  62:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
  63:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
  64:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #ifndef XMC_I2S_H_
  65:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S_H_
  66:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
  67:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**************************************************************************************************
  68:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * HEADER FILES
  69:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  **************************************************************************************************
  70:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #include "xmc_usic.h"
  71:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
  72:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
  73:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @addtogroup XMClib XMC Peripheral Library
  74:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @{
  75:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
  76:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
  77:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
  78:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @addtogroup I2S
  79:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief (IIS) driver for the XMC microcontroller family.
  80:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
  81:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * USIC IIS Features: <br>
  82:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @{
  83:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
  84:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
  85:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /*******************************************************************************
  86:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * MACROS
  87:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *******************************************************************************/
  88:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
  89:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #if defined(USIC0)
  90:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
  91:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
  92:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #endif
  93:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
  94:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #if defined(USIC1)
  95:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
  96:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
  97:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #endif
  98:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
  99:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #if defined(USIC2)
 100:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 101:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #define XMC_I2S2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 102:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #endif
 103:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /*******************************************************************************
 104:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * ENUMS
 105:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *******************************************************************************/
 106:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 107:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 108:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief I2S Status
 109:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 110:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_STATUS
 111:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 112:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_OK,      /**< Status OK */
 113:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_ERROR,   /**< Status ERROR */
 114:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_BUSY     /**< Status BUSY */
 115:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_STATUS_t;
 116:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 117:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 118:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief I2S status flag
 119:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 120:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_STATUS_FLAG
 121:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 122:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_WORD_ADDRESS = USIC_CH_PSR_IISMode_WA_Msk,                     /**< Word A
 123:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_DX2S = USIC_CH_PSR_IISMode_DX2S_Msk,                           /**< Status
 124:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_DX2T_EVENT_DETECTED = USIC_CH_PSR_IISMode_DX2TEV_Msk,          /**< Status
 125:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_WA_FALLING_EDGE_EVENT = USIC_CH_PSR_IISMode_WAFE_Msk,          /**< Fallin
 126:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****                                                                                              signal
 127:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_WA_RISING_EDGE_EVENT = USIC_CH_PSR_IISMode_WARE_Msk,           /**< Rising
 128:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****                                                                                              signal
 129:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_WA_GENERATION_END = USIC_CH_PSR_IISMode_END_Msk,               /**< The WA
 130:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IISMode_RSIF_Msk,      /**< Receiv
 131:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IISMode_DLIF_Msk,           /**< Data l
 132:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IISMode_TSIF_Msk,      /**< Transm
 133:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IISMode_TBIF_Msk,     /**< Transm
 134:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IISMode_RIF_Msk,              /**< Receiv
 135:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IISMode_AIF_Msk,  /**< Altern
 136:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IISMode_BRGIF_Msk /**< Baud r
 137:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_STATUS_FLAG_t;
 138:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 139:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 140:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *  @brief I2S Baudrate Generator shift clock output
 141:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** */
 142:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_BRG_SHIFT_CLOCK_OUTPUT
 143:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 144:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK, /**< Baudrate G
 145:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1  = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1   /**< Clock obta
 146:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 147:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 148:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 149:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *  @brief I2S channel interrupt node pointers
 150:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 151:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_INTERRUPT_NODE_POINTER
 152:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 153:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT    = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT
 154:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT
 155:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INTERRUPT_NODE_POINTER_RECEIVE           = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE,
 156:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNAT
 157:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INTERRUPT_NODE_POINTER_PROTOCOL          = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL
 158:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_INTERRUPT_NODE_POINTER_t;
 159:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 160:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 161:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief I2S events
 162:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 163:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_EVENT
 164:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 165:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 166:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 167:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 168:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 169:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 170:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 171:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 172:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 173:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_WA_FALLING_EDGE     = USIC_CH_PCR_IISMode_WAFEIEN_Msk << 2U,  /**< WA falling ed
 174:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_WA_RISING_EDGE      = USIC_CH_PCR_IISMode_WAREIEN_Msk << 2U,  /**< WA rising edg
 175:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_WA_GENERATION_END   = USIC_CH_PCR_IISMode_ENDIEN_Msk << 2U,   /**< END event */
 176:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_EVENT_DX2TIEN_ACTIVATED   = USIC_CH_PCR_IISMode_DX2TIEN_Msk << 2U   /**< WA input sign
 177:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_EVENT_t;
 178:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 179:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 180:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief Defines the Polarity of the WA in the SELO output lines in relation to the internal WA si
 181:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 182:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_WA_POLARITY
 183:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 184:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_WA_POLARITY_DIRECT = 0x0UL,                                    /**< The SELO outputs h
 185:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****                                                                                   as the WA signal 
 186:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_WA_POLARITY_INVERTED = 0x1UL << USIC_CH_PCR_IISMode_SELINV_Pos /**< The SELO outputs h
 187:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****                                                                                  polarity to the WA
 188:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_WA_POLARITY_t;
 189:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 190:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 191:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief Defines the Polarity of the WA in the SELO output lines in relation to the internal WA si
 192:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 193:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_CHANNEL
 194:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 195:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_CHANNEL_1_LEFT = 0U,  /**< Channel 1 (left) */
 196:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_CHANNEL_2_RIGHT = 1U  /**< Channel 2 (right) */
 197:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_CHANNEL_t;
 198:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 199:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 200:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief I2S input stage selection
 201:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 202:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_INPUT
 203:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 204:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_DIN0 = 0UL,         /**< Data input stage 0 */
 205:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_SLAVE_SCLKIN = 1UL, /**< Clock input stage */
 206:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_SLAVE_WA = 2UL,     /**< WA input stage */
 207:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #if UC_FAMILY == XMC1
 208:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_DIN1 = 3UL,         /**< Data input stage 1 */
 209:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_DIN2 = 4UL,         /**< Data input stage 2 */
 210:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_INPUT_DIN3 = 5UL          /**< Data input stage 3 */
 211:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #endif
 212:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_INPUT_t;
 213:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 214:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 215:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief Defines the I2S bus mode
 216:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 217:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** typedef enum XMC_I2S_CH_BUS_MODE
 218:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 219:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_BUS_MODE_MASTER, /**< I2S Master */
 220:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_BUS_MODE_SLAVE   /**< I2S Slave */
 221:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_BUS_MODE_t;
 222:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 223:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /*******************************************************************************
 224:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * DATA STRUCTURES
 225:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *******************************************************************************/
 226:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 227:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @brief I2S_CH configuration structure
 228:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 229:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** typedef struct XMC_I2S_CH_CONFIG
 230:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 231:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   uint32_t baudrate;					             /**< Module baud rate for communication */
 232:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   uint8_t data_bits;                       /**< Data word length. A data frame can consists of seve
 233:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****                                                 Value configured as USIC channel word length. \n
 234:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****                                                   \b Range: minimum= 1, maximum= 16*/
 235:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   uint8_t frame_length;                    /**< Number of data bits transferred after a change of s
 236:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****                                                 Configured as USIC channel frame length. \n
 237:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****                                                   \b Range: minimum= 1, maximum= 63*/
 238:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   uint8_t data_delayed_sclk_periods;       /**< Data delay defined in sclk periods */
 239:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_WA_POLARITY_t wa_inversion;   /**< Enable inversion of Slave select signal relative to
 240:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_BUS_MODE_t	bus_mode;          /**< Bus mode MASTER/SLAVE */
 241:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** } XMC_I2S_CH_CONFIG_t;
 242:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 243:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /*******************************************************************************
 244:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * API PROTOTYPES
 245:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *******************************************************************************/
 246:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 247:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #ifdef __cplusplus
 248:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** extern "C" {
 249:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** #endif
 250:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 251:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 252:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 253:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *          \b Range: @ref XMC_I2S0_CH0, XMC_I2S0_CH1,XMC_I2S1_CH0, XMC_I2S1_CH1,XMC_I2S2_CH0, XMC_
 254:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param config Constant pointer to I2S configuration structure of type @ref XMC_I2S_CH_CONFIG_t.
 255:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return XMC_I2S_CH_STATUS_t Status of initializing the USIC channel for I2S protocol.\n
 256:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *          \b Range: @ref XMC_I2S_CH_STATUS_OK if initialization is successful.\n
 257:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *                    @ref XMC_I2S_CH_STATUS_ERROR if configuration of baudrate failed.
 258:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 259:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description</b><br>
 260:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Initializes the USIC channel for I2S protocol.\n\n
 261:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * During the initialization, USIC channel is enabled and baudrate is configured.
 262:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * After each change of the WA signal, a complete data frame is intended to be transferred (frame l
 263:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * The number of data bits transferred after a change of signal WA is defined by config->frame_leng
 264:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * A data frame can consist of several data words with a data word length defined by config->data_b
 265:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * The changes of signal WA define the system word length as the number of SCLK cycles between two 
 266:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * The system word length is set by default to the frame length defined by config->frame_length.
 267:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 268:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Start() should be invoked after the initialization to enable the channel.
 269:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 270:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 271:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Start(), XMC_I2S_CH_Stop(), XMC_I2S_CH_Transmit(), XMC_I2S_CH_SetSystemWordLength()\n
 272:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 273:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** void XMC_I2S_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2S_CH_CONFIG_t *const config);
 274:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 275:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 276:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 277:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 278:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 279:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 280:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 281:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Set the selected USIC channel to operate in I2S mode, by setting CCR.MODE bits.\n\n
 282:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * It should be executed after XMC_I2S_CH_Init() during initialization. By invoking XMC_I2S_CH_Stop
 283:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * to IDLE state. Call XMC_I2S_CH_Start() to set the I2S mode again, as needed later in the program
 284:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 285:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 286:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Init(), XMC_I2S_CH_Stop()
 287:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 288:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE void XMC_I2S_CH_Start(XMC_USIC_CH_t *const channel)
 289:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 290:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   /* USIC channel in I2S mode */
 291:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2S);
 292:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** }
 293:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 294:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 295:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 296:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 297:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return XMC_I2S_CH_STATUS_t Status of the I2S driver after the request for stopping is processed
 298:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *        XMC_I2S_CH_STATUS_OK- If the USIC channel is successfully put to IDLE mode. \n
 299:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *        XMC_I2S_CH_STATUS_BUSY- If the USIC channel is busy transmitting data.
 300:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 301:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 302:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Set the selected I2S channel to IDLE mode, by clearing CCR.MODE bits.\n\n
 303:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * After calling XMC_I2S_CH_Stop, channel is IDLE mode. So no communication is supported. XMC_I2S_C
 304:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * invoked to start the communication again.
 305:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 306:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 307:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Start()
 308:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 309:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** XMC_I2S_CH_STATUS_t XMC_I2S_CH_Stop(XMC_USIC_CH_t *const channel);
 310:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 311:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 312:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 313:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param rate Bus speed in bits per second
 314:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 315:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return XMC_I2S_CH_STATUS_t Status of the I2S driver after the request for setting baudrate is p
 316:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *        XMC_I2S_CH_STATUS_OK- If the baudrate is successfully changed. \n
 317:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *        XMC_I2S_CH_STATUS_ERROR- If the new baudrate value is out of range.
 318:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 319:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 320:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Sets the bus speed in bits per second
 321:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 322:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 323:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Init(), XMC_I2S_CH_Stop()
 324:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 325:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** XMC_I2S_CH_STATUS_t XMC_I2S_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 326:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 327:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 328:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 329:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param sclk_cycles_system_word_length system word length in terms of sclk clock cycles.
 330:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 331:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 332:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 333:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 334:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Configures the system word length by setting BRG.DCTQ bit field.\n\n
 335:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * This value has to be always higher than 1U and lower than the data with (SCTR.FLE)
 336:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 337:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 338:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** void XMC_I2S_CH_SetSystemWordLength(XMC_USIC_CH_t *const channel,uint32_t sclk_cycles_system_word_l
 339:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 340:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 341:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 342:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param data Data to be transmitted
 343:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel_number Communication output channel of the I2S, based on this channel selection T
 344:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *             Refer @ref XMC_I2S_CH_CHANNEL_t for valid values.
 345:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 346:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 347:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 348:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 349:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Puts the data into FIFO, if FIFO mode is enabled or else into standard buffer, by setting the pr
 350:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * TCI(Transmit Control Information) allows dynamic control of output channel during data transfers
 351:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * update, TCSR.WAMD(Automatic WA mode) will be enabled during the initialization using XMC_I2S_CH_
 352:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 353:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 354:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 355:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Receive()
 356:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 357:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** void XMC_I2S_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_I2S_CH_CHANNE
 358:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 359:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 360:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 361:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel_number Communication output channel of the I2S, based on this mode TCI(Transmit c
 362:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *             Refer @ref XMC_I2S_CH_CHANNEL_t for valid values.
 363:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 364:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 365:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 366:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 367:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Transmits a dummy data(FFFFH) to provide clock for slave and receives the data from the slave.\n
 368:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Receive() receives the data and places it into buffer based on the FIFO selection. Af
 369:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_GetReceivedData() can be invoked to read the data from the buffers.
 370:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 371:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 372:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_GetReceivedData()
 373:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 374:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE void XMC_I2S_CH_Receive(XMC_USIC_CH_t *const channel, const XMC_I2S_CH_CHANNEL_t ch
 375:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 376:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   /* Transmit dummy data */
 377:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   XMC_I2S_CH_Transmit(channel, (uint16_t)0xffffU , channel_number);
 378:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** }
 379:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 380:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 381:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 382:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 383:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return uint16_t Data read from the receive buffer.
 384:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 385:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 386:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Reads data from the receive buffer based on the FIFO selection.\n\n
 387:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Invocation of XMC_I2S_CH_Receive() receives the data and place it into receive buffer. After rec
 388:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_GetReceivedData() can be used to read the data from the buffer.
 389:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 390:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 391:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_Receive()
 392:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 393:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** uint16_t XMC_I2S_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 394:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 395:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 396:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 397:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 398:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 399:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 400:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 401:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Set the order of data transfer from LSB to MSB, by clearing SCTR.SDIR bit.\n\n
 402:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * This is typically based on the slave settings. Invoke XMC_I2S_CH_SetBitOrderLsbFirst() to set di
 403:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * the program.
 404:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 405:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 406:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_SetBitOrderMsbFirst()
 407:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 408:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE void XMC_I2S_CH_SetBitOrderLsbFirst(XMC_USIC_CH_t *const channel)
 409:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 410:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   channel->SCTR &= (uint32_t)~USIC_CH_SCTR_SDIR_Msk;
 411:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** }
 412:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 413:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 414:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 415:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 416:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 417:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 418:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 419:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Set the order of data transfer from MSB to LSB, by setting SCTR.SDIR bit.\n\n
 420:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * This is typically based on the slave settings. This is not set during XMC_I2S_CH_Init().
 421:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Invoke XMC_I2S_CH_SetBitOrderMsbFirst() to set direction as needed in the program.
 422:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 423:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 424:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_SetBitOrderLsbFirst()
 425:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 426:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE void XMC_I2S_CH_SetBitOrderMsbFirst(XMC_USIC_CH_t *const channel)
 427:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 428:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   channel->SCTR |= (uint32_t)USIC_CH_SCTR_SDIR_Msk;
 429:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** }
 430:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 431:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 432:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 433:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param event Protocol events which have to be enabled.
 434:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *              Refer @ XMC_I2S_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 435:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *              as input.
 436:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 437:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 438:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 439:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 440:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Enables the I2S protocol specific events, by configuring PCR register.\n\n
 441:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Events can be enabled as needed using XMC_I2S_CH_EnableEvent().
 442:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_DisableEvent() can be used to disable the events.
 443:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 444:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 445:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_DisableEvent()
 446:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 447:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** void XMC_I2S_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 448:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 449:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 450:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 451:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param event Protocol events which have to be disabled.
 452:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *              Refer @ XMC_I2S_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 453:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *              as input.
 454:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 455:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 456:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 457:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 458:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Disables the I2S protocol specific events, by configuring PCR register.\n\n
 459:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * After disabling the events, XMC_I2S_CH_EnableEvent() has to be invoked to re-enable the events.
 460:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 461:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 462:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_EnableEvent()
 463:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 464:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** void XMC_I2S_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 465:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 466:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 467:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 468:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 469:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return uint32_t Status of I2S protocol events.
 470:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 471:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 472:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Returns the status of the events, by reading PSR register.\n\n
 473:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * This indicates the status of the all the events, for I2S communication.
 474:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 475:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 476:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_ClearStatusFlag()
 477:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 478:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE uint32_t XMC_I2S_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 479:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 480:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   return channel->PSR_IISMode;
 481:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** }
 482:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** 
 483:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** /**
 484:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 485:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @param flag Protocol event status to be cleared for detection of next occurence.
 486:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *              Refer @ XMC_I2S_CH_STATUS_FLAG_t for valid values. <b>OR</b> combinations of these 
 487:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *              as input.
 488:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * @return None
 489:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 490:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Description:</b><br>
 491:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * Clears the events specified, by setting PSCR register.\n\n
 492:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * During communication the events occurred have to be cleared to detect their next occurence.\n
 493:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
 494:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *       event has to be cleared after transmission of each data word. Otherwise next event cannot 
 495:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  *
 496:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * \par<b>Related APIs:</b><BR>
 497:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  * XMC_I2S_CH_GetStatusFlag()
 498:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****  */
 499:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** __STATIC_INLINE void XMC_I2S_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 500:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** {
 106              	 .loc 2 500 0
 107              	 .cfi_startproc
 108 0000 80B5     	 push {r7,lr}
 109              	.LCFI6:
 110              	 .cfi_def_cfa_offset 8
 111              	 .cfi_offset 7,-8
 112              	 .cfi_offset 14,-4
 113 0002 82B0     	 sub sp,sp,#8
 114              	.LCFI7:
 115              	 .cfi_def_cfa_offset 16
 116 0004 00AF     	 add r7,sp,#0
 117              	.LCFI8:
 118              	 .cfi_def_cfa_register 7
 119 0006 7860     	 str r0,[r7,#4]
 120 0008 3960     	 str r1,[r7]
 501:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h ****   channel->PSCR |= flag;
 121              	 .loc 2 501 0
 122 000a 7B68     	 ldr r3,[r7,#4]
 123 000c DA6C     	 ldr r2,[r3,#76]
 124 000e 3B68     	 ldr r3,[r7]
 125 0010 1A43     	 orr r2,r3
 126 0012 7B68     	 ldr r3,[r7,#4]
 127 0014 DA64     	 str r2,[r3,#76]
 502:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2s.h **** }
 128              	 .loc 2 502 0
 129 0016 BD46     	 mov sp,r7
 130 0018 02B0     	 add sp,sp,#8
 131              	 
 132 001a 80BD     	 pop {r7,pc}
 133              	 .cfi_endproc
 134              	.LFE113:
 136              	 .section .text.XMC_I2S_CH_Init,"ax",%progbits
 137              	 .align 2
 138              	 .global XMC_I2S_CH_Init
 139              	 .code 16
 140              	 .thumb_func
 142              	XMC_I2S_CH_Init:
 143              	.LFB130:
 144              	 .file 3 "../Libraries/XMCLib/src/xmc_i2s.c"
   1:../Libraries/XMCLib/src/xmc_i2s.c **** /**
   2:../Libraries/XMCLib/src/xmc_i2s.c ****  * @file xmc_i2s.c
   3:../Libraries/XMCLib/src/xmc_i2s.c ****  * @date 2015-06-30
   4:../Libraries/XMCLib/src/xmc_i2s.c ****  *
   5:../Libraries/XMCLib/src/xmc_i2s.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_i2s.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_i2s.c ****  * XMClib v2.1.8 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_i2s.c ****  *
   9:../Libraries/XMCLib/src/xmc_i2s.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_i2s.c ****  * All rights reserved.
  11:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  12:../Libraries/XMCLib/src/xmc_i2s.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_i2s.c ****  * following conditions are met:
  14:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  15:../Libraries/XMCLib/src/xmc_i2s.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_i2s.c ****  * disclaimer.
  17:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  18:../Libraries/XMCLib/src/xmc_i2s.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_i2s.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.
  20:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  21:../Libraries/XMCLib/src/xmc_i2s.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_i2s.c ****  * products derived from this software without specific prior written permission.
  23:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  24:../Libraries/XMCLib/src/xmc_i2s.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_i2s.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_i2s.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_i2s.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_i2s.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_i2s.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_i2s.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  32:../Libraries/XMCLib/src/xmc_i2s.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_i2s.c ****  * Infineon Technologies AG dave@infineon.com).
  34:../Libraries/XMCLib/src/xmc_i2s.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  36:../Libraries/XMCLib/src/xmc_i2s.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_i2s.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  39:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2015-08-21:
  40:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  42:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2015-09-01:
  43:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Modified XMC_I2S_CH_EnableEvent() and XMC_I2S_CH_DisableEvent() for supporting multiple ev
  44:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  45:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2015-09-14:
  46:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Modified XMC_I2S_CH_SetSystemWordLength for supporting up to 63 system word length.
  47:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Removed parity configuration<br>
  48:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  49:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2015-09-28:
  50:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Fixed bugs in the XMC_I2S_CH_Init() and in the ASSERTs <br>
  51:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  52:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2015-11-04: 
  53:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Modified the check of XMC_USIC_CH_GetTransmitBufferStatus() in the XMC_I2S_CH_Transmit() A
  54:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  55:../Libraries/XMCLib/src/xmc_i2s.c ****  * 2016-06-30:
  56:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Modified XMC_I2S_CH_Init:
  57:../Libraries/XMCLib/src/xmc_i2s.c ****  *       + change default passive level to 0
  58:../Libraries/XMCLib/src/xmc_i2s.c ****  *       + Call XMC_I2S_CH_SetSystemWordLength() to set the system frame length equal to the frame 
  59:../Libraries/XMCLib/src/xmc_i2s.c ****  *     - Modified XMC_I2S_CH_SetBaudrate:
  60:../Libraries/XMCLib/src/xmc_i2s.c ****  *       + Optional Master clock output signal generated with a fixed phase relation to SCLK.
  61:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  62:../Libraries/XMCLib/src/xmc_i2s.c ****  * @endcond
  63:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  64:../Libraries/XMCLib/src/xmc_i2s.c ****  */
  65:../Libraries/XMCLib/src/xmc_i2s.c **** /**
  66:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  67:../Libraries/XMCLib/src/xmc_i2s.c ****  * @brief I2S driver for XMC microcontroller family
  68:../Libraries/XMCLib/src/xmc_i2s.c ****  *
  69:../Libraries/XMCLib/src/xmc_i2s.c ****  */
  70:../Libraries/XMCLib/src/xmc_i2s.c **** /**************************************************************************************************
  71:../Libraries/XMCLib/src/xmc_i2s.c ****  * HEADER FILES
  72:../Libraries/XMCLib/src/xmc_i2s.c ****  **************************************************************************************************
  73:../Libraries/XMCLib/src/xmc_i2s.c **** 
  74:../Libraries/XMCLib/src/xmc_i2s.c **** #include <xmc_scu.h>
  75:../Libraries/XMCLib/src/xmc_i2s.c **** #include <xmc_i2s.h>
  76:../Libraries/XMCLib/src/xmc_i2s.c **** 
  77:../Libraries/XMCLib/src/xmc_i2s.c **** /**************************************************************************************************
  78:../Libraries/XMCLib/src/xmc_i2s.c ****  * MACROS
  79:../Libraries/XMCLib/src/xmc_i2s.c ****  **************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_i2s.c **** /* To take into account the SCLK divider by 2 and the PPPEN divider (see Divider Mode Counter figur
  81:../Libraries/XMCLib/src/xmc_i2s.c **** #define XMC_I2S_CH_OVERSAMPLING (4UL)
  82:../Libraries/XMCLib/src/xmc_i2s.c **** 
  83:../Libraries/XMCLib/src/xmc_i2s.c **** /**************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_i2s.c ****  * API IMPLEMENTATION
  85:../Libraries/XMCLib/src/xmc_i2s.c ****  **************************************************************************************************
  86:../Libraries/XMCLib/src/xmc_i2s.c **** 
  87:../Libraries/XMCLib/src/xmc_i2s.c **** /* Initializes the selected I2S channel with the config structure. */
  88:../Libraries/XMCLib/src/xmc_i2s.c **** void XMC_I2S_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2S_CH_CONFIG_t *const config)
  89:../Libraries/XMCLib/src/xmc_i2s.c **** {
 145              	 .loc 3 89 0
 146              	 .cfi_startproc
 147 0000 80B5     	 push {r7,lr}
 148              	.LCFI9:
 149              	 .cfi_def_cfa_offset 8
 150              	 .cfi_offset 7,-8
 151              	 .cfi_offset 14,-4
 152 0002 82B0     	 sub sp,sp,#8
 153              	.LCFI10:
 154              	 .cfi_def_cfa_offset 16
 155 0004 00AF     	 add r7,sp,#0
 156              	.LCFI11:
 157              	 .cfi_def_cfa_register 7
 158 0006 7860     	 str r0,[r7,#4]
 159 0008 3960     	 str r1,[r7]
  90:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_ASSERT("XMC_I2S_CH_Init: data_delayed_sclk_periods value not valid",(config->data_delayed_scl
  91:../Libraries/XMCLib/src/xmc_i2s.c **** 		                                                   (config->data_delayed_sclk_periods  < config->
  92:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_USIC_CH_Enable(channel);
 160              	 .loc 3 92 0
 161 000a 7B68     	 ldr r3,[r7,#4]
 162 000c 181C     	 mov r0,r3
 163 000e FFF7FEFF 	 bl XMC_USIC_CH_Enable
  93:../Libraries/XMCLib/src/xmc_i2s.c **** 
  94:../Libraries/XMCLib/src/xmc_i2s.c ****   if(config->bus_mode == XMC_I2S_CH_BUS_MODE_MASTER)
 164              	 .loc 3 94 0
 165 0012 3B68     	 ldr r3,[r7]
 166 0014 1B7A     	 ldrb r3,[r3,#8]
 167 0016 002B     	 cmp r3,#0
 168 0018 06D1     	 bne .L6
  95:../Libraries/XMCLib/src/xmc_i2s.c ****   {
  96:../Libraries/XMCLib/src/xmc_i2s.c ****     /* Configure baud rate */
  97:../Libraries/XMCLib/src/xmc_i2s.c ****     (void)XMC_I2S_CH_SetBaudrate(channel, config->baudrate);
 169              	 .loc 3 97 0
 170 001a 3B68     	 ldr r3,[r7]
 171 001c 1B68     	 ldr r3,[r3]
 172 001e 7A68     	 ldr r2,[r7,#4]
 173 0020 101C     	 mov r0,r2
 174 0022 191C     	 mov r1,r3
 175 0024 FFF7FEFF 	 bl XMC_I2S_CH_SetBaudrate
 176              	.L6:
  98:../Libraries/XMCLib/src/xmc_i2s.c ****   }
  99:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Configuration of USIC Shift Control */
 100:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Transmission Mode (TRM) = 1  */
 101:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->SCTR = (uint32_t)(0x3UL << USIC_CH_SCTR_TRM_Pos) |
 102:../Libraries/XMCLib/src/xmc_i2s.c ****                   (uint32_t)((config->frame_length -1U) << USIC_CH_SCTR_FLE_Pos) |
 177              	 .loc 3 102 0
 178 0028 3B68     	 ldr r3,[r7]
 179 002a 5B79     	 ldrb r3,[r3,#5]
 180 002c 013B     	 sub r3,r3,#1
 181 002e 1A04     	 lsl r2,r3,#16
 103:../Libraries/XMCLib/src/xmc_i2s.c ****                   (uint32_t)((config->data_bits - 1U) << USIC_CH_SCTR_WLE_Pos) |
 182              	 .loc 3 103 0
 183 0030 3B68     	 ldr r3,[r7]
 184 0032 1B79     	 ldrb r3,[r3,#4]
 185 0034 013B     	 sub r3,r3,#1
 186 0036 1B06     	 lsl r3,r3,#24
 102:../Libraries/XMCLib/src/xmc_i2s.c ****                   (uint32_t)((config->data_bits - 1U) << USIC_CH_SCTR_WLE_Pos) |
 187              	 .loc 3 102 0
 188 0038 1343     	 orr r3,r2
 189              	 .loc 3 103 0
 190 003a 194A     	 ldr r2,.L8
 191 003c 1A43     	 orr r2,r3
 101:../Libraries/XMCLib/src/xmc_i2s.c ****                   (uint32_t)((config->frame_length -1U) << USIC_CH_SCTR_FLE_Pos) |
 192              	 .loc 3 101 0
 193 003e 7B68     	 ldr r3,[r7,#4]
 194 0040 5A63     	 str r2,[r3,#52]
 104:../Libraries/XMCLib/src/xmc_i2s.c ****                   USIC_CH_SCTR_SDIR_Msk;
 105:../Libraries/XMCLib/src/xmc_i2s.c **** 
 106:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Configuration of USIC Transmit Control/Status Register */
 107:../Libraries/XMCLib/src/xmc_i2s.c ****   /* TBUF Data Enable (TDEN) = 1 */
 108:../Libraries/XMCLib/src/xmc_i2s.c ****   /* TBUF Data Single Shot Mode (TDSSM) = 1 */
 109:../Libraries/XMCLib/src/xmc_i2s.c ****   /* WA mode enabled(WAMD) = 1 */
 110:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->TCSR = (uint32_t)((channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
 195              	 .loc 3 110 0
 196 0042 7B68     	 ldr r3,[r7,#4]
 197 0044 9B6B     	 ldr r3,[r3,#56]
 198 0046 174A     	 ldr r2,.L8+4
 199 0048 1340     	 and r3,r2
 200 004a A122     	 mov r2,#161
 201 004c D200     	 lsl r2,r2,#3
 202 004e 1A43     	 orr r2,r3
 203 0050 7B68     	 ldr r3,[r7,#4]
 204 0052 9A63     	 str r2,[r3,#56]
 111:../Libraries/XMCLib/src/xmc_i2s.c ****                                                  USIC_CH_TCSR_SELMD_Msk |
 112:../Libraries/XMCLib/src/xmc_i2s.c ****                                                  USIC_CH_TCSR_FLEMD_Msk |
 113:../Libraries/XMCLib/src/xmc_i2s.c ****                                                  USIC_CH_TCSR_HPCMD_Msk))) |
 114:../Libraries/XMCLib/src/xmc_i2s.c **** 				  USIC_CH_TCSR_WAMD_Msk |
 115:../Libraries/XMCLib/src/xmc_i2s.c ****                   (0x01UL  << USIC_CH_TCSR_TDEN_Pos) |
 116:../Libraries/XMCLib/src/xmc_i2s.c ****                   USIC_CH_TCSR_TDSSM_Msk);
 117:../Libraries/XMCLib/src/xmc_i2s.c **** 
 118:../Libraries/XMCLib/src/xmc_i2s.c ****   if(config->bus_mode == XMC_I2S_CH_BUS_MODE_MASTER)
 205              	 .loc 3 118 0
 206 0054 3B68     	 ldr r3,[r7]
 207 0056 1B7A     	 ldrb r3,[r3,#8]
 208 0058 002B     	 cmp r3,#0
 209 005a 02D1     	 bne .L7
 119:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 120:../Libraries/XMCLib/src/xmc_i2s.c ****     /* Configuration of Protocol Control Register */
 121:../Libraries/XMCLib/src/xmc_i2s.c ****     channel->PCR_IISMode = (uint32_t)USIC_CH_PCR_IISMode_WAGEN_Msk;
 210              	 .loc 3 121 0
 211 005c 7B68     	 ldr r3,[r7,#4]
 212 005e 0122     	 mov r2,#1
 213 0060 DA63     	 str r2,[r3,#60]
 214              	.L7:
 122:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 123:../Libraries/XMCLib/src/xmc_i2s.c **** 
 124:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Configuration of Protocol Control Register */
 125:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->PCR_IISMode |= (uint32_t)(USIC_CH_PCR_IISMode_DTEN_Msk |
 215              	 .loc 3 125 0
 216 0062 7B68     	 ldr r3,[r7,#4]
 217 0064 DA6B     	 ldr r2,[r3,#60]
 126:../Libraries/XMCLib/src/xmc_i2s.c ****                           (uint32_t)config->wa_inversion) |
 218              	 .loc 3 126 0
 219 0066 3B68     	 ldr r3,[r7]
 220 0068 DB79     	 ldrb r3,[r3,#7]
 125:../Libraries/XMCLib/src/xmc_i2s.c ****                           (uint32_t)config->wa_inversion) |
 221              	 .loc 3 125 0
 222 006a 0221     	 mov r1,#2
 223 006c 0B43     	 orr r3,r1
 224 006e DBB2     	 uxtb r3,r3
 225 0070 191C     	 mov r1,r3
 127:../Libraries/XMCLib/src/xmc_i2s.c ****                           ((uint32_t)((uint32_t)config->data_delayed_sclk_periods - 1U) << USIC_CH_
 226              	 .loc 3 127 0
 227 0072 3B68     	 ldr r3,[r7]
 228 0074 9B79     	 ldrb r3,[r3,#6]
 229 0076 013B     	 sub r3,r3,#1
 230 0078 1B04     	 lsl r3,r3,#16
 126:../Libraries/XMCLib/src/xmc_i2s.c ****                           (uint32_t)config->wa_inversion) |
 231              	 .loc 3 126 0
 232 007a 0B43     	 orr r3,r1
 125:../Libraries/XMCLib/src/xmc_i2s.c ****                           (uint32_t)config->wa_inversion) |
 233              	 .loc 3 125 0
 234 007c 1A43     	 orr r2,r3
 235 007e 7B68     	 ldr r3,[r7,#4]
 236 0080 DA63     	 str r2,[r3,#60]
 128:../Libraries/XMCLib/src/xmc_i2s.c **** 
 129:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_I2S_CH_SetSystemWordLength(channel, config->frame_length);
 237              	 .loc 3 129 0
 238 0082 3B68     	 ldr r3,[r7]
 239 0084 5B79     	 ldrb r3,[r3,#5]
 240 0086 1A1C     	 mov r2,r3
 241 0088 7B68     	 ldr r3,[r7,#4]
 242 008a 181C     	 mov r0,r3
 243 008c 111C     	 mov r1,r2
 244 008e FFF7FEFF 	 bl XMC_I2S_CH_SetSystemWordLength
 130:../Libraries/XMCLib/src/xmc_i2s.c **** 
 131:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Clear protocol status */
 132:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->PSCR = 0xFFFFFFFFUL;
 245              	 .loc 3 132 0
 246 0092 7B68     	 ldr r3,[r7,#4]
 247 0094 0122     	 mov r2,#1
 248 0096 5242     	 neg r2,r2
 249 0098 DA64     	 str r2,[r3,#76]
 133:../Libraries/XMCLib/src/xmc_i2s.c **** }
 250              	 .loc 3 133 0
 251 009a BD46     	 mov sp,r7
 252 009c 02B0     	 add sp,sp,#8
 253              	 
 254 009e 80BD     	 pop {r7,pc}
 255              	.L9:
 256              	 .align 2
 257              	.L8:
 258 00a0 01030000 	 .word 769
 259 00a4 E0FAFFFF 	 .word -1312
 260              	 .cfi_endproc
 261              	.LFE130:
 263              	 .section .text.XMC_I2S_CH_SetBaudrate,"ax",%progbits
 264              	 .align 2
 265              	 .global XMC_I2S_CH_SetBaudrate
 266              	 .code 16
 267              	 .thumb_func
 269              	XMC_I2S_CH_SetBaudrate:
 270              	.LFB131:
 134:../Libraries/XMCLib/src/xmc_i2s.c **** 
 135:../Libraries/XMCLib/src/xmc_i2s.c **** 
 136:../Libraries/XMCLib/src/xmc_i2s.c **** XMC_I2S_CH_STATUS_t XMC_I2S_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate)
 137:../Libraries/XMCLib/src/xmc_i2s.c **** {
 271              	 .loc 3 137 0
 272              	 .cfi_startproc
 273 0000 80B5     	 push {r7,lr}
 274              	.LCFI12:
 275              	 .cfi_def_cfa_offset 8
 276              	 .cfi_offset 7,-8
 277              	 .cfi_offset 14,-4
 278 0002 84B0     	 sub sp,sp,#16
 279              	.LCFI13:
 280              	 .cfi_def_cfa_offset 24
 281 0004 00AF     	 add r7,sp,#0
 282              	.LCFI14:
 283              	 .cfi_def_cfa_register 7
 284 0006 7860     	 str r0,[r7,#4]
 285 0008 3960     	 str r1,[r7]
 138:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_I2S_CH_STATUS_t status;
 139:../Libraries/XMCLib/src/xmc_i2s.c **** 
 140:../Libraries/XMCLib/src/xmc_i2s.c ****   status = XMC_I2S_CH_STATUS_ERROR;
 286              	 .loc 3 140 0
 287 000a 0F23     	 mov r3,#15
 288 000c FB18     	 add r3,r7,r3
 289 000e 0122     	 mov r2,#1
 290 0010 1A70     	 strb r2,[r3]
 141:../Libraries/XMCLib/src/xmc_i2s.c **** 
 142:../Libraries/XMCLib/src/xmc_i2s.c ****   if (rate <= (XMC_SCU_CLOCK_GetPeripheralClockFrequency() >> 1U))
 291              	 .loc 3 142 0
 292 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 293 0016 031C     	 mov r3,r0
 294 0018 5A08     	 lsr r2,r3,#1
 295 001a 3B68     	 ldr r3,[r7]
 296 001c 9A42     	 cmp r2,r3
 297 001e 14D3     	 bcc .L11
 143:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 144:../Libraries/XMCLib/src/xmc_i2s.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, XMC_I2S_CH_OVERSAMPLING) == XMC_USIC_CH_STATUS_OK)
 298              	 .loc 3 144 0
 299 0020 7A68     	 ldr r2,[r7,#4]
 300 0022 3B68     	 ldr r3,[r7]
 301 0024 101C     	 mov r0,r2
 302 0026 191C     	 mov r1,r3
 303 0028 0422     	 mov r2,#4
 304 002a FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 305 002e 031E     	 sub r3,r0,#0
 306 0030 0BD1     	 bne .L11
 145:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 146:../Libraries/XMCLib/src/xmc_i2s.c ****       channel->BRG = (uint32_t)((channel->BRG & ~(USIC_CH_BRG_CTQSEL_Msk)) |
 307              	 .loc 3 146 0
 308 0032 7B68     	 ldr r3,[r7,#4]
 309 0034 5B69     	 ldr r3,[r3,#20]
 147:../Libraries/XMCLib/src/xmc_i2s.c ****                      (0x2UL << USIC_CH_BRG_CTQSEL_Pos)) |
 310              	 .loc 3 147 0
 311 0036 D022     	 mov r2,#208
 312 0038 9343     	 bic r3,r2
 313 003a 9022     	 mov r2,#144
 314 003c 1A43     	 orr r2,r3
 146:../Libraries/XMCLib/src/xmc_i2s.c ****                      (0x2UL << USIC_CH_BRG_CTQSEL_Pos)) |
 315              	 .loc 3 146 0
 316 003e 7B68     	 ldr r3,[r7,#4]
 317 0040 5A61     	 str r2,[r3,#20]
 148:../Libraries/XMCLib/src/xmc_i2s.c ****                      USIC_CH_BRG_PPPEN_Msk;
 149:../Libraries/XMCLib/src/xmc_i2s.c **** 
 150:../Libraries/XMCLib/src/xmc_i2s.c ****       status = XMC_I2S_CH_STATUS_OK;
 318              	 .loc 3 150 0
 319 0042 0F23     	 mov r3,#15
 320 0044 FB18     	 add r3,r7,r3
 321 0046 0022     	 mov r2,#0
 322 0048 1A70     	 strb r2,[r3]
 323              	.L11:
 151:../Libraries/XMCLib/src/xmc_i2s.c ****     }
 152:../Libraries/XMCLib/src/xmc_i2s.c **** 
 153:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 154:../Libraries/XMCLib/src/xmc_i2s.c ****   return status;
 324              	 .loc 3 154 0
 325 004a 0F23     	 mov r3,#15
 326 004c FB18     	 add r3,r7,r3
 327 004e 1B78     	 ldrb r3,[r3]
 155:../Libraries/XMCLib/src/xmc_i2s.c **** }
 328              	 .loc 3 155 0
 329 0050 181C     	 mov r0,r3
 330 0052 BD46     	 mov sp,r7
 331 0054 04B0     	 add sp,sp,#16
 332              	 
 333 0056 80BD     	 pop {r7,pc}
 334              	 .cfi_endproc
 335              	.LFE131:
 337              	 .section .text.XMC_I2S_CH_SetSystemWordLength,"ax",%progbits
 338              	 .align 2
 339              	 .global XMC_I2S_CH_SetSystemWordLength
 340              	 .code 16
 341              	 .thumb_func
 343              	XMC_I2S_CH_SetSystemWordLength:
 344              	.LFB132:
 156:../Libraries/XMCLib/src/xmc_i2s.c **** 
 157:../Libraries/XMCLib/src/xmc_i2s.c **** void XMC_I2S_CH_SetSystemWordLength(XMC_USIC_CH_t *const channel,uint32_t sclk_cycles_system_word_l
 158:../Libraries/XMCLib/src/xmc_i2s.c **** {
 345              	 .loc 3 158 0
 346              	 .cfi_startproc
 347 0000 80B5     	 push {r7,lr}
 348              	.LCFI15:
 349              	 .cfi_def_cfa_offset 8
 350              	 .cfi_offset 7,-8
 351              	 .cfi_offset 14,-4
 352 0002 86B0     	 sub sp,sp,#24
 353              	.LCFI16:
 354              	 .cfi_def_cfa_offset 32
 355 0004 00AF     	 add r7,sp,#0
 356              	.LCFI17:
 357              	 .cfi_def_cfa_register 7
 358 0006 7860     	 str r0,[r7,#4]
 359 0008 3960     	 str r1,[r7]
 159:../Libraries/XMCLib/src/xmc_i2s.c ****   uint32_t sclk_cycles_system_word_length_temp;
 160:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t dctq_temp;
 161:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t pctq_temp;
 162:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t dctq = 1U;
 360              	 .loc 3 162 0
 361 000a 1523     	 mov r3,#21
 362 000c FB18     	 add r3,r7,r3
 363 000e 0122     	 mov r2,#1
 364 0010 1A70     	 strb r2,[r3]
 163:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t pctq = 1U;
 365              	 .loc 3 163 0
 366 0012 1423     	 mov r3,#20
 367 0014 FB18     	 add r3,r7,r3
 368 0016 0122     	 mov r2,#1
 369 0018 1A70     	 strb r2,[r3]
 164:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t best_error = 64U;
 370              	 .loc 3 164 0
 371 001a 1323     	 mov r3,#19
 372 001c FB18     	 add r3,r7,r3
 373 001e 4022     	 mov r2,#64
 374 0020 1A70     	 strb r2,[r3]
 165:../Libraries/XMCLib/src/xmc_i2s.c ****   uint8_t error;
 166:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_ASSERT("XMC_I2S_CH_Init: data_delayed_sclk_periods value not valid",(sclk_cycles_system_word_
 167:../Libraries/XMCLib/src/xmc_i2s.c **** 
 168:../Libraries/XMCLib/src/xmc_i2s.c **** 
 169:../Libraries/XMCLib/src/xmc_i2s.c ****   for (dctq_temp =1U; dctq_temp < 33U ; dctq_temp++)
 375              	 .loc 3 169 0
 376 0022 1723     	 mov r3,#23
 377 0024 FB18     	 add r3,r7,r3
 378 0026 0122     	 mov r2,#1
 379 0028 1A70     	 strb r2,[r3]
 380 002a 5FE0     	 b .L14
 381              	.L22:
 170:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 171:../Libraries/XMCLib/src/xmc_i2s.c ****     for (pctq_temp =1U; pctq_temp < 5U ; pctq_temp++)
 382              	 .loc 3 171 0
 383 002c 1623     	 mov r3,#22
 384 002e FB18     	 add r3,r7,r3
 385 0030 0122     	 mov r2,#1
 386 0032 1A70     	 strb r2,[r3]
 387 0034 4EE0     	 b .L15
 388              	.L21:
 172:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 173:../Libraries/XMCLib/src/xmc_i2s.c ****       sclk_cycles_system_word_length_temp = ((uint32_t)dctq_temp) * ((uint32_t)pctq_temp);
 389              	 .loc 3 173 0
 390 0036 1723     	 mov r3,#23
 391 0038 FB18     	 add r3,r7,r3
 392 003a 1B78     	 ldrb r3,[r3]
 393 003c 1622     	 mov r2,#22
 394 003e BA18     	 add r2,r7,r2
 395 0040 1278     	 ldrb r2,[r2]
 396 0042 5343     	 mul r3,r2
 397 0044 FB60     	 str r3,[r7,#12]
 174:../Libraries/XMCLib/src/xmc_i2s.c ****       if(sclk_cycles_system_word_length_temp == sclk_cycles_system_word_length)
 398              	 .loc 3 174 0
 399 0046 FA68     	 ldr r2,[r7,#12]
 400 0048 3B68     	 ldr r3,[r7]
 401 004a 9A42     	 cmp r2,r3
 402 004c 0CD1     	 bne .L16
 175:../Libraries/XMCLib/src/xmc_i2s.c ****       {
 176:../Libraries/XMCLib/src/xmc_i2s.c ****         dctq = dctq_temp;
 403              	 .loc 3 176 0
 404 004e 1523     	 mov r3,#21
 405 0050 FB18     	 add r3,r7,r3
 406 0052 1722     	 mov r2,#23
 407 0054 BA18     	 add r2,r7,r2
 408 0056 1278     	 ldrb r2,[r2]
 409 0058 1A70     	 strb r2,[r3]
 177:../Libraries/XMCLib/src/xmc_i2s.c ****         pctq = pctq_temp;
 410              	 .loc 3 177 0
 411 005a 1423     	 mov r3,#20
 412 005c FB18     	 add r3,r7,r3
 413 005e 1622     	 mov r2,#22
 414 0060 BA18     	 add r2,r7,r2
 415 0062 1278     	 ldrb r2,[r2]
 416 0064 1A70     	 strb r2,[r3]
 178:../Libraries/XMCLib/src/xmc_i2s.c ****         break;
 417              	 .loc 3 178 0
 418 0066 3AE0     	 b .L17
 419              	.L16:
 179:../Libraries/XMCLib/src/xmc_i2s.c ****       }
 180:../Libraries/XMCLib/src/xmc_i2s.c ****       if (sclk_cycles_system_word_length_temp > sclk_cycles_system_word_length)
 420              	 .loc 3 180 0
 421 0068 FA68     	 ldr r2,[r7,#12]
 422 006a 3B68     	 ldr r3,[r7]
 423 006c 9A42     	 cmp r2,r3
 424 006e 08D9     	 bls .L18
 181:../Libraries/XMCLib/src/xmc_i2s.c ****       {
 182:../Libraries/XMCLib/src/xmc_i2s.c ****         error = (uint8_t)(sclk_cycles_system_word_length_temp  - sclk_cycles_system_word_length);
 425              	 .loc 3 182 0
 426 0070 FB68     	 ldr r3,[r7,#12]
 427 0072 D9B2     	 uxtb r1,r3
 428 0074 3B68     	 ldr r3,[r7]
 429 0076 DAB2     	 uxtb r2,r3
 430 0078 1223     	 mov r3,#18
 431 007a FB18     	 add r3,r7,r3
 432 007c 8A1A     	 sub r2,r1,r2
 433 007e 1A70     	 strb r2,[r3]
 434 0080 07E0     	 b .L19
 435              	.L18:
 183:../Libraries/XMCLib/src/xmc_i2s.c ****       }
 184:../Libraries/XMCLib/src/xmc_i2s.c ****       else
 185:../Libraries/XMCLib/src/xmc_i2s.c ****       {
 186:../Libraries/XMCLib/src/xmc_i2s.c ****         error = (uint8_t)(sclk_cycles_system_word_length - sclk_cycles_system_word_length_temp);
 436              	 .loc 3 186 0
 437 0082 3B68     	 ldr r3,[r7]
 438 0084 D9B2     	 uxtb r1,r3
 439 0086 FB68     	 ldr r3,[r7,#12]
 440 0088 DAB2     	 uxtb r2,r3
 441 008a 1223     	 mov r3,#18
 442 008c FB18     	 add r3,r7,r3
 443 008e 8A1A     	 sub r2,r1,r2
 444 0090 1A70     	 strb r2,[r3]
 445              	.L19:
 187:../Libraries/XMCLib/src/xmc_i2s.c ****       }
 188:../Libraries/XMCLib/src/xmc_i2s.c **** 
 189:../Libraries/XMCLib/src/xmc_i2s.c ****       if(error < best_error)
 446              	 .loc 3 189 0
 447 0092 1223     	 mov r3,#18
 448 0094 FA18     	 add r2,r7,r3
 449 0096 1323     	 mov r3,#19
 450 0098 FB18     	 add r3,r7,r3
 451 009a 1278     	 ldrb r2,[r2]
 452 009c 1B78     	 ldrb r3,[r3]
 453 009e 9A42     	 cmp r2,r3
 454 00a0 11D2     	 bcs .L20
 190:../Libraries/XMCLib/src/xmc_i2s.c ****       {
 191:../Libraries/XMCLib/src/xmc_i2s.c ****          best_error = error;
 455              	 .loc 3 191 0
 456 00a2 1323     	 mov r3,#19
 457 00a4 FB18     	 add r3,r7,r3
 458 00a6 1222     	 mov r2,#18
 459 00a8 BA18     	 add r2,r7,r2
 460 00aa 1278     	 ldrb r2,[r2]
 461 00ac 1A70     	 strb r2,[r3]
 192:../Libraries/XMCLib/src/xmc_i2s.c ****          dctq =  dctq_temp;
 462              	 .loc 3 192 0
 463 00ae 1523     	 mov r3,#21
 464 00b0 FB18     	 add r3,r7,r3
 465 00b2 1722     	 mov r2,#23
 466 00b4 BA18     	 add r2,r7,r2
 467 00b6 1278     	 ldrb r2,[r2]
 468 00b8 1A70     	 strb r2,[r3]
 193:../Libraries/XMCLib/src/xmc_i2s.c ****          pctq = pctq_temp;
 469              	 .loc 3 193 0
 470 00ba 1423     	 mov r3,#20
 471 00bc FB18     	 add r3,r7,r3
 472 00be 1622     	 mov r2,#22
 473 00c0 BA18     	 add r2,r7,r2
 474 00c2 1278     	 ldrb r2,[r2]
 475 00c4 1A70     	 strb r2,[r3]
 476              	.L20:
 171:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 477              	 .loc 3 171 0 discriminator 2
 478 00c6 1623     	 mov r3,#22
 479 00c8 FB18     	 add r3,r7,r3
 480 00ca 1A78     	 ldrb r2,[r3]
 481 00cc 1623     	 mov r3,#22
 482 00ce FB18     	 add r3,r7,r3
 483 00d0 0132     	 add r2,r2,#1
 484 00d2 1A70     	 strb r2,[r3]
 485              	.L15:
 171:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 486              	 .loc 3 171 0 is_stmt 0 discriminator 1
 487 00d4 1623     	 mov r3,#22
 488 00d6 FB18     	 add r3,r7,r3
 489 00d8 1B78     	 ldrb r3,[r3]
 490 00da 042B     	 cmp r3,#4
 491 00dc ABD9     	 bls .L21
 492              	.L17:
 169:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 493              	 .loc 3 169 0 is_stmt 1 discriminator 2
 494 00de 1723     	 mov r3,#23
 495 00e0 FB18     	 add r3,r7,r3
 496 00e2 1A78     	 ldrb r2,[r3]
 497 00e4 1723     	 mov r3,#23
 498 00e6 FB18     	 add r3,r7,r3
 499 00e8 0132     	 add r2,r2,#1
 500 00ea 1A70     	 strb r2,[r3]
 501              	.L14:
 169:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 502              	 .loc 3 169 0 is_stmt 0 discriminator 1
 503 00ec 1723     	 mov r3,#23
 504 00ee FB18     	 add r3,r7,r3
 505 00f0 1B78     	 ldrb r3,[r3]
 506 00f2 202B     	 cmp r3,#32
 507 00f4 9AD9     	 bls .L22
 194:../Libraries/XMCLib/src/xmc_i2s.c ****       }
 195:../Libraries/XMCLib/src/xmc_i2s.c ****     }
 196:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 197:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->BRG = (uint32_t)((channel->BRG & ~((uint32_t)(USIC_CH_BRG_DCTQ_Msk | 
 508              	 .loc 3 197 0 is_stmt 1
 509 00f6 7B68     	 ldr r3,[r7,#4]
 510 00f8 5B69     	 ldr r3,[r3,#20]
 511 00fa 094A     	 ldr r2,.L23
 512 00fc 1A40     	 and r2,r3
 198:../Libraries/XMCLib/src/xmc_i2s.c ****                                                          USIC_CH_BRG_PCTQ_Msk))) |
 199:../Libraries/XMCLib/src/xmc_i2s.c ****                  (uint32_t)((uint32_t)((uint32_t)((uint32_t)dctq- 1U) << USIC_CH_BRG_DCTQ_Pos) |
 513              	 .loc 3 199 0
 514 00fe 1523     	 mov r3,#21
 515 0100 FB18     	 add r3,r7,r3
 516 0102 1B78     	 ldrb r3,[r3]
 517 0104 013B     	 sub r3,r3,#1
 518 0106 9902     	 lsl r1,r3,#10
 200:../Libraries/XMCLib/src/xmc_i2s.c ****                             (uint32_t)((uint32_t)((uint32_t)pctq- 1U) << USIC_CH_BRG_PCTQ_Pos)));
 519              	 .loc 3 200 0
 520 0108 1423     	 mov r3,#20
 521 010a FB18     	 add r3,r7,r3
 522 010c 1B78     	 ldrb r3,[r3]
 523 010e 013B     	 sub r3,r3,#1
 524 0110 1B02     	 lsl r3,r3,#8
 199:../Libraries/XMCLib/src/xmc_i2s.c ****                             (uint32_t)((uint32_t)((uint32_t)pctq- 1U) << USIC_CH_BRG_PCTQ_Pos)));
 525              	 .loc 3 199 0
 526 0112 0B43     	 orr r3,r1
 197:../Libraries/XMCLib/src/xmc_i2s.c ****                                                          USIC_CH_BRG_PCTQ_Msk))) |
 527              	 .loc 3 197 0
 528 0114 1A43     	 orr r2,r3
 529 0116 7B68     	 ldr r3,[r7,#4]
 530 0118 5A61     	 str r2,[r3,#20]
 201:../Libraries/XMCLib/src/xmc_i2s.c **** }
 531              	 .loc 3 201 0
 532 011a BD46     	 mov sp,r7
 533 011c 06B0     	 add sp,sp,#24
 534              	 
 535 011e 80BD     	 pop {r7,pc}
 536              	.L24:
 537              	 .align 2
 538              	.L23:
 539 0120 FF80FFFF 	 .word -32513
 540              	 .cfi_endproc
 541              	.LFE132:
 543              	 .section .text.XMC_I2S_CH_Transmit,"ax",%progbits
 544              	 .align 2
 545              	 .global XMC_I2S_CH_Transmit
 546              	 .code 16
 547              	 .thumb_func
 549              	XMC_I2S_CH_Transmit:
 550              	.LFB133:
 202:../Libraries/XMCLib/src/xmc_i2s.c **** 
 203:../Libraries/XMCLib/src/xmc_i2s.c **** /* Puts the data into FIFO if FIFO mode is enabled or else into standard buffers, by setting the pr
 204:../Libraries/XMCLib/src/xmc_i2s.c **** void XMC_I2S_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_I2S_CH_CHANNE
 205:../Libraries/XMCLib/src/xmc_i2s.c **** {
 551              	 .loc 3 205 0
 552              	 .cfi_startproc
 553 0000 80B5     	 push {r7,lr}
 554              	.LCFI18:
 555              	 .cfi_def_cfa_offset 8
 556              	 .cfi_offset 7,-8
 557              	 .cfi_offset 14,-4
 558 0002 82B0     	 sub sp,sp,#8
 559              	.LCFI19:
 560              	 .cfi_def_cfa_offset 16
 561 0004 00AF     	 add r7,sp,#0
 562              	.LCFI20:
 563              	 .cfi_def_cfa_register 7
 564 0006 7860     	 str r0,[r7,#4]
 565 0008 081C     	 mov r0,r1
 566 000a 111C     	 mov r1,r2
 567 000c BB1C     	 add r3,r7,#2
 568 000e 021C     	 add r2,r0,#0
 569 0010 1A80     	 strh r2,[r3]
 570 0012 7B1C     	 add r3,r7,#1
 571 0014 0A1C     	 add r2,r1,#0
 572 0016 1A70     	 strb r2,[r3]
 206:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Check FIFO size */
 207:../Libraries/XMCLib/src/xmc_i2s.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 573              	 .loc 3 207 0
 574 0018 7A68     	 ldr r2,[r7,#4]
 575 001a 8423     	 mov r3,#132
 576 001c 5B00     	 lsl r3,r3,#1
 577 001e D258     	 ldr r2,[r2,r3]
 578 0020 E023     	 mov r3,#224
 579 0022 DB04     	 lsl r3,r3,#19
 580 0024 1340     	 and r3,r2
 581 0026 18D1     	 bne .L26
 208:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 209:../Libraries/XMCLib/src/xmc_i2s.c ****     while((uint32_t)XMC_USIC_CH_GetTransmitBufferStatus(channel) == (uint32_t)XMC_USIC_CH_TBUF_STAT
 582              	 .loc 3 209 0
 583 0028 C046     	 mov r8,r8
 584              	.L27:
 585              	 .loc 3 209 0 is_stmt 0 discriminator 1
 586 002a 7B68     	 ldr r3,[r7,#4]
 587 002c 181C     	 mov r0,r3
 588 002e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 589 0032 031E     	 sub r3,r0,#0
 590 0034 802B     	 cmp r3,#128
 591 0036 F8D0     	 beq .L27
 210:../Libraries/XMCLib/src/xmc_i2s.c ****     {
 211:../Libraries/XMCLib/src/xmc_i2s.c ****     }
 212:../Libraries/XMCLib/src/xmc_i2s.c **** 
 213:../Libraries/XMCLib/src/xmc_i2s.c ****     XMC_I2S_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2S_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 592              	 .loc 3 213 0 is_stmt 1
 593 0038 7A68     	 ldr r2,[r7,#4]
 594 003a 8023     	 mov r3,#128
 595 003c 9B01     	 lsl r3,r3,#6
 596 003e 101C     	 mov r0,r2
 597 0040 191C     	 mov r1,r3
 598 0042 FFF7FEFF 	 bl XMC_I2S_CH_ClearStatusFlag
 214:../Libraries/XMCLib/src/xmc_i2s.c **** 
 215:../Libraries/XMCLib/src/xmc_i2s.c ****     channel->TBUF[(uint32_t)channel_number << 4] = data;
 599              	 .loc 3 215 0
 600 0046 7B1C     	 add r3,r7,#1
 601 0048 1B78     	 ldrb r3,[r3]
 602 004a 1A01     	 lsl r2,r3,#4
 603 004c BB1C     	 add r3,r7,#2
 604 004e 1988     	 ldrh r1,[r3]
 605 0050 7B68     	 ldr r3,[r7,#4]
 606 0052 2032     	 add r2,r2,#32
 607 0054 9200     	 lsl r2,r2,#2
 608 0056 D150     	 str r1,[r2,r3]
 609 0058 08E0     	 b .L25
 610              	.L26:
 216:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 217:../Libraries/XMCLib/src/xmc_i2s.c ****   else
 218:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 219:../Libraries/XMCLib/src/xmc_i2s.c ****     channel->IN[(uint32_t)channel_number << 4] = data;
 611              	 .loc 3 219 0
 612 005a 7B1C     	 add r3,r7,#1
 613 005c 1B78     	 ldrb r3,[r3]
 614 005e 1A01     	 lsl r2,r3,#4
 615 0060 BB1C     	 add r3,r7,#2
 616 0062 1988     	 ldrh r1,[r3]
 617 0064 7B68     	 ldr r3,[r7,#4]
 618 0066 6032     	 add r2,r2,#96
 619 0068 9200     	 lsl r2,r2,#2
 620 006a D150     	 str r1,[r2,r3]
 621              	.L25:
 220:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 221:../Libraries/XMCLib/src/xmc_i2s.c **** }
 622              	 .loc 3 221 0
 623 006c BD46     	 mov sp,r7
 624 006e 02B0     	 add sp,sp,#8
 625              	 
 626 0070 80BD     	 pop {r7,pc}
 627              	 .cfi_endproc
 628              	.LFE133:
 630 0072 C046     	 .section .text.XMC_I2S_CH_GetReceivedData,"ax",%progbits
 631              	 .align 2
 632              	 .global XMC_I2S_CH_GetReceivedData
 633              	 .code 16
 634              	 .thumb_func
 636              	XMC_I2S_CH_GetReceivedData:
 637              	.LFB134:
 222:../Libraries/XMCLib/src/xmc_i2s.c **** 
 223:../Libraries/XMCLib/src/xmc_i2s.c **** /* Reads the data from the buffers based on the FIFO mode selection. */
 224:../Libraries/XMCLib/src/xmc_i2s.c **** uint16_t XMC_I2S_CH_GetReceivedData(XMC_USIC_CH_t *const channel)
 225:../Libraries/XMCLib/src/xmc_i2s.c **** {
 638              	 .loc 3 225 0
 639              	 .cfi_startproc
 640 0000 80B5     	 push {r7,lr}
 641              	.LCFI21:
 642              	 .cfi_def_cfa_offset 8
 643              	 .cfi_offset 7,-8
 644              	 .cfi_offset 14,-4
 645 0002 84B0     	 sub sp,sp,#16
 646              	.LCFI22:
 647              	 .cfi_def_cfa_offset 24
 648 0004 00AF     	 add r7,sp,#0
 649              	.LCFI23:
 650              	 .cfi_def_cfa_register 7
 651 0006 7860     	 str r0,[r7,#4]
 226:../Libraries/XMCLib/src/xmc_i2s.c ****   uint16_t retval;
 227:../Libraries/XMCLib/src/xmc_i2s.c **** 
 228:../Libraries/XMCLib/src/xmc_i2s.c ****   /* Check FIFO size */
 229:../Libraries/XMCLib/src/xmc_i2s.c ****   if ((channel->RBCTR & USIC_CH_RBCTR_SIZE_Msk) == 0U)
 652              	 .loc 3 229 0
 653 0008 7A68     	 ldr r2,[r7,#4]
 654 000a 8623     	 mov r3,#134
 655 000c 5B00     	 lsl r3,r3,#1
 656 000e D258     	 ldr r2,[r2,r3]
 657 0010 E023     	 mov r3,#224
 658 0012 DB04     	 lsl r3,r3,#19
 659 0014 1340     	 and r3,r2
 660 0016 05D1     	 bne .L30
 230:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 231:../Libraries/XMCLib/src/xmc_i2s.c ****     retval = (uint16_t)channel->RBUF;
 661              	 .loc 3 231 0
 662 0018 7B68     	 ldr r3,[r7,#4]
 663 001a 5A6D     	 ldr r2,[r3,#84]
 664 001c 0E23     	 mov r3,#14
 665 001e FB18     	 add r3,r7,r3
 666 0020 1A80     	 strh r2,[r3]
 667 0022 06E0     	 b .L31
 668              	.L30:
 232:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 233:../Libraries/XMCLib/src/xmc_i2s.c ****   else
 234:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 235:../Libraries/XMCLib/src/xmc_i2s.c ****     retval = (uint16_t)channel->OUTR;
 669              	 .loc 3 235 0
 670 0024 7A68     	 ldr r2,[r7,#4]
 671 0026 8E23     	 mov r3,#142
 672 0028 5B00     	 lsl r3,r3,#1
 673 002a D258     	 ldr r2,[r2,r3]
 674 002c 0E23     	 mov r3,#14
 675 002e FB18     	 add r3,r7,r3
 676 0030 1A80     	 strh r2,[r3]
 677              	.L31:
 236:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 237:../Libraries/XMCLib/src/xmc_i2s.c **** 
 238:../Libraries/XMCLib/src/xmc_i2s.c ****   return retval;
 678              	 .loc 3 238 0
 679 0032 0E23     	 mov r3,#14
 680 0034 FB18     	 add r3,r7,r3
 681 0036 1B88     	 ldrh r3,[r3]
 239:../Libraries/XMCLib/src/xmc_i2s.c **** }
 682              	 .loc 3 239 0
 683 0038 181C     	 mov r0,r3
 684 003a BD46     	 mov sp,r7
 685 003c 04B0     	 add sp,sp,#16
 686              	 
 687 003e 80BD     	 pop {r7,pc}
 688              	 .cfi_endproc
 689              	.LFE134:
 691              	 .section .text.XMC_I2S_CH_Stop,"ax",%progbits
 692              	 .align 2
 693              	 .global XMC_I2S_CH_Stop
 694              	 .code 16
 695              	 .thumb_func
 697              	XMC_I2S_CH_Stop:
 698              	.LFB135:
 240:../Libraries/XMCLib/src/xmc_i2s.c **** 
 241:../Libraries/XMCLib/src/xmc_i2s.c **** XMC_I2S_CH_STATUS_t XMC_I2S_CH_Stop(XMC_USIC_CH_t *const channel)
 242:../Libraries/XMCLib/src/xmc_i2s.c **** {
 699              	 .loc 3 242 0
 700              	 .cfi_startproc
 701 0000 80B5     	 push {r7,lr}
 702              	.LCFI24:
 703              	 .cfi_def_cfa_offset 8
 704              	 .cfi_offset 7,-8
 705              	 .cfi_offset 14,-4
 706 0002 84B0     	 sub sp,sp,#16
 707              	.LCFI25:
 708              	 .cfi_def_cfa_offset 24
 709 0004 00AF     	 add r7,sp,#0
 710              	.LCFI26:
 711              	 .cfi_def_cfa_register 7
 712 0006 7860     	 str r0,[r7,#4]
 243:../Libraries/XMCLib/src/xmc_i2s.c ****   XMC_I2S_CH_STATUS_t status = XMC_I2S_CH_STATUS_OK;
 713              	 .loc 3 243 0
 714 0008 0F23     	 mov r3,#15
 715 000a FB18     	 add r3,r7,r3
 716 000c 0022     	 mov r2,#0
 717 000e 1A70     	 strb r2,[r3]
 244:../Libraries/XMCLib/src/xmc_i2s.c **** 
 245:../Libraries/XMCLib/src/xmc_i2s.c ****   if (((uint32_t)XMC_USIC_CH_GetTransmitBufferStatus(channel) & (uint32_t)XMC_USIC_CH_TBUF_STATUS_B
 718              	 .loc 3 245 0
 719 0010 7B68     	 ldr r3,[r7,#4]
 720 0012 181C     	 mov r0,r3
 721 0014 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 722 0018 031C     	 mov r3,r0
 723 001a DBB2     	 uxtb r3,r3
 724 001c 5BB2     	 sxtb r3,r3
 725 001e 002B     	 cmp r3,#0
 726 0020 04DA     	 bge .L34
 246:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 247:../Libraries/XMCLib/src/xmc_i2s.c ****     status = XMC_I2S_CH_STATUS_BUSY;
 727              	 .loc 3 247 0
 728 0022 0F23     	 mov r3,#15
 729 0024 FB18     	 add r3,r7,r3
 730 0026 0222     	 mov r2,#2
 731 0028 1A70     	 strb r2,[r3]
 732 002a 04E0     	 b .L35
 733              	.L34:
 248:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 249:../Libraries/XMCLib/src/xmc_i2s.c ****   else
 250:../Libraries/XMCLib/src/xmc_i2s.c ****   {
 251:../Libraries/XMCLib/src/xmc_i2s.c ****     /* USIC channel in IDLE mode */
 252:../Libraries/XMCLib/src/xmc_i2s.c ****     XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_IDLE);
 734              	 .loc 3 252 0
 735 002c 7B68     	 ldr r3,[r7,#4]
 736 002e 181C     	 mov r0,r3
 737 0030 0021     	 mov r1,#0
 738 0032 FFF7FEFF 	 bl XMC_USIC_CH_SetMode
 739              	.L35:
 253:../Libraries/XMCLib/src/xmc_i2s.c ****   }
 254:../Libraries/XMCLib/src/xmc_i2s.c **** 
 255:../Libraries/XMCLib/src/xmc_i2s.c ****   return status;
 740              	 .loc 3 255 0
 741 0036 0F23     	 mov r3,#15
 742 0038 FB18     	 add r3,r7,r3
 743 003a 1B78     	 ldrb r3,[r3]
 256:../Libraries/XMCLib/src/xmc_i2s.c **** }
 744              	 .loc 3 256 0
 745 003c 181C     	 mov r0,r3
 746 003e BD46     	 mov sp,r7
 747 0040 04B0     	 add sp,sp,#16
 748              	 
 749 0042 80BD     	 pop {r7,pc}
 750              	 .cfi_endproc
 751              	.LFE135:
 753              	 .section .text.XMC_I2S_CH_EnableEvent,"ax",%progbits
 754              	 .align 2
 755              	 .global XMC_I2S_CH_EnableEvent
 756              	 .code 16
 757              	 .thumb_func
 759              	XMC_I2S_CH_EnableEvent:
 760              	.LFB136:
 257:../Libraries/XMCLib/src/xmc_i2s.c **** 
 258:../Libraries/XMCLib/src/xmc_i2s.c **** void XMC_I2S_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 259:../Libraries/XMCLib/src/xmc_i2s.c **** {
 761              	 .loc 3 259 0
 762              	 .cfi_startproc
 763 0000 80B5     	 push {r7,lr}
 764              	.LCFI27:
 765              	 .cfi_def_cfa_offset 8
 766              	 .cfi_offset 7,-8
 767              	 .cfi_offset 14,-4
 768 0002 82B0     	 sub sp,sp,#8
 769              	.LCFI28:
 770              	 .cfi_def_cfa_offset 16
 771 0004 00AF     	 add r7,sp,#0
 772              	.LCFI29:
 773              	 .cfi_def_cfa_register 7
 774 0006 7860     	 str r0,[r7,#4]
 775 0008 3960     	 str r1,[r7]
 260:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->CCR |= (event&0x1fc00U);
 776              	 .loc 3 260 0
 777 000a 7B68     	 ldr r3,[r7,#4]
 778 000c 1A6C     	 ldr r2,[r3,#64]
 779 000e 3968     	 ldr r1,[r7]
 780 0010 FE23     	 mov r3,#254
 781 0012 5B02     	 lsl r3,r3,#9
 782 0014 0B40     	 and r3,r1
 783 0016 1A43     	 orr r2,r3
 784 0018 7B68     	 ldr r3,[r7,#4]
 785 001a 1A64     	 str r2,[r3,#64]
 261:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->PCR_IISMode |= ((event >> 2U) & 0x8070U);
 786              	 .loc 3 261 0
 787 001c 7B68     	 ldr r3,[r7,#4]
 788 001e DA6B     	 ldr r2,[r3,#60]
 789 0020 3B68     	 ldr r3,[r7]
 790 0022 9B08     	 lsr r3,r3,#2
 791 0024 0349     	 ldr r1,.L38
 792 0026 0B40     	 and r3,r1
 793 0028 1A43     	 orr r2,r3
 794 002a 7B68     	 ldr r3,[r7,#4]
 795 002c DA63     	 str r2,[r3,#60]
 262:../Libraries/XMCLib/src/xmc_i2s.c **** }
 796              	 .loc 3 262 0
 797 002e BD46     	 mov sp,r7
 798 0030 02B0     	 add sp,sp,#8
 799              	 
 800 0032 80BD     	 pop {r7,pc}
 801              	.L39:
 802              	 .align 2
 803              	.L38:
 804 0034 70800000 	 .word 32880
 805              	 .cfi_endproc
 806              	.LFE136:
 808              	 .section .text.XMC_I2S_CH_DisableEvent,"ax",%progbits
 809              	 .align 2
 810              	 .global XMC_I2S_CH_DisableEvent
 811              	 .code 16
 812              	 .thumb_func
 814              	XMC_I2S_CH_DisableEvent:
 815              	.LFB137:
 263:../Libraries/XMCLib/src/xmc_i2s.c **** 
 264:../Libraries/XMCLib/src/xmc_i2s.c **** void XMC_I2S_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 265:../Libraries/XMCLib/src/xmc_i2s.c **** {
 816              	 .loc 3 265 0
 817              	 .cfi_startproc
 818 0000 80B5     	 push {r7,lr}
 819              	.LCFI30:
 820              	 .cfi_def_cfa_offset 8
 821              	 .cfi_offset 7,-8
 822              	 .cfi_offset 14,-4
 823 0002 82B0     	 sub sp,sp,#8
 824              	.LCFI31:
 825              	 .cfi_def_cfa_offset 16
 826 0004 00AF     	 add r7,sp,#0
 827              	.LCFI32:
 828              	 .cfi_def_cfa_register 7
 829 0006 7860     	 str r0,[r7,#4]
 830 0008 3960     	 str r1,[r7]
 266:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->CCR &= (uint32_t)~(event&0x1fc00U);
 831              	 .loc 3 266 0
 832 000a 7B68     	 ldr r3,[r7,#4]
 833 000c 1B6C     	 ldr r3,[r3,#64]
 834 000e 3968     	 ldr r1,[r7]
 835 0010 FE22     	 mov r2,#254
 836 0012 5202     	 lsl r2,r2,#9
 837 0014 0A40     	 and r2,r1
 838 0016 D243     	 mvn r2,r2
 839 0018 1A40     	 and r2,r3
 840 001a 7B68     	 ldr r3,[r7,#4]
 841 001c 1A64     	 str r2,[r3,#64]
 267:../Libraries/XMCLib/src/xmc_i2s.c ****   channel->PCR_IISMode &= (uint32_t)~((event >> 2U) & 0x8070U);
 842              	 .loc 3 267 0
 843 001e 7B68     	 ldr r3,[r7,#4]
 844 0020 DB6B     	 ldr r3,[r3,#60]
 845 0022 3A68     	 ldr r2,[r7]
 846 0024 9208     	 lsr r2,r2,#2
 847 0026 0449     	 ldr r1,.L41
 848 0028 0A40     	 and r2,r1
 849 002a D243     	 mvn r2,r2
 850 002c 1A40     	 and r2,r3
 851 002e 7B68     	 ldr r3,[r7,#4]
 852 0030 DA63     	 str r2,[r3,#60]
 268:../Libraries/XMCLib/src/xmc_i2s.c **** }
 853              	 .loc 3 268 0
 854 0032 BD46     	 mov sp,r7
 855 0034 02B0     	 add sp,sp,#8
 856              	 
 857 0036 80BD     	 pop {r7,pc}
 858              	.L42:
 859              	 .align 2
 860              	.L41:
 861 0038 70800000 	 .word 32880
 862              	 .cfi_endproc
 863              	.LFE137:
 865              	 .text
 866              	.Letext0:
 867              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 868              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 869              	 .file 6 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/CMSIS/Infineon/XMC1100_series/Include/system_XMC1100.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_i2s.c
    {standard input}:18     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:22     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:56     .text.XMC_USIC_CH_SetMode:00000000 $t
    {standard input}:60     .text.XMC_USIC_CH_SetMode:00000000 XMC_USIC_CH_SetMode
    {standard input}:99     .text.XMC_I2S_CH_ClearStatusFlag:00000000 $t
    {standard input}:103    .text.XMC_I2S_CH_ClearStatusFlag:00000000 XMC_I2S_CH_ClearStatusFlag
    {standard input}:137    .text.XMC_I2S_CH_Init:00000000 $t
    {standard input}:142    .text.XMC_I2S_CH_Init:00000000 XMC_I2S_CH_Init
    {standard input}:269    .text.XMC_I2S_CH_SetBaudrate:00000000 XMC_I2S_CH_SetBaudrate
    {standard input}:343    .text.XMC_I2S_CH_SetSystemWordLength:00000000 XMC_I2S_CH_SetSystemWordLength
    {standard input}:258    .text.XMC_I2S_CH_Init:000000a0 $d
    {standard input}:264    .text.XMC_I2S_CH_SetBaudrate:00000000 $t
    {standard input}:338    .text.XMC_I2S_CH_SetSystemWordLength:00000000 $t
    {standard input}:539    .text.XMC_I2S_CH_SetSystemWordLength:00000120 $d
    {standard input}:544    .text.XMC_I2S_CH_Transmit:00000000 $t
    {standard input}:549    .text.XMC_I2S_CH_Transmit:00000000 XMC_I2S_CH_Transmit
    {standard input}:631    .text.XMC_I2S_CH_GetReceivedData:00000000 $t
    {standard input}:636    .text.XMC_I2S_CH_GetReceivedData:00000000 XMC_I2S_CH_GetReceivedData
    {standard input}:692    .text.XMC_I2S_CH_Stop:00000000 $t
    {standard input}:697    .text.XMC_I2S_CH_Stop:00000000 XMC_I2S_CH_Stop
    {standard input}:754    .text.XMC_I2S_CH_EnableEvent:00000000 $t
    {standard input}:759    .text.XMC_I2S_CH_EnableEvent:00000000 XMC_I2S_CH_EnableEvent
    {standard input}:804    .text.XMC_I2S_CH_EnableEvent:00000034 $d
    {standard input}:809    .text.XMC_I2S_CH_DisableEvent:00000000 $t
    {standard input}:814    .text.XMC_I2S_CH_DisableEvent:00000000 XMC_I2S_CH_DisableEvent
    {standard input}:861    .text.XMC_I2S_CH_DisableEvent:00000038 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_Enable
XMC_SCU_CLOCK_GetPeripheralClockFrequency
XMC_USIC_CH_SetBaudrate
