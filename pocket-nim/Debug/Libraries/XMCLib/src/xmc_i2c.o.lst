   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_i2c.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_USIC_CH_GetTransmitBufferStatus:
  23              	.LFB61:
  24              	 .file 1 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2016-04-10
   4:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   *************************************************************************************************
   7:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  77:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
  79:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
  80:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  81:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  82:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  83:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  84:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  85:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
  86:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
  87:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
  88:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
  89:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
  90:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
  91:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
  92:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
  93:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
  94:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
  95:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
  96:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
  98:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
  99:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 100:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 101:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 102:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 103:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 104:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 105:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 106:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 107:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 108:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 109:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 110:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 111:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 112:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 113:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 114:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 115:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 116:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 117:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 119:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 122:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 123:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 124:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 125:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 126:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 127:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 128:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 129:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 130:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 131:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 132:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 133:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 134:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 135:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 136:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 137:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 138:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 139:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 140:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 141:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 142:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 143:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 144:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 145:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 146:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 147:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 148:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 149:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 150:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 151:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 152:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 154:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 155:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 156:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 157:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 158:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 159:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 160:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 161:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 162:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 163:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 164:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 165:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 166:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 167:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 168:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 169:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 170:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 171:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 172:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 173:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 174:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 175:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 176:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 177:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 178:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 179:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 180:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 181:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 182:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 183:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 184:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 185:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 186:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 187:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 188:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 189:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 190:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 191:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 192:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 193:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 194:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 195:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 196:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 197:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 198:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 199:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 200:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 201:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 202:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 203:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 204:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 205:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 206:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 207:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 208:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 209:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 210:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 211:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 212:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 213:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 214:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 215:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 216:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 217:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 218:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 219:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 220:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 221:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 222:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 223:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 224:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 225:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 226:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 227:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 228:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 229:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 230:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 231:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 232:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 233:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 234:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 235:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 236:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 237:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 238:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 239:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 240:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 241:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 242:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 243:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 244:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 245:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 246:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 247:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 248:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 249:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 250:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 251:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 252:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 253:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 254:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 255:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 256:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 257:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 258:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 259:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 260:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 261:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 262:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 263:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 264:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 265:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 266:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 267:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 268:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 269:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 270:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 271:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 272:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 273:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 274:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 275:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 276:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 277:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 278:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 279:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 280:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 281:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 282:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 283:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 284:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 285:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 286:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 287:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 288:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 289:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 290:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 291:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 292:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 293:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 294:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 295:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 296:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 297:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 298:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 299:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 300:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 301:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 302:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 303:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 304:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 305:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 306:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 307:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 308:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 309:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 310:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 311:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 312:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 313:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 314:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 315:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 316:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 317:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 318:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 319:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 320:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 321:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 322:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 323:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 324:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 325:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 326:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 327:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 328:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 329:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 330:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 331:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 332:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 333:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 334:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 335:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 336:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 337:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 338:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 339:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 340:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 341:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 342:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 343:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 344:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 345:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 346:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 347:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 348:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 349:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 350:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 351:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 352:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 353:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 354:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 355:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 356:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 357:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 358:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 359:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 360:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 361:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 362:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 363:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 364:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 365:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 366:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 367:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 368:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 369:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 370:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 371:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 372:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 373:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 374:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 375:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 376:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 377:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 378:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 379:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 380:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 381:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 382:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 383:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 384:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 385:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 386:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 387:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 388:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 389:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 390:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 391:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 392:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 393:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 394:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 395:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 396:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 397:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 398:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 399:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 400:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 401:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 402:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 403:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 404:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 405:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 406:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 407:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 408:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 409:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 410:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 411:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 412:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 413:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 414:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 415:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 416:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 417:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 418:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 419:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 420:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 421:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 422:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 423:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 424:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 425:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 426:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 427:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 428:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 429:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 430:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 431:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 432:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 433:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 434:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 435:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
 436:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 437:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 438:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 439:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 440:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 441:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 442:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 443:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 444:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 445:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 446:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 447:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 448:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 449:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 450:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 451:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 452:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 453:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 454:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 455:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 456:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 457:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 458:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 459:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 460:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 461:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 462:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 463:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 464:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 465:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 466:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 467:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 468:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 469:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 470:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 471:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 472:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 473:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 474:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 475:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 476:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 477:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 478:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 479:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 480:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 481:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 482:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 483:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 484:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 485:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   };
 486:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 487:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 488:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 489:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 490:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 491:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 492:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 493:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 494:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 495:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   };
 496:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 497:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 498:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 499:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 500:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 501:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 502:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 503:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 504:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 505:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 506:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 507:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 508:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 509:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 510:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 511:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 512:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 513:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 514:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 515:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 516:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 517:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 518:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 519:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 520:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 521:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 522:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 523:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 524:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 525:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 526:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 527:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 528:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 529:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 530:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 531:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 532:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 533:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 534:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 535:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 536:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 537:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 538:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 539:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 540:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 541:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 542:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 543:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 544:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 545:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 546:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 547:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 548:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 549:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 550:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 551:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 552:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 553:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 555:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 556:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 557:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 558:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 559:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 560:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 563:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 564:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 565:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 566:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 567:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 568:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 569:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 570:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 571:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 572:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 573:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 574:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 575:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 576:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 577:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 578:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 579:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 580:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 581:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 582:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 583:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 584:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 585:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 586:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 587:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 588:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 589:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 590:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 591:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 592:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 593:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 594:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 595:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 596:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 597:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 598:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 599:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 600:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 601:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 602:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 603:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 604:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 605:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 606:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 607:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 608:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 609:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 610:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 611:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 612:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 613:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 614:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 615:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 616:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 617:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 619:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 620:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 621:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 622:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 624:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 625:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 626:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 627:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 628:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 629:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 630:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 631:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 632:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 633:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 634:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 635:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 636:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 637:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 638:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 639:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 640:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 641:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 642:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 643:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 644:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 645:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 646:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 647:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 648:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 649:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 650:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 651:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 652:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 653:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 654:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 655:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 656:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 657:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 658:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 659:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 660:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 661:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 662:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 663:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 664:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 665:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 666:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 667:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 668:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 669:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 670:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 674:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 675:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 676:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 677:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 678:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 679:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 680:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 681:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 682:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 683:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 684:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 685:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 686:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 687:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 688:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 689:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 690:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 691:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 692:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 693:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 694:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 695:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 696:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 697:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 698:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 699:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 700:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 701:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 703:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 704:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 705:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 706:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 707:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 708:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 709:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 710:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 711:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 712:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 713:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 714:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 715:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 716:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 717:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 718:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 719:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 720:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 722:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 723:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 724:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 725:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 726:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 727:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 728:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 729:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 730:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 731:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 732:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 733:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 734:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 735:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 736:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 737:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 738:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 739:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 740:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 741:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 742:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 744:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 745:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 746:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 747:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 748:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 749:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 750:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 751:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 752:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 753:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 754:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 755:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 756:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 757:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 758:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 759:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 760:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 761:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 762:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 763:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 764:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 765:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 766:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 767:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 768:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 769:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 770:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 771:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 772:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 773:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 774:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 775:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 776:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 777:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 778:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 780:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 781:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 782:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 783:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 784:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 785:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 786:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 787:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 788:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 789:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 790:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 791:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 792:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 793:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 794:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 795:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 796:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 797:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 798:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 799:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 800:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 801:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 802:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 803:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 804:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 805:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 806:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 807:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 808:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 809:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 810:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 811:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 812:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 813:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 814:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 815:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 816:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 817:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 818:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 819:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 820:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 821:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 822:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 823:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 824:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 825:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 826:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 827:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 828:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 829:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 830:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 831:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 832:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 833:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 834:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 835:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 836:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 837:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 838:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 839:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 840:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 841:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 842:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 843:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 844:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 845:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 846:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 847:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 848:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 849:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 850:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 851:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 852:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 853:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 854:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 856:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 857:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 858:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 859:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 860:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 861:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 862:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 863:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 864:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 865:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 866:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 867:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 868:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 869:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 870:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 871:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 872:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 873:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 874:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 875:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 876:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 877:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 878:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 879:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 880:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 881:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 882:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 883:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 884:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 885:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 886:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 887:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 888:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 889:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 890:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 892:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 893:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 894:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 895:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 896:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 897:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 898:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 899:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 900:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 901:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 902:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 903:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 904:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 905:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 906:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 907:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
 908:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 909:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 910:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 911:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
 912:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 913:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 914:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 915:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 916:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
 917:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
 918:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
 919:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 920:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
 921:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
 922:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 923:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 924:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 925:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 926:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 927:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
 928:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 929:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 930:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 931:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
 932:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 933:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 934:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
 935:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 936:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
 937:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 938:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 939:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 940:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 941:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 942:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 943:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 944:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
 945:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
 946:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 947:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 948:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 949:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
 950:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
 951:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 953:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 954:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
 955:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 956:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
 957:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 958:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
 959:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 960:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 961:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 962:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 963:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 964:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
 965:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
 966:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
 967:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 968:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 969:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 970:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
 971:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
 972:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 973:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 974:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 975:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
 976:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 977:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
 978:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint16_t data,
 979:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint32_t transmit_control_information)
 980:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
 981:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
 982:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
 983:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
 984:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
 985:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 986:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 987:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
 988:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
 989:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
 990:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 991:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 992:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 993:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
 994:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
 995:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
 996:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 997:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
 998:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
 999:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1000:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1001:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1002:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1003:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1004:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1005:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1006:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1007:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1008:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1009:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1010:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1011:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1012:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1013:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1014:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1015:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1016:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1017:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly. 
1018:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1019:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1020:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1021:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1022:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1023:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1024:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1025:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1026:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1027:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1028:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1029:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1030:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1031:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1032:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1033:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1034:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1035:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1036:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1037:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1038:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1039:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1040:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1041:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1042:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1043:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1044:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1045:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1046:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1047:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1048:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1049:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1050:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1051:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1052:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1053:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1054:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1055:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1056:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1057:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1058:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1059:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1060:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1061:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1062:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1064:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1065:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
1066:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1067:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1068:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1069:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1070:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1071:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1072:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1073:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1074:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1075:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1076:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1077:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1078:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1079:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1080:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1081:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1082:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1083:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1084:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1085:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1086:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1087:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1088:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1089:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1090:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1091:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1092:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          const uint32_t service_request);
1093:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1094:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1095:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1096:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1097:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1098:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1099:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1100:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1101:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1102:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1103:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1104:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1105:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1106:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1107:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1108:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1109:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1110:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1111:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
  25              	 .loc 1 1111 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
1112:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
  39              	 .loc 1 1112 0
  40 0008 7B68     	 ldr r3,[r7,#4]
  41 000a 9B6B     	 ldr r3,[r3,#56]
  42 000c DBB2     	 uxtb r3,r3
  43 000e 7F22     	 mov r2,#127
  44 0010 9343     	 bic r3,r2
  45 0012 DBB2     	 uxtb r3,r3
1113:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
  46              	 .loc 1 1113 0
  47 0014 181C     	 mov r0,r3
  48 0016 BD46     	 mov sp,r7
  49 0018 02B0     	 add sp,sp,#8
  50              	 
  51 001a 80BD     	 pop {r7,pc}
  52              	 .cfi_endproc
  53              	.LFE61:
  55              	 .section .text.XMC_USIC_CH_SetMode,"ax",%progbits
  56              	 .align 2
  57              	 .code 16
  58              	 .thumb_func
  60              	XMC_USIC_CH_SetMode:
  61              	.LFB96:
1114:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1115:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1116:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1117:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1118:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1119:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1120:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1121:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1122:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1123:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1124:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1125:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1126:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1127:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte. 
1128:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1129:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1130:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1131:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1132:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1133:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1134:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1135:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1136:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1137:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1138:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1139:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1140:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1141:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1142:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1143:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1144:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1145:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1146:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1147:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *                              
1148:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1149:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1150:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1151:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1152:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1153:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1154:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1155:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1156:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1157:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1158:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                          const XMC_USIC_CH_START_TRANSMISION_MODE_t
1159:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1160:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1161:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1162:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1163:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1164:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1165:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1166:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1167:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1168:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1169:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1170:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1171:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1172:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1173:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1174:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1175:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1176:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1177:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1178:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1179:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output
1180:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1181:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1182:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1183:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1184:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1185:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1186:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1187:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1188:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1189:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1190:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1191:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the 
1192:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1193:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1194:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1195:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1196:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1197:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1198:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1199:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1200:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1201:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1202:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_SELMD_Msk |
1203:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_WAMD_Msk |
1204:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_HPCMD_Msk))) |
1205:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                          (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1206:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1207:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1208:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1209:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1210:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1211:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1212:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1213:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1214:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1215:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1216:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1217:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1218:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1219:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1220:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1221:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1222:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1223:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1224:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1225:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1226:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1227:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1228:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1229:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1230:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1231:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1232:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1233:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1234:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1235:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1236:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1237:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1238:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1239:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1240:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1241:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1242:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1243:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1244:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1245:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1246:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1247:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1248:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1250:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1251:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1252:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1253:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1254:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1255:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1256:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1257:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1258:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1259:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1260:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1261:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1262:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1263:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1264:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1265:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1266:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1267:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1268:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1269:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1270:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be 
1271:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled. 
1272:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1273:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1274:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1275:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1276:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1277:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1278:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1279:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1280:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1281:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1282:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1283:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1284:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1285:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1286:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1287:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1288:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1289:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1290:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1291:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1292:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1293:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1294:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1295:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                 const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buf
1296:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1297:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1298:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1299:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1300:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1301:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1302:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1303:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1304:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1305:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1306:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1307:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1308:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1309:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the 
1310:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1311:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1312:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1313:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1314:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1315:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1316:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                      const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive
1317:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1318:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1319:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1320:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1321:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1322:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1323:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1324:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1325:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1326:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1327:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1328:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1329:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1330:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1331:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1332:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1333:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1334:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1335:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1336:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1337:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1338:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1339:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1340:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1341:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1342:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1343:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1344:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1345:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1346:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1347:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1348:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1349:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1350:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1351:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1352:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1353:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1354:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1355:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1356:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1357:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1358:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1359:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1360:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1361:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the 
1362:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1363:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1364:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1365:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1366:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1367:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1368:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1369:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1370:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1371:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1372:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1373:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1374:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1375:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1376:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1377:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1378:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1379:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1380:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1381:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1382:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1383:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1384:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1385:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1386:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1387:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1388:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1389:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1390:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1391:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1392:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1393:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1394:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1395:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1396:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1397:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1398:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1399:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1400:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1401:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1402:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1403:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1404:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1405:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent(). 
1406:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1407:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1408:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1409:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1410:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1411:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1412:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1413:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1414:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1415:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1416:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1417:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1418:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1419:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1420:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1421:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1422:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1423:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1424:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1425:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1426:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1427:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1428:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1429:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1430:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1431:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1432:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1433:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1434:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1435:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1436:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1437:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1438:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1439:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1440:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1441:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1442:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
1443:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1444:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1445:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1446:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1447:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1448:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1449:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1450:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1451:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1452:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1453:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1454:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1455:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1456:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1457:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1458:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1459:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1460:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1461:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1462:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1463:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1464:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1465:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1466:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1467:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1468:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1469:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1470:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1471:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1472:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1473:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1474:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1475:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1476:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1477:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1478:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1479:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1480:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1481:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1482:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1483:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1484:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1485:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1486:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1487:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1488:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1489:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1490:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1491:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1492:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1493:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1494:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1495:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1496:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1497:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1498:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1499:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1500:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1501:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1502:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1503:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1504:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1505:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1506:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1507:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1508:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1509:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1510:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1511:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1512:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1513:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1514:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1515:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1516:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1517:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1518:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1519:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1520:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1521:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1522:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1523:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1524:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1525:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1526:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1527:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1528:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1529:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1530:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1531:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1532:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1533:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1534:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1535:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1536:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1537:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1538:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1539:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1540:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1541:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1542:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1543:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1544:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1545:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1546:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1547:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1548:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1549:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1550:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1551:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1552:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1553:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1554:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1556:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1557:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1558:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO, 
1559:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1560:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1561:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1562:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1563:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1564:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1565:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1566:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1567:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1568:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1569:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1570:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1571:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1572:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n 
1573:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1574:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1575:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1576:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1577:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1578:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1579:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1580:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1581:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1582:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1583:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1584:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1585:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1586:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1587:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1588:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1589:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1590:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1591:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1592:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1593:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1594:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1595:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1596:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1597:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1598:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1599:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1600:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1601:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1602:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1603:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1604:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1605:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1606:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1607:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1608:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_TBERI_Msk));
1609:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1610:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1611:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1612:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1613:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1614:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1615:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1616:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1617:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1618:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1619:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1620:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1621:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1622:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1623:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1624:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1625:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1626:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1627:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1628:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1629:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1630:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1631:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1632:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1633:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1634:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1635:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1636:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1637:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1638:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1639:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1640:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1641:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1642:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1643:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1644:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1645:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1646:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1647:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1648:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1649:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1650:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1651:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1652:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1653:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1654:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1655:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1656:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** */
1657:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1658:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1659:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1660:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1661:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1666:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1667:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1668:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1669:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1670:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1671:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1672:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1673:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the 
1674:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1675:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1676:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1677:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1678:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1679:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1680:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1681:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1682:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1683:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1684:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1685:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1686:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1687:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1688:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1689:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1690:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1691:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
1692:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1693:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
1694:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1695:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1696:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1697:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1698:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1699:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1700:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1701:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1702:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1703:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
1704:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1705:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1706:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1710:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
1711:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
1712:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
1713:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1714:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1715:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1716:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
1717:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1718:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent(). 
1719:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
1720:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1721:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1722:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1723:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1724:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1725:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1726:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1727:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
1728:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1729:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1730:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1731:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1732:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1733:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
1734:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1735:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1736:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
1737:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
1738:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1739:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1740:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1741:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
1742:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1743:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1744:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1745:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
1746:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1747:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1748:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1749:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1750:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1751:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1752:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1753:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1754:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1755:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
1756:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1757:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1758:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1759:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1760:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1761:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
1762:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
1763:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1764:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1765:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
1766:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
1767:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
1768:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
1769:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
1770:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1771:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1772:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
1773:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1774:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
1775:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1776:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
1777:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1778:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1779:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1780:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1781:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1782:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1783:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1784:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1785:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
1786:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
1787:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1788:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1789:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
1790:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1791:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
1792:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1793:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
1794:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1795:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1796:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1797:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1798:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1799:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
1800:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
1801:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1802:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1803:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
1804:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
1805:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
1806:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1807:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1808:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
1809:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1810:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1811:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1812:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
1813:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1814:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1815:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1816:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1817:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1818:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
1819:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
1820:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1821:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1822:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
1823:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
1824:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
1825:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
1826:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1827:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1828:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1829:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1830:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1831:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1832:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
1833:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1834:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1835:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1836:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1837:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1838:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
1839:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
1840:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1841:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1842:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
1843:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
1844:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the 
1845:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
1846:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1847:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1848:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1849:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1850:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1851:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1852:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
1853:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1854:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1855:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1856:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1857:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1858:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
1859:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
1860:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
1861:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1862:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1863:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
1864:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
1865:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
1866:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
1867:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1868:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1869:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1870:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1872:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
1873:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1874:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1875:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1876:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
1877:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_RBERI_Msk |
1878:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_ARBI_Msk));
1879:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1880:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1881:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1882:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1883:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1884:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
1885:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
1886:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
1887:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1888:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1889:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1890:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
1891:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1892:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1893:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
1894:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1895:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1896:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1897:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1898:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
1899:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1900:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1901:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1902:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1903:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1904:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1905:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1906:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1907:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1908:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1909:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1910:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1911:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1912:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
1913:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
1914:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1915:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1916:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
1917:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1918:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
1919:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1920:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
1921:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1922:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1923:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1924:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1925:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1926:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1927:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1928:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1929:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
1930:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
1931:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1932:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1933:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
1934:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1935:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
1936:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1937:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
1938:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1939:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1940:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1941:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1942:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1943:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
1944:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
1945:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1946:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1947:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1948:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
1949:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1950:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
1951:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSI
1952:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1953:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
1954:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1955:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1956:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1957:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1958:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
1959:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
1960:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
1961:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
1962:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
1963:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
1964:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
1965:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
1966:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1967:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1968:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1969:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
1970:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
1971:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
1972:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
1973:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
1974:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
1975:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1976:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
1977:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
1978:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIV
1979:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
1980:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
1981:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
1982:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                                              USIC_CH_BRG_SCLKOSEL_Msk))) |
1983:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
1984:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
1985:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
1986:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** 
1987:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** /**
1988:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1989:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1990:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @param mode USIC channel operation mode. \n
1991:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_OPERATING_MODE_IDLE, @ref XMC_USIC_CH_OPERATING_MODE_SPI,
1992:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_UART, @ref XMC_USIC_CH_OPERATING_MODE_I2S,
1993:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_I2C.
1994:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1995:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
1996:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1997:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the USIC channel operation mode.\n\n
1998:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S.
1999:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * The API sets the input operation mode to the USIC channel.
2000:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  *
2001:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2002:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_Enable(), XMC_USIC_CH_Enable() \n\n\n
2003:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****  */
2004:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMode(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_
2005:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** {
  62              	 .loc 1 2005 0
  63              	 .cfi_startproc
  64 0000 80B5     	 push {r7,lr}
  65              	.LCFI3:
  66              	 .cfi_def_cfa_offset 8
  67              	 .cfi_offset 7,-8
  68              	 .cfi_offset 14,-4
  69 0002 82B0     	 sub sp,sp,#8
  70              	.LCFI4:
  71              	 .cfi_def_cfa_offset 16
  72 0004 00AF     	 add r7,sp,#0
  73              	.LCFI5:
  74              	 .cfi_def_cfa_register 7
  75 0006 7860     	 str r0,[r7,#4]
  76 0008 0A1C     	 mov r2,r1
  77 000a FB1C     	 add r3,r7,#3
  78 000c 1A70     	 strb r2,[r3]
2006:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR = (uint32_t)(channel->CCR & (~(USIC_CH_CCR_MODE_Msk))) | (uint32_t)mode;
  79              	 .loc 1 2006 0
  80 000e 7B68     	 ldr r3,[r7,#4]
  81 0010 1B6C     	 ldr r3,[r3,#64]
  82 0012 0F22     	 mov r2,#15
  83 0014 9343     	 bic r3,r2
  84 0016 1A1C     	 mov r2,r3
  85 0018 FB1C     	 add r3,r7,#3
  86 001a 1B78     	 ldrb r3,[r3]
  87 001c 1A43     	 orr r2,r3
  88 001e 7B68     	 ldr r3,[r7,#4]
  89 0020 1A64     	 str r2,[r3,#64]
2007:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_usic.h **** }
  90              	 .loc 1 2007 0
  91 0022 BD46     	 mov sp,r7
  92 0024 02B0     	 add sp,sp,#8
  93              	 
  94 0026 80BD     	 pop {r7,pc}
  95              	 .cfi_endproc
  96              	.LFE96:
  98              	 .section .text.XMC_I2C_CH_ClearStatusFlag,"ax",%progbits
  99              	 .align 2
 100              	 .code 16
 101              	 .thumb_func
 103              	XMC_I2C_CH_ClearStatusFlag:
 104              	.LFB104:
 105              	 .file 2 "C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc/xmc_i2c.h"
   1:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
   2:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @file xmc_i2c.h
   3:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @date 2016-05-20
   4:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   5:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @cond
   6:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  **************************************************************************************************
   7:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   9:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * All rights reserved.                        
  11:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                             
  12:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * following conditions are met:   
  14:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  15:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * disclaimer.                        
  17:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  18:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  21:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  24:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  32:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  **************************************************************************************************
  35:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  36:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Change History
  37:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * --------------
  38:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  39:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-02-20:
  40:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Initial <br>
  41:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *      
  42:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-05-20:
  43:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Description updated <br>
  44:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_TriggerServiceRequest() and XMC_I2C_CH_SelectInterruptNodePointer() <br>
  45:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  46:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-06-20:
  47:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  49:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-08-27:
  50:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for external input for BRG configuration:XMC_I2C_CH_ConfigExternalInputSignalTo
  51:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  52:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-09-01:
  53:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for enabling or disabling the ACK response to a 0x00 slave address: XMC_I2C_CH_
  54:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *       XMC_I2C_CH_DisableSlaveAcknowledgeTo00(). <br>
  55:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_SetInputSource() API for avoiding complete DXCR register overwriting. 
  56:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_EVENT_t enum for supporting XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_Di
  57:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *       for supporting multiple events configuration <br>
  58:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  59:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-02:
  60:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix 10bit addressing
  61:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  62:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-07:
  63:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix register access in XMC_I2C_CH_EnableSlaveAcknowledgeTo00() and XMC_I2C_CH_DisableSlave
  64:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Naming of APIs modified: from XMC_I2C_CH_EnableSlaveAcknowledgeTo00() to  XMC_I2C_CH_Enabl
  65:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *       and from XMC_I2C_CH_DisableSlaveAcknowledgeTo00() to XMC_I2C_CH_DisableAcknowledgeAddress0
  66:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  67:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-05-20:
  68:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableDataTransmission() and XMC_I2C_CH_DisableDataTransmission()
  69:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  70:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-08-17:
  71:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Improved documentation of slave address passing
  72:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  73:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @endcond 
  74:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  75:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  76:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
  77:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #ifndef XMC_I2C_H
  78:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_H
  79:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
  80:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
  81:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * HEADER FILES
  82:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
  83:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
  84:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #include "xmc_usic.h"
  85:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
  86:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
  87:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup XMClib XMC Peripheral Library
  88:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
  89:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  90:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
  91:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
  92:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup I2C
  93:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief Inter Integrated Circuit(IIC) driver for the XMC microcontroller family. 
  94:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  95:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * USIC IIC Features: <br>
  96:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *  * Two-wire interface, with one line for shift clock transfer and synchronization (shift clock S
  97:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Communication in standard mode (100 kBit/s) or in fast mode (up to 400 kBit/s) <br>
  98:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Support of 7-bit addressing, as well as 10-bit addressing <br>
  99:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Master mode operation, where the IIC controls the bus transactions and provides the clock sign
 100:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Slave mode operation, where an external master controls the bus transactions and provides the 
 101:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Multi-master mode operation, where several masters can be connected to the bus and bus arbitra
 102:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 	  The master/slave operation of an IIC bus participant can change from frame to frame. <br>
 103:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Efficient frame handling (low software effort), also allowing DMA transfers <br>
 104:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Powerful interrupt handling due to multitude of indication flags <br>
 105:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 106:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 107:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 108:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 109:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * MACROS
 110:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 111:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 112:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC0)
 113:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
 114:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
 115:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 116:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 117:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC1)
 118:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
 119:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
 120:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 121:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 122:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC2)
 123:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 124:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 125:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 126:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 127:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_10BIT_ADDR_GROUP       (0x7800U)	 /**< Value to verify the address is 10-bit or not
 128:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 129:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 130:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * ENUMS
 131:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 132:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 133:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 134:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C Status
 135:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 136:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS
 137:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 138:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_OK,      /**< Status OK */
 139:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_ERROR,   /**< Status ERROR */
 140:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_BUSY     /**< Status BUSY */
 141:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_t;
 142:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 143:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 144:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C status
 145:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 146:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS_FLAG
 147:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 148:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_SELECT = USIC_CH_PSR_IICMode_SLSEL_Msk,                     /**< Sla
 149:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND = USIC_CH_PSR_IICMode_WTDF_Msk,              /**< Wro
 150:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_SCR_Msk,           /**< Sta
 151:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_RSCR_Msk, /**< Rep
 152:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_PCR_Msk,            /**< Sto
 153:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED = USIC_CH_PSR_IICMode_NACK_Msk,                     /**< NAC
 154:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST = USIC_CH_PSR_IICMode_ARL_Msk,                   /**< Arb
 155:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_READ_REQUESTED = USIC_CH_PSR_IICMode_SRR_Msk,               /**< Sla
 156:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ERROR = USIC_CH_PSR_IICMode_ERR_Msk,                              /**< Err
 157:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED = USIC_CH_PSR_IICMode_ACK_Msk,                       /**< ACK
 158:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IICMode_RSIF_Msk,         /**< Rec
 159:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IICMode_DLIF_Msk,              /**< Dat
 160:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IICMode_TSIF_Msk,         /**< Tra
 161:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IICMode_TBIF_Msk,        /**< Tra
 162:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_RIF_Msk,                 /**< Rec
 163:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_AIF_Msk,     /**< Alt
 164:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IICMode_BRGIF_Msk    /**< Bau
 165:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_FLAG_t;
 166:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 167:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 168:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C receiver status. The received data byte is available at the bit
 169:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * positions RBUF[7:0], whereas the additional information is monitored at the bit positions
 170:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** *  RBUF[12:8].
 171:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 172:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_RECEIVER_STATUS_FLAG
 173:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 174:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ACK = 0x1U,      /**< Bit 8:  Value of Received Acknowledgement b
 175:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_FIN = 0x2U,      /**< Bit 9:  A 1 at this bit position indicates 
 176:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 followed by the address reception t
 177:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 been received. A 0 at this bit posi
 178:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_MODE = 0x4U,     /**< Bit 10: A 0 at this bit position indicates 
 179:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 when the device has been in slave m
 180:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ERR = 0x8U,      /**< Bit 11: A 1 at this bit position indicates 
 181:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 data byte in the receive buffer */
 182:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ADR = 0x10       /**< Bit 12: A 0 at this bit position indicates 
 183:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 has been received. A 1 indicates a 
 184:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_RECEIVER_STATUS_FLAG_t;
 185:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 186:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 187:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C commands
 188:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 189:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_CMD
 190:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 191:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_WRITE,                            /**< I2C Command Write */
 192:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_READ                              /**< I2C Command Read */
 193:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CMD_t;
 194:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 195:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 196:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C events
 197:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 198:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_EVENT
 199:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 200:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 201:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 202:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 203:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 204:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 205:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 206:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 207:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 208:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_SCRIEN_Msk,             /**< Star
 209:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_RSCRIEN_Msk,   /**< Repe
 210:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STOP_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_PCRIEN_Msk,              /**< Stop
 211:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_NACK = USIC_CH_PCR_IICMode_NACKIEN_Msk,                                /**< NACK
 212:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ARBITRATION_LOST = USIC_CH_PCR_IICMode_ARLIEN_Msk,                     /**< Arbi
 213:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_SLAVE_READ_REQUEST = USIC_CH_PCR_IICMode_SRRIEN_Msk,                   /**< Slav
 214:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ERROR = USIC_CH_PCR_IICMode_ERRIEN_Msk,	                              /**< Error
 215:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ACK = USIC_CH_PCR_IICMode_ACKIEN_Msk                                   /**< ACK 
 216:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_EVENT_t;
 217:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 218:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 219:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C input stage selection
 220:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 221:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INPUT
 222:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 223:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA = 0U,   /**< selection of sda input stage */
 224:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 225:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA1 = 3U,
 226:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA2 = 5U,
 227:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #endif  
 228:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL = 1U,  /**< selection of scl input stage */
 229:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 230:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL1 = 4U
 231:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #endif  
 232:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INPUT_t;
 233:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 234:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 235:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * I2C channel interrupt node pointers
 236:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 237:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INTERRUPT_NODE_POINTER
 238:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 239:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 240:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 241:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 242:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 243:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 244:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INTERRUPT_NODE_POINTER_t;
 245:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 246:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 247:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * DATA STRUCTURES
 248:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 249:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 250:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C_CH configuration structure
 251:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 252:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** typedef struct XMC_I2C_CH_CONFIG
 253:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 254:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   uint32_t baudrate;   /**< baud rate configuration upto max of 400KHz */
 255:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   uint16_t address;    /**< slave address 
 256:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 7-bit address needs to be left shifted it by 1.
 257:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 10-bit address needs to be ORed with XMC_I2C_10BIT_ADDR_GROUP. */
 258:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CONFIG_t;
 259:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 260:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 261:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * API PROTOTYPES
 262:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 263:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 264:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #ifdef __cplusplus
 265:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** extern "C" {
 266:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 267:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 268:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 269:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 270:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 271:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 272:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 273:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 274:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 275:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 276:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 277:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 278:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 279:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 280:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 281:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 282:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 283:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 284:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 285:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config);
 286:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 287:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 288:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 289:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 290:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 291:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 292:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 293:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 294:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 295:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 296:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 297:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 298:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 299:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 300:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 301:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 302:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 303:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 304:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 305:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 306:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 307:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 308:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 309:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 310:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C \a channel.
 311:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 312:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 313:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation mode to I2C mode using CCR register.
 314:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 315:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 316:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 317:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 318:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Start(XMC_USIC_CH_t *const channel)
 319:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 320:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2C);
 321:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** }
 322:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 323:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 324:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 325:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 326:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return @ref XMC_I2C_CH_STATUS_t<br>
 327:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 328:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 329:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C \a channel.<br>
 330:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 331:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 332:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation to IDLE mode using CCR register.
 333:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 334:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 335:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 336:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 337:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel);
 338:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 339:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 340:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 341:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number in the range of 0-5
 342:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 343:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 344:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 345:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for protocol interrupt.<br>
 346:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 347:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 348:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * To generate interrupt for an event, node pointer should be configured with service request numbe
 349:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 350:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 351:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 352:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * NVIC node should be separately enabled to generate the interrupt. After setting the node pointer
 353:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 354:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 355:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent(), NVIC_SetPriority(), NVIC_EnableIRQ(), XMC_I2C_CH_SetInputSource()<br>
 356:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 357:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 358:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****                                                         const uint8_t service_request)
 359:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 360:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, service
 361:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** }
 362:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 363:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 364:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 365:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 366:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				  \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref XM
 367:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 368:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: @ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 369:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  			@ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 370:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number.\n
 371:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: 0 to 5.
 372:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 373:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 374:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 375:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for USIC channel events. \n\n
 376:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 377:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 378:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 379:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 380:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 381:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent() \n\n\n
 382:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 383:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 384:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****                                                            const XMC_I2C_CH_INTERRUPT_NODE_POINTER_
 385:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****                                                            const uint32_t service_request)
 386:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 387:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 388:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 		                                       (uint32_t)service_request);
 389:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** }
 390:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 391:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 392:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 393:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				   \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref X
 394:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 395:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 			\b Range: 0 to 5.
 396:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 397:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 398:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 399:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Trigger a I2C interrupt service request.\n\n
 400:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * When the I2C service request is triggered, the NVIC interrupt associated with it will be
 401:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * generated if enabled.
 402:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 403:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SelectInterruptNodePointer() \n\n\n
 405:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 406:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t 
 407:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 408:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 409:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** }
 410:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 411:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 412:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 413:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param input I2C channel input stage of type @ref XMC_I2C_CH_INPUT_t
 414:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param source Input source select for the input stage(0->DX0A, 1->DX1A, .. 7->DX7G)
 415:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 416:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 417:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 418:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the input source for I2C \a channel.<br>
 419:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Defines the input stage for the corresponding input line.
 420:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 421:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note After configuring the input source for corresponding channel, interrupt node pointer is se
 422:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 423:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 424:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetInptSource(), XMC_USIC_CH_SetInterruptNodePointer()
 425:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 426:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 427:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_INPUT
 428:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 429:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->DXCR[input] =  (uint32_t)(channel->DXCR[input] & (~USIC_CH_DX0CR_INSW_Msk)) | USIC_CH_DX
 430:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 431:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** }
 432:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 433:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 434:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 435:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param address I2C slave address
 436:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 437:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 438:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 439:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the I2C \a channel slave address.<br>
 440:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 441:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 442:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Address is set in PCR_IICMode register by checking if it is in 10-bit address group or 7-bit add
 443:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is 10-bit mode otherwis
 444:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address should include an additional bit at the LSB for read/write indication. For
 445:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. A 10-bit address should be provided with the identifier 0b11110xx at the mo
 446:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * address 0x305 should be provided as 0x7b05(bitwise OR with 0x7800).
 447:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 448:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 449:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetSlaveAddress()\n\n
 450:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 451:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address);
 452:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 453:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 454:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel handler of type @ref XMC_USIC_CH_t
 455:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint16_t Slave address<br>
 456:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 457:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 458:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the I2C \a channel slave address.<br>
 459:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 460:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 461:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Returns the address using PCR_IICMode register by checking if it is in 10-bit address group or 7
 462:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is considered as 10-bit
 463:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address will include an additional bit at the LSB. For example, address 0x05 will 
 464:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * 10-bit address will not include the 10-bit address identifier 0b11110xx at the most signifcant b
 465:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 466:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 467:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SetSlaveAddress()\n\n
 468:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 469:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel);
 470:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 471:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 472:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 473:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 474:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 475:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 476:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 477:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 478:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C master \a channel.<br>
 479:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 480:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 481:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Start condition with read/write command by updating IN/TBUF register based on FIFO/non
 482:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 483:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 484:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 485:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 486:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 487:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 488:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 489:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 490:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 491:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 492:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 493:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 494:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 495:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 496:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 497:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 498:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 499:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition from I2C master \a channel.<br>
 500:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 501:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 502:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition with read/write command by updating IN/TBUF register based on
 503:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 504:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 505:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 506:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 507:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 508:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 509:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 510:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 511:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 512:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 513:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 514:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 515:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 516:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 517:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 518:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C master \a channel.<br>
 519:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 520:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 521:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on F
 522:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 523:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 524:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 525:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 526:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel);
 527:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 528:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 529:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 530:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 531:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 532:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 533:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 534:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C master \a channel.<br>
 535:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 536:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 537:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 538:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 539:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 540:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 541:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 542:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 543:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 544:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 545:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 546:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 547:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 548:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 549:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 550:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C slave \a channel.<br>
 551:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 552:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 553:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 554:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 555:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 556:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(),XMC_I2C_CH_ClearStatusFlag()\n\n
 557:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 558:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 559:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 560:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 561:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 562:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 563:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 564:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 565:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Ack request from I2C master \a channel.<br>
 566:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 567:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 568:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FIF
 569:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 570:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 571:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 572:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 573:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel);
 574:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 575:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 576:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 577:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 578:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 579:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 580:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Nack request from I2C master \a channel.<br>
 581:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 582:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 583:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 584:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 585:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 586:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 587:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 588:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel);
 589:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 590:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 591:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 592:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t OUTR/RBUF register data<br>
 593:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 594:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 595:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the data from I2C \a channel.<br>
 596:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 597:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 598:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Data is read by using OUTR/RBUF register based on FIFO/non-FIFO modes.
 599:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 600:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 601:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 602:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 603:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel);
 604:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 605:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 606:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 607:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t Receiver status flag<br>
 608:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 609:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 610:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the receiver status of I2C \a channel using RBUF register of bits 8-12 which gives informat
 611:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 612:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 613:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 614:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 615:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint8_t XMC_I2C_CH_GetReceiverStatusFlag(XMC_USIC_CH_t *const channel)
 616:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 617:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   return((uint8_t)((channel->RBUF) >> 8U));
 618:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** }
 619:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 620:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 621:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 622:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 623:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 624:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 625:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 626:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Enables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 627:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 628:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 629:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_DisableEvent()\n\n
 630:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 631:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 632:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 633:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 634:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 635:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 636:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 637:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 638:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 639:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Disables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 640:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 641:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 642:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent()\n\n
 643:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 644:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 645:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 646:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 647:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 648:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint32_t Status byte<br>
 649:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 650:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 651:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Retrieves the status byte of I2C \a channel using PSR_IICMode register.\n
 652:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 653:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 654:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_ClearStatusFlag()\n\n
 655:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 656:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint32_t XMC_I2C_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 657:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 658:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   return (channel->PSR_IICMode);
 659:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** }
 660:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** 
 661:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 662:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 663:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param flag Status flag
 664:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 665:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 666:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 667:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * Clears the status flag of I2C \a channel by setting the input parameter \a flag in PSCR register
 668:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 669:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 670:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetStatusFlag()\n\n
 671:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 672:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, uint32_t flag)
 673:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** {
 106              	 .loc 2 673 0
 107              	 .cfi_startproc
 108 0000 80B5     	 push {r7,lr}
 109              	.LCFI6:
 110              	 .cfi_def_cfa_offset 8
 111              	 .cfi_offset 7,-8
 112              	 .cfi_offset 14,-4
 113 0002 82B0     	 sub sp,sp,#8
 114              	.LCFI7:
 115              	 .cfi_def_cfa_offset 16
 116 0004 00AF     	 add r7,sp,#0
 117              	.LCFI8:
 118              	 .cfi_def_cfa_register 7
 119 0006 7860     	 str r0,[r7,#4]
 120 0008 3960     	 str r1,[r7]
 674:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->PSCR |= flag;
 121              	 .loc 2 674 0
 122 000a 7B68     	 ldr r3,[r7,#4]
 123 000c DA6C     	 ldr r2,[r3,#76]
 124 000e 3B68     	 ldr r3,[r7]
 125 0010 1A43     	 orr r2,r3
 126 0012 7B68     	 ldr r3,[r7,#4]
 127 0014 DA64     	 str r2,[r3,#76]
 675:C:/c_root/electronics/DAVE_work_2019/pocket-nim/Libraries/XMCLib/inc\xmc_i2c.h **** }
 128              	 .loc 2 675 0
 129 0016 BD46     	 mov sp,r7
 130 0018 02B0     	 add sp,sp,#8
 131              	 
 132 001a 80BD     	 pop {r7,pc}
 133              	 .cfi_endproc
 134              	.LFE104:
 136              	 .section .text.XMC_I2C_CH_Init,"ax",%progbits
 137              	 .align 2
 138              	 .global XMC_I2C_CH_Init
 139              	 .code 16
 140              	 .thumb_func
 142              	XMC_I2C_CH_Init:
 143              	.LFB110:
 144              	 .file 3 "../Libraries/XMCLib/src/xmc_i2c.c"
   1:../Libraries/XMCLib/src/xmc_i2c.c **** /**
   2:../Libraries/XMCLib/src/xmc_i2c.c ****  * @file xmc_i2c.c
   3:../Libraries/XMCLib/src/xmc_i2c.c ****  * @date 2015-10-02
   4:../Libraries/XMCLib/src/xmc_i2c.c ****  *
   5:../Libraries/XMCLib/src/xmc_i2c.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_i2c.c ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_i2c.c ****  *
   9:../Libraries/XMCLib/src/xmc_i2c.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_i2c.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_i2c.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_i2c.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_i2c.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_i2c.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_i2c.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_i2c.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_i2c.c ****  * 
  18:../Libraries/XMCLib/src/xmc_i2c.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_i2c.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_i2c.c ****  * 
  21:../Libraries/XMCLib/src/xmc_i2c.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_i2c.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_i2c.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_i2c.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_i2c.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_i2c.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_i2c.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_i2c.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_i2c.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_i2c.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_i2c.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_i2c.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_i2c.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  36:../Libraries/XMCLib/src/xmc_i2c.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_i2c.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  39:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_i2c.c ****  *      
  42:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc_i2c.c ****        - Modified XMC_I2C_CH_Stop() API for not setting to IDLE the channel if it is busy <br>
  44:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  45:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-06-20:
  46:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Removed GetDriverVersion API <br>
  47:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  48:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-08-14:
  49:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - updated the XMC_I2C_CH_SetBaudrate API to support dynamic change from 400K to low frequenc
  50:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  51:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-09-01:
  52:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Modified XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_DisableEvent() for supporting multiple ev
  53:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  54:../Libraries/XMCLib/src/xmc_i2c.c ****  * 2015-10-02:
  55:../Libraries/XMCLib/src/xmc_i2c.c ****  *     - Fixed 10bit addressing
  56:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  57:../Libraries/XMCLib/src/xmc_i2c.c ****  * @endcond 
  58:../Libraries/XMCLib/src/xmc_i2c.c ****  *
  59:../Libraries/XMCLib/src/xmc_i2c.c ****  */
  60:../Libraries/XMCLib/src/xmc_i2c.c **** 
  61:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  62:../Libraries/XMCLib/src/xmc_i2c.c ****  * HEADER FILES
  63:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  64:../Libraries/XMCLib/src/xmc_i2c.c **** #include <xmc_i2c.h>
  65:../Libraries/XMCLib/src/xmc_i2c.c **** 
  66:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_i2c.c ****  * MACROS
  68:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_i2c.c **** #define XMC_I2C_7BIT_ADDR_Pos   (8U)		/**< 7-bit address position */
  70:../Libraries/XMCLib/src/xmc_i2c.c **** #define TRANSMISSION_MODE       (3U)		/**< The shift control signal is considered active
  71:../Libraries/XMCLib/src/xmc_i2c.c ****                                                  without referring to the actual signal level. Data
  72:../Libraries/XMCLib/src/xmc_i2c.c ****                                                  frame transfer is possible after each edge of the 
  73:../Libraries/XMCLib/src/xmc_i2c.c **** #define WORDLENGTH              (7U)        /**< Word length */
  74:../Libraries/XMCLib/src/xmc_i2c.c **** #define SET_TDV                 (1U)		/**< Transmission data valid */
  75:../Libraries/XMCLib/src/xmc_i2c.c **** #define XMC_I2C_10BIT_ADDR_MASK (0x7C00U)   /**< Address mask for 10-bit mode */
  76:../Libraries/XMCLib/src/xmc_i2c.c **** 
  77:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
  78:../Libraries/XMCLib/src/xmc_i2c.c ****  * ENUMS
  79:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_i2c.c **** 
  81:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_TDF
  82:../Libraries/XMCLib/src/xmc_i2c.c **** {
  83:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_SEND =         0U,
  84:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_SLAVE_SEND =          (uint32_t)1U << 8U,
  85:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK =  (uint32_t)2U << 8U,
  86:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK = (uint32_t)3U << 8U,
  87:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_START =        (uint32_t)4U << 8U,
  88:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_RESTART =      (uint32_t)5U << 8U,
  89:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_TDF_MASTER_STOP =         (uint32_t)6U << 8U
  90:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_TDF_t;
  91:../Libraries/XMCLib/src/xmc_i2c.c **** 
  92:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_MAX_SPEED
  93:../Libraries/XMCLib/src/xmc_i2c.c **** {
  94:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_MAX_SPEED_STANDARD = 100000U,
  95:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_MAX_SPEED_FAST = 400000U
  96:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_MAX_SPEED_t;
  97:../Libraries/XMCLib/src/xmc_i2c.c **** 
  98:../Libraries/XMCLib/src/xmc_i2c.c **** typedef enum XMC_I2C_CH_CLOCK_OVERSAMPLING
  99:../Libraries/XMCLib/src/xmc_i2c.c **** {
 100:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_CLOCK_OVERSAMPLING_STANDARD = 10U,
 101:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_CLOCK_OVERSAMPLING_FAST     = 25U
 102:../Libraries/XMCLib/src/xmc_i2c.c **** } XMC_I2C_CH_CLOCK_OVERSAMPLINGS_t;
 103:../Libraries/XMCLib/src/xmc_i2c.c **** 
 104:../Libraries/XMCLib/src/xmc_i2c.c **** /**************************************************************************************************
 105:../Libraries/XMCLib/src/xmc_i2c.c ****  * API IMPLEMENTATION
 106:../Libraries/XMCLib/src/xmc_i2c.c ****  **************************************************************************************************
 107:../Libraries/XMCLib/src/xmc_i2c.c **** /* Initializes the USIC channel by setting the data format, slave address, baudrate, transfer buffe
 108:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config)
 109:../Libraries/XMCLib/src/xmc_i2c.c **** {
 145              	 .loc 3 109 0
 146              	 .cfi_startproc
 147 0000 80B5     	 push {r7,lr}
 148              	.LCFI9:
 149              	 .cfi_def_cfa_offset 8
 150              	 .cfi_offset 7,-8
 151              	 .cfi_offset 14,-4
 152 0002 82B0     	 sub sp,sp,#8
 153              	.LCFI10:
 154              	 .cfi_def_cfa_offset 16
 155 0004 00AF     	 add r7,sp,#0
 156              	.LCFI11:
 157              	 .cfi_def_cfa_register 7
 158 0006 7860     	 str r0,[r7,#4]
 159 0008 3960     	 str r1,[r7]
 110:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_USIC_CH_Enable(channel);
 160              	 .loc 3 110 0
 161 000a 7B68     	 ldr r3,[r7,#4]
 162 000c 181C     	 mov r0,r3
 163 000e FFF7FEFF 	 bl XMC_USIC_CH_Enable
 111:../Libraries/XMCLib/src/xmc_i2c.c ****   
 112:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Data format configuration */
 113:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->SCTR = ((uint32_t)TRANSMISSION_MODE << (uint32_t)USIC_CH_SCTR_TRM_Pos) | /* Transmision 
 164              	 .loc 3 113 0
 165 0012 7B68     	 ldr r3,[r7,#4]
 166 0014 0E4A     	 ldr r2,.L6
 167 0016 5A63     	 str r2,[r3,#52]
 114:../Libraries/XMCLib/src/xmc_i2c.c ****                   ((uint32_t)WORDLENGTH << (uint32_t)USIC_CH_SCTR_WLE_Pos) | /* 8 data bits */
 115:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_FLE_Msk |           /* unlimited data flow */
 116:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_SDIR_Msk |          /* MSB shifted first */
 117:../Libraries/XMCLib/src/xmc_i2c.c ****                   USIC_CH_SCTR_PDL_Msk;            /* Passive Data Level */
 118:../Libraries/XMCLib/src/xmc_i2c.c **** 
 119:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_SetSlaveAddress(channel, config->address);
 168              	 .loc 3 119 0
 169 0018 3B68     	 ldr r3,[r7]
 170 001a 9B88     	 ldrh r3,[r3,#4]
 171 001c 7A68     	 ldr r2,[r7,#4]
 172 001e 101C     	 mov r0,r2
 173 0020 191C     	 mov r1,r3
 174 0022 FFF7FEFF 	 bl XMC_I2C_CH_SetSlaveAddress
 120:../Libraries/XMCLib/src/xmc_i2c.c ****   (void)XMC_I2C_CH_SetBaudrate(channel, config->baudrate);
 175              	 .loc 3 120 0
 176 0026 3B68     	 ldr r3,[r7]
 177 0028 1B68     	 ldr r3,[r3]
 178 002a 7A68     	 ldr r2,[r7,#4]
 179 002c 101C     	 mov r0,r2
 180 002e 191C     	 mov r1,r3
 181 0030 FFF7FEFF 	 bl XMC_I2C_CH_SetBaudrate
 121:../Libraries/XMCLib/src/xmc_i2c.c ****     
 122:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Enable transfer buffer */
 123:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->TCSR = ((uint32_t)SET_TDV << (uint32_t)USIC_CH_TCSR_TDEN_Pos) | USIC_CH_TCSR_TDSSM_Msk;
 182              	 .loc 3 123 0
 183 0034 7B68     	 ldr r3,[r7,#4]
 184 0036 A022     	 mov r2,#160
 185 0038 D200     	 lsl r2,r2,#3
 186 003a 9A63     	 str r2,[r3,#56]
 124:../Libraries/XMCLib/src/xmc_i2c.c **** 
 125:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Clear status flags */
 126:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PSCR = 0xFFFFFFFFU;
 187              	 .loc 3 126 0
 188 003c 7B68     	 ldr r3,[r7,#4]
 189 003e 0122     	 mov r2,#1
 190 0040 5242     	 neg r2,r2
 191 0042 DA64     	 str r2,[r3,#76]
 127:../Libraries/XMCLib/src/xmc_i2c.c **** 
 128:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Disable parity generation */
 129:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR = 0x0U;
 192              	 .loc 3 129 0
 193 0044 7B68     	 ldr r3,[r7,#4]
 194 0046 0022     	 mov r2,#0
 195 0048 1A64     	 str r2,[r3,#64]
 130:../Libraries/XMCLib/src/xmc_i2c.c **** }
 196              	 .loc 3 130 0
 197 004a BD46     	 mov sp,r7
 198 004c 02B0     	 add sp,sp,#8
 199              	 
 200 004e 80BD     	 pop {r7,pc}
 201              	.L7:
 202              	 .align 2
 203              	.L6:
 204 0050 03033F07 	 .word 121570051
 205              	 .cfi_endproc
 206              	.LFE110:
 208              	 .section .text.XMC_I2C_CH_SetSlaveAddress,"ax",%progbits
 209              	 .align 2
 210              	 .global XMC_I2C_CH_SetSlaveAddress
 211              	 .code 16
 212              	 .thumb_func
 214              	XMC_I2C_CH_SetSlaveAddress:
 215              	.LFB111:
 131:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the slave address */
 132:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address)
 133:../Libraries/XMCLib/src/xmc_i2c.c **** {
 216              	 .loc 3 133 0
 217              	 .cfi_startproc
 218 0000 80B5     	 push {r7,lr}
 219              	.LCFI12:
 220              	 .cfi_def_cfa_offset 8
 221              	 .cfi_offset 7,-8
 222              	 .cfi_offset 14,-4
 223 0002 82B0     	 sub sp,sp,#8
 224              	.LCFI13:
 225              	 .cfi_def_cfa_offset 16
 226 0004 00AF     	 add r7,sp,#0
 227              	.LCFI14:
 228              	 .cfi_def_cfa_register 7
 229 0006 7860     	 str r0,[r7,#4]
 230 0008 0A1C     	 mov r2,r1
 231 000a BB1C     	 add r3,r7,#2
 232 000c 1A80     	 strh r2,[r3]
 134:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((address & XMC_I2C_10BIT_ADDR_MASK) == XMC_I2C_10BIT_ADDR_GROUP)
 233              	 .loc 3 134 0
 234 000e BB1C     	 add r3,r7,#2
 235 0010 1A88     	 ldrh r2,[r3]
 236 0012 F823     	 mov r3,#248
 237 0014 DB01     	 lsl r3,r3,#7
 238 0016 1A40     	 and r2,r3
 239 0018 F023     	 mov r3,#240
 240 001a DB01     	 lsl r3,r3,#7
 241 001c 9A42     	 cmp r2,r3
 242 001e 0ED1     	 bne .L9
 135:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 136:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode = (address & 0xffU) | ((address << 1) & 0xfe00U);
 243              	 .loc 3 136 0
 244 0020 BB1C     	 add r3,r7,#2
 245 0022 1B88     	 ldrh r3,[r3]
 246 0024 FF22     	 mov r2,#255
 247 0026 1A40     	 and r2,r3
 248 0028 BB1C     	 add r3,r7,#2
 249 002a 1B88     	 ldrh r3,[r3]
 250 002c 5B00     	 lsl r3,r3,#1
 251 002e 191C     	 mov r1,r3
 252 0030 FE23     	 mov r3,#254
 253 0032 1B02     	 lsl r3,r3,#8
 254 0034 0B40     	 and r3,r1
 255 0036 1A43     	 orr r2,r3
 256 0038 7B68     	 ldr r3,[r7,#4]
 257 003a DA63     	 str r2,[r3,#60]
 258 003c 04E0     	 b .L8
 259              	.L9:
 137:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 138:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 139:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 140:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode = ((uint32_t)address) << XMC_I2C_7BIT_ADDR_Pos;
 260              	 .loc 3 140 0
 261 003e BB1C     	 add r3,r7,#2
 262 0040 1B88     	 ldrh r3,[r3]
 263 0042 1A02     	 lsl r2,r3,#8
 264 0044 7B68     	 ldr r3,[r7,#4]
 265 0046 DA63     	 str r2,[r3,#60]
 266              	.L8:
 141:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 142:../Libraries/XMCLib/src/xmc_i2c.c **** }
 267              	 .loc 3 142 0
 268 0048 BD46     	 mov sp,r7
 269 004a 02B0     	 add sp,sp,#8
 270              	 
 271 004c 80BD     	 pop {r7,pc}
 272              	 .cfi_endproc
 273              	.LFE111:
 275 004e C046     	 .section .text.XMC_I2C_CH_GetSlaveAddress,"ax",%progbits
 276              	 .align 2
 277              	 .global XMC_I2C_CH_GetSlaveAddress
 278              	 .code 16
 279              	 .thumb_func
 281              	XMC_I2C_CH_GetSlaveAddress:
 282              	.LFB112:
 143:../Libraries/XMCLib/src/xmc_i2c.c **** /* Read the slave address */
 144:../Libraries/XMCLib/src/xmc_i2c.c **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel)
 145:../Libraries/XMCLib/src/xmc_i2c.c **** {
 283              	 .loc 3 145 0
 284              	 .cfi_startproc
 285 0000 80B5     	 push {r7,lr}
 286              	.LCFI15:
 287              	 .cfi_def_cfa_offset 8
 288              	 .cfi_offset 7,-8
 289              	 .cfi_offset 14,-4
 290 0002 84B0     	 sub sp,sp,#16
 291              	.LCFI16:
 292              	 .cfi_def_cfa_offset 24
 293 0004 00AF     	 add r7,sp,#0
 294              	.LCFI17:
 295              	 .cfi_def_cfa_register 7
 296 0006 7860     	 str r0,[r7,#4]
 146:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t address = channel->PCR_IICMode & (uint32_t)USIC_CH_PCR_IICMode_SLAD_Msk;
 297              	 .loc 3 146 0
 298 0008 7B68     	 ldr r3,[r7,#4]
 299 000a DB6B     	 ldr r3,[r3,#60]
 300 000c 1B04     	 lsl r3,r3,#16
 301 000e 1B0C     	 lsr r3,r3,#16
 302 0010 FB60     	 str r3,[r7,#12]
 147:../Libraries/XMCLib/src/xmc_i2c.c ****   
 148:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((address & 0xffU) == 0U)
 303              	 .loc 3 148 0
 304 0012 FB68     	 ldr r3,[r7,#12]
 305 0014 FF22     	 mov r2,#255
 306 0016 1340     	 and r3,r2
 307 0018 03D1     	 bne .L12
 149:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 150:../Libraries/XMCLib/src/xmc_i2c.c ****     address = address >> XMC_I2C_7BIT_ADDR_Pos;
 308              	 .loc 3 150 0
 309 001a FB68     	 ldr r3,[r7,#12]
 310 001c 1B0A     	 lsr r3,r3,#8
 311 001e FB60     	 str r3,[r7,#12]
 312 0020 09E0     	 b .L13
 313              	.L12:
 151:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 152:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 153:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 154:../Libraries/XMCLib/src/xmc_i2c.c ****     address = (address & 0xffU) | ((address >> 1) & 0x0300U);
 314              	 .loc 3 154 0
 315 0022 FB68     	 ldr r3,[r7,#12]
 316 0024 FF22     	 mov r2,#255
 317 0026 1A40     	 and r2,r3
 318 0028 FB68     	 ldr r3,[r7,#12]
 319 002a 5908     	 lsr r1,r3,#1
 320 002c C023     	 mov r3,#192
 321 002e 9B00     	 lsl r3,r3,#2
 322 0030 0B40     	 and r3,r1
 323 0032 1343     	 orr r3,r2
 324 0034 FB60     	 str r3,[r7,#12]
 325              	.L13:
 155:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 156:../Libraries/XMCLib/src/xmc_i2c.c ****   
 157:../Libraries/XMCLib/src/xmc_i2c.c ****   return (uint16_t)address;
 326              	 .loc 3 157 0
 327 0036 FB68     	 ldr r3,[r7,#12]
 328 0038 9BB2     	 uxth r3,r3
 158:../Libraries/XMCLib/src/xmc_i2c.c **** }
 329              	 .loc 3 158 0
 330 003a 181C     	 mov r0,r3
 331 003c BD46     	 mov sp,r7
 332 003e 04B0     	 add sp,sp,#16
 333              	 
 334 0040 80BD     	 pop {r7,pc}
 335              	 .cfi_endproc
 336              	.LFE112:
 338 0042 C046     	 .section .text.XMC_I2C_CH_SetBaudrate,"ax",%progbits
 339              	 .align 2
 340              	 .global XMC_I2C_CH_SetBaudrate
 341              	 .code 16
 342              	 .thumb_func
 344              	XMC_I2C_CH_SetBaudrate:
 345              	.LFB113:
 159:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the baudrate and oversampling based on standard speed or fast speed */
 160:../Libraries/XMCLib/src/xmc_i2c.c **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate)
 161:../Libraries/XMCLib/src/xmc_i2c.c **** {
 346              	 .loc 3 161 0
 347              	 .cfi_startproc
 348 0000 80B5     	 push {r7,lr}
 349              	.LCFI18:
 350              	 .cfi_def_cfa_offset 8
 351              	 .cfi_offset 7,-8
 352              	 .cfi_offset 14,-4
 353 0002 84B0     	 sub sp,sp,#16
 354              	.LCFI19:
 355              	 .cfi_def_cfa_offset 24
 356 0004 00AF     	 add r7,sp,#0
 357              	.LCFI20:
 358              	 .cfi_def_cfa_register 7
 359 0006 7860     	 str r0,[r7,#4]
 360 0008 3960     	 str r1,[r7]
 162:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_STATUS_t status;
 163:../Libraries/XMCLib/src/xmc_i2c.c ****   
 164:../Libraries/XMCLib/src/xmc_i2c.c ****   status = XMC_I2C_CH_STATUS_ERROR;
 361              	 .loc 3 164 0
 362 000a 0F23     	 mov r3,#15
 363 000c FB18     	 add r3,r7,r3
 364 000e 0122     	 mov r2,#1
 365 0010 1A70     	 strb r2,[r3]
 165:../Libraries/XMCLib/src/xmc_i2c.c ****   
 166:../Libraries/XMCLib/src/xmc_i2c.c ****   if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_STANDARD)
 366              	 .loc 3 166 0
 367 0012 3B68     	 ldr r3,[r7]
 368 0014 1D4A     	 ldr r2,.L22
 369 0016 9342     	 cmp r3,r2
 370 0018 13D8     	 bhi .L16
 167:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 168:../Libraries/XMCLib/src/xmc_i2c.c **** 		channel->PCR_IICMode &= (uint32_t)~USIC_CH_PCR_IICMode_STIM_Msk;
 371              	 .loc 3 168 0
 372 001a 7B68     	 ldr r3,[r7,#4]
 373 001c DB6B     	 ldr r3,[r3,#60]
 374 001e 1C4A     	 ldr r2,.L22+4
 375 0020 1A40     	 and r2,r3
 376 0022 7B68     	 ldr r3,[r7,#4]
 377 0024 DA63     	 str r2,[r3,#60]
 169:../Libraries/XMCLib/src/xmc_i2c.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_STANDARD) ==
 378              	 .loc 3 169 0
 379 0026 7A68     	 ldr r2,[r7,#4]
 380 0028 3B68     	 ldr r3,[r7]
 381 002a 101C     	 mov r0,r2
 382 002c 191C     	 mov r1,r3
 383 002e 0A22     	 mov r2,#10
 384 0030 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 385 0034 031E     	 sub r3,r0,#0
 386 0036 21D1     	 bne .L18
 170:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 171:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_I2C_CH_STATUS_OK;
 387              	 .loc 3 171 0
 388 0038 0F23     	 mov r3,#15
 389 003a FB18     	 add r3,r7,r3
 390 003c 0022     	 mov r2,#0
 391 003e 1A70     	 strb r2,[r3]
 392 0040 1CE0     	 b .L18
 393              	.L16:
 172:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 173:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 174:../Libraries/XMCLib/src/xmc_i2c.c ****   else if (rate <= (uint32_t)XMC_I2C_CH_MAX_SPEED_FAST)
 394              	 .loc 3 174 0
 395 0042 3B68     	 ldr r3,[r7]
 396 0044 134A     	 ldr r2,.L22+8
 397 0046 9342     	 cmp r3,r2
 398 0048 14D8     	 bhi .L19
 175:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 176:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->PCR_IICMode |= (uint32_t)USIC_CH_PCR_IICMode_STIM_Msk;
 399              	 .loc 3 176 0
 400 004a 7B68     	 ldr r3,[r7,#4]
 401 004c DB6B     	 ldr r3,[r3,#60]
 402 004e 8022     	 mov r2,#128
 403 0050 9202     	 lsl r2,r2,#10
 404 0052 1A43     	 orr r2,r3
 405 0054 7B68     	 ldr r3,[r7,#4]
 406 0056 DA63     	 str r2,[r3,#60]
 177:../Libraries/XMCLib/src/xmc_i2c.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, (uint32_t)XMC_I2C_CH_CLOCK_OVERSAMPLING_FAST) == XMC
 407              	 .loc 3 177 0
 408 0058 7A68     	 ldr r2,[r7,#4]
 409 005a 3B68     	 ldr r3,[r7]
 410 005c 101C     	 mov r0,r2
 411 005e 191C     	 mov r1,r3
 412 0060 1922     	 mov r2,#25
 413 0062 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 414 0066 031E     	 sub r3,r0,#0
 415 0068 08D1     	 bne .L18
 178:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 179:../Libraries/XMCLib/src/xmc_i2c.c ****       status = XMC_I2C_CH_STATUS_OK;
 416              	 .loc 3 179 0
 417 006a 0F23     	 mov r3,#15
 418 006c FB18     	 add r3,r7,r3
 419 006e 0022     	 mov r2,#0
 420 0070 1A70     	 strb r2,[r3]
 421 0072 03E0     	 b .L18
 422              	.L19:
 180:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 181:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 182:../Libraries/XMCLib/src/xmc_i2c.c ****   else 
 183:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 184:../Libraries/XMCLib/src/xmc_i2c.c ****     status = XMC_I2C_CH_STATUS_ERROR;
 423              	 .loc 3 184 0
 424 0074 0F23     	 mov r3,#15
 425 0076 FB18     	 add r3,r7,r3
 426 0078 0122     	 mov r2,#1
 427 007a 1A70     	 strb r2,[r3]
 428              	.L18:
 185:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 186:../Libraries/XMCLib/src/xmc_i2c.c ****   
 187:../Libraries/XMCLib/src/xmc_i2c.c ****   return status;
 429              	 .loc 3 187 0
 430 007c 0F23     	 mov r3,#15
 431 007e FB18     	 add r3,r7,r3
 432 0080 1B78     	 ldrb r3,[r3]
 188:../Libraries/XMCLib/src/xmc_i2c.c **** }
 433              	 .loc 3 188 0
 434 0082 181C     	 mov r0,r3
 435 0084 BD46     	 mov sp,r7
 436 0086 04B0     	 add sp,sp,#16
 437              	 
 438 0088 80BD     	 pop {r7,pc}
 439              	.L23:
 440 008a C046     	 .align 2
 441              	.L22:
 442 008c A0860100 	 .word 100000
 443 0090 FFFFFDFF 	 .word -131073
 444 0094 801A0600 	 .word 400000
 445              	 .cfi_endproc
 446              	.LFE113:
 448              	 .section .text.XMC_I2C_CH_MasterStart,"ax",%progbits
 449              	 .align 2
 450              	 .global XMC_I2C_CH_MasterStart
 451              	 .code 16
 452              	 .thumb_func
 454              	XMC_I2C_CH_MasterStart:
 455              	.LFB114:
 189:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master start condition along with read/write command to IN/TBUF register based on FIFO/non
 190:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 191:../Libraries/XMCLib/src/xmc_i2c.c **** {
 456              	 .loc 3 191 0
 457              	 .cfi_startproc
 458 0000 80B5     	 push {r7,lr}
 459              	.LCFI21:
 460              	 .cfi_def_cfa_offset 8
 461              	 .cfi_offset 7,-8
 462              	 .cfi_offset 14,-4
 463 0002 84B0     	 sub sp,sp,#16
 464              	.LCFI22:
 465              	 .cfi_def_cfa_offset 24
 466 0004 00AF     	 add r7,sp,#0
 467              	.LCFI23:
 468              	 .cfi_def_cfa_register 7
 469 0006 7860     	 str r0,[r7,#4]
 470 0008 081C     	 mov r0,r1
 471 000a 111C     	 mov r1,r2
 472 000c BB1C     	 add r3,r7,#2
 473 000e 021C     	 add r2,r0,#0
 474 0010 1A80     	 strh r2,[r3]
 475 0012 7B1C     	 add r3,r7,#1
 476 0014 0A1C     	 add r2,r1,#0
 477 0016 1A70     	 strb r2,[r3]
 192:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t temp;
 193:../Libraries/XMCLib/src/xmc_i2c.c ****   
 194:../Libraries/XMCLib/src/xmc_i2c.c ****   temp = addr | (uint32_t)XMC_I2C_CH_TDF_MASTER_START;
 478              	 .loc 3 194 0
 479 0018 BB1C     	 add r3,r7,#2
 480 001a 1B88     	 ldrh r3,[r3]
 481 001c 8022     	 mov r2,#128
 482 001e D200     	 lsl r2,r2,#3
 483 0020 1343     	 orr r3,r2
 484 0022 9BB2     	 uxth r3,r3
 485 0024 FB60     	 str r3,[r7,#12]
 195:../Libraries/XMCLib/src/xmc_i2c.c ****   if (command == XMC_I2C_CH_CMD_READ)
 486              	 .loc 3 195 0
 487 0026 7B1C     	 add r3,r7,#1
 488 0028 1B78     	 ldrb r3,[r3]
 489 002a 012B     	 cmp r3,#1
 490 002c 03D1     	 bne .L25
 196:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 197:../Libraries/XMCLib/src/xmc_i2c.c ****     temp |= 0x1U;
 491              	 .loc 3 197 0
 492 002e FB68     	 ldr r3,[r7,#12]
 493 0030 0122     	 mov r2,#1
 494 0032 1343     	 orr r3,r2
 495 0034 FB60     	 str r3,[r7,#12]
 496              	.L25:
 198:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 199:../Libraries/XMCLib/src/xmc_i2c.c **** 
 200:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 201:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 497              	 .loc 3 201 0
 498 0036 7A68     	 ldr r2,[r7,#4]
 499 0038 8423     	 mov r3,#132
 500 003a 5B00     	 lsl r3,r3,#1
 501 003c D258     	 ldr r2,[r2,r3]
 502 003e E023     	 mov r3,#224
 503 0040 DB04     	 lsl r3,r3,#19
 504 0042 1340     	 and r3,r2
 505 0044 13D1     	 bne .L26
 202:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 203:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 506              	 .loc 3 203 0
 507 0046 C046     	 mov r8,r8
 508              	.L27:
 509              	 .loc 3 203 0 is_stmt 0 discriminator 1
 510 0048 7B68     	 ldr r3,[r7,#4]
 511 004a 181C     	 mov r0,r3
 512 004c FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 513 0050 031E     	 sub r3,r0,#0
 514 0052 802B     	 cmp r3,#128
 515 0054 F8D0     	 beq .L27
 204:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 205:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 206:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 207:../Libraries/XMCLib/src/xmc_i2c.c **** 
 208:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 209:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 516              	 .loc 3 209 0 is_stmt 1
 517 0056 7A68     	 ldr r2,[r7,#4]
 518 0058 8023     	 mov r3,#128
 519 005a 9B01     	 lsl r3,r3,#6
 520 005c 101C     	 mov r0,r2
 521 005e 191C     	 mov r1,r3
 522 0060 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 210:../Libraries/XMCLib/src/xmc_i2c.c **** 
 211:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = temp;
 523              	 .loc 3 211 0
 524 0064 7B68     	 ldr r3,[r7,#4]
 525 0066 8021     	 mov r1,#128
 526 0068 FA68     	 ldr r2,[r7,#12]
 527 006a 5A50     	 str r2,[r3,r1]
 528 006c 04E0     	 b .L24
 529              	.L26:
 212:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 213:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 214:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 215:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = temp;
 530              	 .loc 3 215 0
 531 006e 7A68     	 ldr r2,[r7,#4]
 532 0070 C023     	 mov r3,#192
 533 0072 5B00     	 lsl r3,r3,#1
 534 0074 F968     	 ldr r1,[r7,#12]
 535 0076 D150     	 str r1,[r2,r3]
 536              	.L24:
 216:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 217:../Libraries/XMCLib/src/xmc_i2c.c **** }
 537              	 .loc 3 217 0
 538 0078 BD46     	 mov sp,r7
 539 007a 04B0     	 add sp,sp,#16
 540              	 
 541 007c 80BD     	 pop {r7,pc}
 542              	 .cfi_endproc
 543              	.LFE114:
 545 007e C046     	 .section .text.XMC_I2C_CH_MasterRepeatedStart,"ax",%progbits
 546              	 .align 2
 547              	 .global XMC_I2C_CH_MasterRepeatedStart
 548              	 .code 16
 549              	 .thumb_func
 551              	XMC_I2C_CH_MasterRepeatedStart:
 552              	.LFB115:
 218:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master repeated start condition along with read/write command to IN/TBUF register based on
 219:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 220:../Libraries/XMCLib/src/xmc_i2c.c **** {
 553              	 .loc 3 220 0
 554              	 .cfi_startproc
 555 0000 80B5     	 push {r7,lr}
 556              	.LCFI24:
 557              	 .cfi_def_cfa_offset 8
 558              	 .cfi_offset 7,-8
 559              	 .cfi_offset 14,-4
 560 0002 84B0     	 sub sp,sp,#16
 561              	.LCFI25:
 562              	 .cfi_def_cfa_offset 24
 563 0004 00AF     	 add r7,sp,#0
 564              	.LCFI26:
 565              	 .cfi_def_cfa_register 7
 566 0006 7860     	 str r0,[r7,#4]
 567 0008 081C     	 mov r0,r1
 568 000a 111C     	 mov r1,r2
 569 000c BB1C     	 add r3,r7,#2
 570 000e 021C     	 add r2,r0,#0
 571 0010 1A80     	 strh r2,[r3]
 572 0012 7B1C     	 add r3,r7,#1
 573 0014 0A1C     	 add r2,r1,#0
 574 0016 1A70     	 strb r2,[r3]
 221:../Libraries/XMCLib/src/xmc_i2c.c ****   uint32_t tmp;
 222:../Libraries/XMCLib/src/xmc_i2c.c ****   tmp = addr | (uint32_t)XMC_I2C_CH_TDF_MASTER_RESTART;
 575              	 .loc 3 222 0
 576 0018 BB1C     	 add r3,r7,#2
 577 001a 1B88     	 ldrh r3,[r3]
 578 001c A022     	 mov r2,#160
 579 001e D200     	 lsl r2,r2,#3
 580 0020 1343     	 orr r3,r2
 581 0022 9BB2     	 uxth r3,r3
 582 0024 FB60     	 str r3,[r7,#12]
 223:../Libraries/XMCLib/src/xmc_i2c.c ****   if (command == XMC_I2C_CH_CMD_READ)
 583              	 .loc 3 223 0
 584 0026 7B1C     	 add r3,r7,#1
 585 0028 1B78     	 ldrb r3,[r3]
 586 002a 012B     	 cmp r3,#1
 587 002c 03D1     	 bne .L30
 224:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 225:../Libraries/XMCLib/src/xmc_i2c.c ****     tmp |= 0x1U;
 588              	 .loc 3 225 0
 589 002e FB68     	 ldr r3,[r7,#12]
 590 0030 0122     	 mov r2,#1
 591 0032 1343     	 orr r3,r2
 592 0034 FB60     	 str r3,[r7,#12]
 593              	.L30:
 226:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 227:../Libraries/XMCLib/src/xmc_i2c.c **** 
 228:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 229:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 594              	 .loc 3 229 0
 595 0036 7A68     	 ldr r2,[r7,#4]
 596 0038 8423     	 mov r3,#132
 597 003a 5B00     	 lsl r3,r3,#1
 598 003c D258     	 ldr r2,[r2,r3]
 599 003e E023     	 mov r3,#224
 600 0040 DB04     	 lsl r3,r3,#19
 601 0042 1340     	 and r3,r2
 602 0044 13D1     	 bne .L31
 230:../Libraries/XMCLib/src/xmc_i2c.c ****   {  
 231:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 603              	 .loc 3 231 0
 604 0046 C046     	 mov r8,r8
 605              	.L32:
 606              	 .loc 3 231 0 is_stmt 0 discriminator 1
 607 0048 7B68     	 ldr r3,[r7,#4]
 608 004a 181C     	 mov r0,r3
 609 004c FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 610 0050 031E     	 sub r3,r0,#0
 611 0052 802B     	 cmp r3,#128
 612 0054 F8D0     	 beq .L32
 232:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 233:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 234:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 235:../Libraries/XMCLib/src/xmc_i2c.c **** 
 236:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 237:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 613              	 .loc 3 237 0 is_stmt 1
 614 0056 7A68     	 ldr r2,[r7,#4]
 615 0058 8023     	 mov r3,#128
 616 005a 9B01     	 lsl r3,r3,#6
 617 005c 101C     	 mov r0,r2
 618 005e 191C     	 mov r1,r3
 619 0060 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 238:../Libraries/XMCLib/src/xmc_i2c.c **** 
 239:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = tmp;
 620              	 .loc 3 239 0
 621 0064 7B68     	 ldr r3,[r7,#4]
 622 0066 8021     	 mov r1,#128
 623 0068 FA68     	 ldr r2,[r7,#12]
 624 006a 5A50     	 str r2,[r3,r1]
 625 006c 04E0     	 b .L29
 626              	.L31:
 240:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 241:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 242:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 243:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = tmp;
 627              	 .loc 3 243 0
 628 006e 7A68     	 ldr r2,[r7,#4]
 629 0070 C023     	 mov r3,#192
 630 0072 5B00     	 lsl r3,r3,#1
 631 0074 F968     	 ldr r1,[r7,#12]
 632 0076 D150     	 str r1,[r2,r3]
 633              	.L29:
 244:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 245:../Libraries/XMCLib/src/xmc_i2c.c **** }
 634              	 .loc 3 245 0
 635 0078 BD46     	 mov sp,r7
 636 007a 04B0     	 add sp,sp,#16
 637              	 
 638 007c 80BD     	 pop {r7,pc}
 639              	 .cfi_endproc
 640              	.LFE115:
 642 007e C046     	 .section .text.XMC_I2C_CH_MasterStop,"ax",%progbits
 643              	 .align 2
 644              	 .global XMC_I2C_CH_MasterStop
 645              	 .code 16
 646              	 .thumb_func
 648              	XMC_I2C_CH_MasterStop:
 649              	.LFB116:
 246:../Libraries/XMCLib/src/xmc_i2c.c **** 
 247:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master stop command to IN/TBUF register based on FIFO/non-FIFO modes. */
 248:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel)
 249:../Libraries/XMCLib/src/xmc_i2c.c **** {
 650              	 .loc 3 249 0
 651              	 .cfi_startproc
 652 0000 80B5     	 push {r7,lr}
 653              	.LCFI27:
 654              	 .cfi_def_cfa_offset 8
 655              	 .cfi_offset 7,-8
 656              	 .cfi_offset 14,-4
 657 0002 82B0     	 sub sp,sp,#8
 658              	.LCFI28:
 659              	 .cfi_def_cfa_offset 16
 660 0004 00AF     	 add r7,sp,#0
 661              	.LCFI29:
 662              	 .cfi_def_cfa_register 7
 663 0006 7860     	 str r0,[r7,#4]
 250:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 251:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 664              	 .loc 3 251 0
 665 0008 7A68     	 ldr r2,[r7,#4]
 666 000a 8423     	 mov r3,#132
 667 000c 5B00     	 lsl r3,r3,#1
 668 000e D258     	 ldr r2,[r2,r3]
 669 0010 E023     	 mov r3,#224
 670 0012 DB04     	 lsl r3,r3,#19
 671 0014 1340     	 and r3,r2
 672 0016 14D1     	 bne .L35
 252:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 253:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 673              	 .loc 3 253 0
 674 0018 C046     	 mov r8,r8
 675              	.L36:
 676              	 .loc 3 253 0 is_stmt 0 discriminator 1
 677 001a 7B68     	 ldr r3,[r7,#4]
 678 001c 181C     	 mov r0,r3
 679 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 680 0022 031E     	 sub r3,r0,#0
 681 0024 802B     	 cmp r3,#128
 682 0026 F8D0     	 beq .L36
 254:../Libraries/XMCLib/src/xmc_i2c.c ****     {
 255:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 256:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 257:../Libraries/XMCLib/src/xmc_i2c.c **** 
 258:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 259:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 683              	 .loc 3 259 0 is_stmt 1
 684 0028 7A68     	 ldr r2,[r7,#4]
 685 002a 8023     	 mov r3,#128
 686 002c 9B01     	 lsl r3,r3,#6
 687 002e 101C     	 mov r0,r2
 688 0030 191C     	 mov r1,r3
 689 0032 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 260:../Libraries/XMCLib/src/xmc_i2c.c **** 
 261:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_STOP;
 690              	 .loc 3 261 0
 691 0036 7B68     	 ldr r3,[r7,#4]
 692 0038 8021     	 mov r1,#128
 693 003a C022     	 mov r2,#192
 694 003c D200     	 lsl r2,r2,#3
 695 003e 5A50     	 str r2,[r3,r1]
 696 0040 05E0     	 b .L34
 697              	.L35:
 262:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 263:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 264:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 265:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0U] = (uint32_t)XMC_I2C_CH_TDF_MASTER_STOP;
 698              	 .loc 3 265 0
 699 0042 7A68     	 ldr r2,[r7,#4]
 700 0044 C023     	 mov r3,#192
 701 0046 5B00     	 lsl r3,r3,#1
 702 0048 C021     	 mov r1,#192
 703 004a C900     	 lsl r1,r1,#3
 704 004c D150     	 str r1,[r2,r3]
 705              	.L34:
 266:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 267:../Libraries/XMCLib/src/xmc_i2c.c **** }
 706              	 .loc 3 267 0
 707 004e BD46     	 mov sp,r7
 708 0050 02B0     	 add sp,sp,#8
 709              	 
 710 0052 80BD     	 pop {r7,pc}
 711              	 .cfi_endproc
 712              	.LFE116:
 714              	 .section .text.XMC_I2C_CH_MasterTransmit,"ax",%progbits
 715              	 .align 2
 716              	 .global XMC_I2C_CH_MasterTransmit
 717              	 .code 16
 718              	 .thumb_func
 720              	XMC_I2C_CH_MasterTransmit:
 721              	.LFB117:
 268:../Libraries/XMCLib/src/xmc_i2c.c **** 
 269:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master send command along with data to IN/TBUF register based on FIFO/non-FIFO modes. */
 270:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data)
 271:../Libraries/XMCLib/src/xmc_i2c.c **** {
 722              	 .loc 3 271 0
 723              	 .cfi_startproc
 724 0000 80B5     	 push {r7,lr}
 725              	.LCFI30:
 726              	 .cfi_def_cfa_offset 8
 727              	 .cfi_offset 7,-8
 728              	 .cfi_offset 14,-4
 729 0002 82B0     	 sub sp,sp,#8
 730              	.LCFI31:
 731              	 .cfi_def_cfa_offset 16
 732 0004 00AF     	 add r7,sp,#0
 733              	.LCFI32:
 734              	 .cfi_def_cfa_register 7
 735 0006 7860     	 str r0,[r7,#4]
 736 0008 0A1C     	 mov r2,r1
 737 000a FB1C     	 add r3,r7,#3
 738 000c 1A70     	 strb r2,[r3]
 272:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 273:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 739              	 .loc 3 273 0
 740 000e 7A68     	 ldr r2,[r7,#4]
 741 0010 8423     	 mov r3,#132
 742 0012 5B00     	 lsl r3,r3,#1
 743 0014 D258     	 ldr r2,[r2,r3]
 744 0016 E023     	 mov r3,#224
 745 0018 DB04     	 lsl r3,r3,#19
 746 001a 1340     	 and r3,r2
 747 001c 14D1     	 bne .L39
 274:../Libraries/XMCLib/src/xmc_i2c.c ****   {    
 275:../Libraries/XMCLib/src/xmc_i2c.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 748              	 .loc 3 275 0
 749 001e C046     	 mov r8,r8
 750              	.L40:
 751              	 .loc 3 275 0 is_stmt 0 discriminator 1
 752 0020 7B68     	 ldr r3,[r7,#4]
 753 0022 181C     	 mov r0,r3
 754 0024 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 755 0028 031E     	 sub r3,r0,#0
 756 002a 802B     	 cmp r3,#128
 757 002c F8D0     	 beq .L40
 276:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 277:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 278:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 279:../Libraries/XMCLib/src/xmc_i2c.c **** 
 280:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 281:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 758              	 .loc 3 281 0 is_stmt 1
 759 002e 7A68     	 ldr r2,[r7,#4]
 760 0030 8023     	 mov r3,#128
 761 0032 9B01     	 lsl r3,r3,#6
 762 0034 101C     	 mov r0,r2
 763 0036 191C     	 mov r1,r3
 764 0038 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 282:../Libraries/XMCLib/src/xmc_i2c.c **** 
 283:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_SEND | data;
 765              	 .loc 3 283 0
 766 003c FB1C     	 add r3,r7,#3
 767 003e 1A78     	 ldrb r2,[r3]
 768 0040 7B68     	 ldr r3,[r7,#4]
 769 0042 8021     	 mov r1,#128
 770 0044 5A50     	 str r2,[r3,r1]
 771 0046 05E0     	 b .L38
 772              	.L39:
 284:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 285:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 286:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 287:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_SEND | data;
 773              	 .loc 3 287 0
 774 0048 FB1C     	 add r3,r7,#3
 775 004a 1978     	 ldrb r1,[r3]
 776 004c 7A68     	 ldr r2,[r7,#4]
 777 004e C023     	 mov r3,#192
 778 0050 5B00     	 lsl r3,r3,#1
 779 0052 D150     	 str r1,[r2,r3]
 780              	.L38:
 288:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 289:../Libraries/XMCLib/src/xmc_i2c.c **** }
 781              	 .loc 3 289 0
 782 0054 BD46     	 mov sp,r7
 783 0056 02B0     	 add sp,sp,#8
 784              	 
 785 0058 80BD     	 pop {r7,pc}
 786              	 .cfi_endproc
 787              	.LFE117:
 789 005a C046     	 .section .text.XMC_I2C_CH_SlaveTransmit,"ax",%progbits
 790              	 .align 2
 791              	 .global XMC_I2C_CH_SlaveTransmit
 792              	 .code 16
 793              	 .thumb_func
 795              	XMC_I2C_CH_SlaveTransmit:
 796              	.LFB118:
 290:../Libraries/XMCLib/src/xmc_i2c.c **** 
 291:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends slave send command along with data to IN/TBUF register based on FIFO/non-FIFO modes. */
 292:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data)
 293:../Libraries/XMCLib/src/xmc_i2c.c **** {
 797              	 .loc 3 293 0
 798              	 .cfi_startproc
 799 0000 80B5     	 push {r7,lr}
 800              	.LCFI33:
 801              	 .cfi_def_cfa_offset 8
 802              	 .cfi_offset 7,-8
 803              	 .cfi_offset 14,-4
 804 0002 82B0     	 sub sp,sp,#8
 805              	.LCFI34:
 806              	 .cfi_def_cfa_offset 16
 807 0004 00AF     	 add r7,sp,#0
 808              	.LCFI35:
 809              	 .cfi_def_cfa_register 7
 810 0006 7860     	 str r0,[r7,#4]
 811 0008 0A1C     	 mov r2,r1
 812 000a FB1C     	 add r3,r7,#3
 813 000c 1A70     	 strb r2,[r3]
 294:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 295:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 814              	 .loc 3 295 0
 815 000e 7A68     	 ldr r2,[r7,#4]
 816 0010 8423     	 mov r3,#132
 817 0012 5B00     	 lsl r3,r3,#1
 818 0014 D258     	 ldr r2,[r2,r3]
 819 0016 E023     	 mov r3,#224
 820 0018 DB04     	 lsl r3,r3,#19
 821 001a 1340     	 and r3,r2
 822 001c 17D1     	 bne .L43
 296:../Libraries/XMCLib/src/xmc_i2c.c ****   {    
 297:../Libraries/XMCLib/src/xmc_i2c.c ****     while(XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 823              	 .loc 3 297 0
 824 001e C046     	 mov r8,r8
 825              	.L44:
 826              	 .loc 3 297 0 is_stmt 0 discriminator 1
 827 0020 7B68     	 ldr r3,[r7,#4]
 828 0022 181C     	 mov r0,r3
 829 0024 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 830 0028 031E     	 sub r3,r0,#0
 831 002a 802B     	 cmp r3,#128
 832 002c F8D0     	 beq .L44
 298:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 299:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 300:../Libraries/XMCLib/src/xmc_i2c.c ****     }    
 301:../Libraries/XMCLib/src/xmc_i2c.c **** 
 302:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 303:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 833              	 .loc 3 303 0 is_stmt 1
 834 002e 7A68     	 ldr r2,[r7,#4]
 835 0030 8023     	 mov r3,#128
 836 0032 9B01     	 lsl r3,r3,#6
 837 0034 101C     	 mov r0,r2
 838 0036 191C     	 mov r1,r3
 839 0038 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 304:../Libraries/XMCLib/src/xmc_i2c.c **** 
 305:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_SLAVE_SEND | data;
 840              	 .loc 3 305 0
 841 003c FB1C     	 add r3,r7,#3
 842 003e 1B78     	 ldrb r3,[r3]
 843 0040 8022     	 mov r2,#128
 844 0042 5200     	 lsl r2,r2,#1
 845 0044 1A43     	 orr r2,r3
 846 0046 7B68     	 ldr r3,[r7,#4]
 847 0048 8021     	 mov r1,#128
 848 004a 5A50     	 str r2,[r3,r1]
 849 004c 09E0     	 b .L42
 850              	.L43:
 306:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 307:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 308:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 309:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_SLAVE_SEND | data;
 851              	 .loc 3 309 0
 852 004e FB1C     	 add r3,r7,#3
 853 0050 1B78     	 ldrb r3,[r3]
 854 0052 8022     	 mov r2,#128
 855 0054 5200     	 lsl r2,r2,#1
 856 0056 1A43     	 orr r2,r3
 857 0058 111C     	 mov r1,r2
 858 005a 7A68     	 ldr r2,[r7,#4]
 859 005c C023     	 mov r3,#192
 860 005e 5B00     	 lsl r3,r3,#1
 861 0060 D150     	 str r1,[r2,r3]
 862              	.L42:
 310:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 311:../Libraries/XMCLib/src/xmc_i2c.c **** }
 863              	 .loc 3 311 0
 864 0062 BD46     	 mov sp,r7
 865 0064 02B0     	 add sp,sp,#8
 866              	 
 867 0066 80BD     	 pop {r7,pc}
 868              	 .cfi_endproc
 869              	.LFE118:
 871              	 .section .text.XMC_I2C_CH_MasterReceiveAck,"ax",%progbits
 872              	 .align 2
 873              	 .global XMC_I2C_CH_MasterReceiveAck
 874              	 .code 16
 875              	 .thumb_func
 877              	XMC_I2C_CH_MasterReceiveAck:
 878              	.LFB119:
 312:../Libraries/XMCLib/src/xmc_i2c.c **** 
 313:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master receive ack command to IN/TBUF register based on FIFO/non-FIFO modes. */
 314:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel)
 315:../Libraries/XMCLib/src/xmc_i2c.c **** {
 879              	 .loc 3 315 0
 880              	 .cfi_startproc
 881 0000 80B5     	 push {r7,lr}
 882              	.LCFI36:
 883              	 .cfi_def_cfa_offset 8
 884              	 .cfi_offset 7,-8
 885              	 .cfi_offset 14,-4
 886 0002 82B0     	 sub sp,sp,#8
 887              	.LCFI37:
 888              	 .cfi_def_cfa_offset 16
 889 0004 00AF     	 add r7,sp,#0
 890              	.LCFI38:
 891              	 .cfi_def_cfa_register 7
 892 0006 7860     	 str r0,[r7,#4]
 316:../Libraries/XMCLib/src/xmc_i2c.c **** /* Check FIFO size */
 317:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 893              	 .loc 3 317 0
 894 0008 7A68     	 ldr r2,[r7,#4]
 895 000a 8423     	 mov r3,#132
 896 000c 5B00     	 lsl r3,r3,#1
 897 000e D258     	 ldr r2,[r2,r3]
 898 0010 E023     	 mov r3,#224
 899 0012 DB04     	 lsl r3,r3,#19
 900 0014 1340     	 and r3,r2
 901 0016 14D1     	 bne .L47
 318:../Libraries/XMCLib/src/xmc_i2c.c ****   {    
 319:../Libraries/XMCLib/src/xmc_i2c.c ****     while(XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 902              	 .loc 3 319 0
 903 0018 C046     	 mov r8,r8
 904              	.L48:
 905              	 .loc 3 319 0 is_stmt 0 discriminator 1
 906 001a 7B68     	 ldr r3,[r7,#4]
 907 001c 181C     	 mov r0,r3
 908 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 909 0022 031E     	 sub r3,r0,#0
 910 0024 802B     	 cmp r3,#128
 911 0026 F8D0     	 beq .L48
 320:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 321:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 322:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 323:../Libraries/XMCLib/src/xmc_i2c.c **** 
 324:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 325:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 912              	 .loc 3 325 0 is_stmt 1
 913 0028 7A68     	 ldr r2,[r7,#4]
 914 002a 8023     	 mov r3,#128
 915 002c 9B01     	 lsl r3,r3,#6
 916 002e 101C     	 mov r0,r2
 917 0030 191C     	 mov r1,r3
 918 0032 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 326:../Libraries/XMCLib/src/xmc_i2c.c **** 
 327:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK;
 919              	 .loc 3 327 0
 920 0036 7B68     	 ldr r3,[r7,#4]
 921 0038 8021     	 mov r1,#128
 922 003a 8022     	 mov r2,#128
 923 003c 9200     	 lsl r2,r2,#2
 924 003e 5A50     	 str r2,[r3,r1]
 925 0040 05E0     	 b .L46
 926              	.L47:
 328:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 329:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 330:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 331:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_ACK;
 927              	 .loc 3 331 0
 928 0042 7A68     	 ldr r2,[r7,#4]
 929 0044 C023     	 mov r3,#192
 930 0046 5B00     	 lsl r3,r3,#1
 931 0048 8021     	 mov r1,#128
 932 004a 8900     	 lsl r1,r1,#2
 933 004c D150     	 str r1,[r2,r3]
 934              	.L46:
 332:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 333:../Libraries/XMCLib/src/xmc_i2c.c **** }
 935              	 .loc 3 333 0
 936 004e BD46     	 mov sp,r7
 937 0050 02B0     	 add sp,sp,#8
 938              	 
 939 0052 80BD     	 pop {r7,pc}
 940              	 .cfi_endproc
 941              	.LFE119:
 943              	 .section .text.XMC_I2C_CH_MasterReceiveNack,"ax",%progbits
 944              	 .align 2
 945              	 .global XMC_I2C_CH_MasterReceiveNack
 946              	 .code 16
 947              	 .thumb_func
 949              	XMC_I2C_CH_MasterReceiveNack:
 950              	.LFB120:
 334:../Libraries/XMCLib/src/xmc_i2c.c **** 
 335:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sends master receive nack command to IN/TBUF register based on FIFO/non-FIFO modes. */
 336:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel)
 337:../Libraries/XMCLib/src/xmc_i2c.c **** {
 951              	 .loc 3 337 0
 952              	 .cfi_startproc
 953 0000 80B5     	 push {r7,lr}
 954              	.LCFI39:
 955              	 .cfi_def_cfa_offset 8
 956              	 .cfi_offset 7,-8
 957              	 .cfi_offset 14,-4
 958 0002 82B0     	 sub sp,sp,#8
 959              	.LCFI40:
 960              	 .cfi_def_cfa_offset 16
 961 0004 00AF     	 add r7,sp,#0
 962              	.LCFI41:
 963              	 .cfi_def_cfa_register 7
 964 0006 7860     	 str r0,[r7,#4]
 338:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 339:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0U)
 965              	 .loc 3 339 0
 966 0008 7A68     	 ldr r2,[r7,#4]
 967 000a 8423     	 mov r3,#132
 968 000c 5B00     	 lsl r3,r3,#1
 969 000e D258     	 ldr r2,[r2,r3]
 970 0010 E023     	 mov r3,#224
 971 0012 DB04     	 lsl r3,r3,#19
 972 0014 1340     	 and r3,r2
 973 0016 14D1     	 bne .L51
 340:../Libraries/XMCLib/src/xmc_i2c.c ****   {    
 341:../Libraries/XMCLib/src/xmc_i2c.c ****     while(XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 974              	 .loc 3 341 0
 975 0018 C046     	 mov r8,r8
 976              	.L52:
 977              	 .loc 3 341 0 is_stmt 0 discriminator 1
 978 001a 7B68     	 ldr r3,[r7,#4]
 979 001c 181C     	 mov r0,r3
 980 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 981 0022 031E     	 sub r3,r0,#0
 982 0024 802B     	 cmp r3,#128
 983 0026 F8D0     	 beq .L52
 342:../Libraries/XMCLib/src/xmc_i2c.c **** 	{
 343:../Libraries/XMCLib/src/xmc_i2c.c ****       /* check TDV, wait until TBUF is ready */
 344:../Libraries/XMCLib/src/xmc_i2c.c ****     }
 345:../Libraries/XMCLib/src/xmc_i2c.c **** 
 346:../Libraries/XMCLib/src/xmc_i2c.c ****     /* clear PSR_TBIF */
 347:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_I2C_CH_ClearStatusFlag(channel, (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 984              	 .loc 3 347 0 is_stmt 1
 985 0028 7A68     	 ldr r2,[r7,#4]
 986 002a 8023     	 mov r3,#128
 987 002c 9B01     	 lsl r3,r3,#6
 988 002e 101C     	 mov r0,r2
 989 0030 191C     	 mov r1,r3
 990 0032 FFF7FEFF 	 bl XMC_I2C_CH_ClearStatusFlag
 348:../Libraries/XMCLib/src/xmc_i2c.c **** 
 349:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->TBUF[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK;
 991              	 .loc 3 349 0
 992 0036 7B68     	 ldr r3,[r7,#4]
 993 0038 8021     	 mov r1,#128
 994 003a C022     	 mov r2,#192
 995 003c 9200     	 lsl r2,r2,#2
 996 003e 5A50     	 str r2,[r3,r1]
 997 0040 05E0     	 b .L50
 998              	.L51:
 350:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 351:../Libraries/XMCLib/src/xmc_i2c.c ****   else 
 352:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 353:../Libraries/XMCLib/src/xmc_i2c.c ****     channel->IN[0] = (uint32_t)XMC_I2C_CH_TDF_MASTER_RECEIVE_NACK;
 999              	 .loc 3 353 0
 1000 0042 7A68     	 ldr r2,[r7,#4]
 1001 0044 C023     	 mov r3,#192
 1002 0046 5B00     	 lsl r3,r3,#1
 1003 0048 C021     	 mov r1,#192
 1004 004a 8900     	 lsl r1,r1,#2
 1005 004c D150     	 str r1,[r2,r3]
 1006              	.L50:
 354:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 355:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1007              	 .loc 3 355 0
 1008 004e BD46     	 mov sp,r7
 1009 0050 02B0     	 add sp,sp,#8
 1010              	 
 1011 0052 80BD     	 pop {r7,pc}
 1012              	 .cfi_endproc
 1013              	.LFE120:
 1015              	 .section .text.XMC_I2C_CH_GetReceivedData,"ax",%progbits
 1016              	 .align 2
 1017              	 .global XMC_I2C_CH_GetReceivedData
 1018              	 .code 16
 1019              	 .thumb_func
 1021              	XMC_I2C_CH_GetReceivedData:
 1022              	.LFB121:
 356:../Libraries/XMCLib/src/xmc_i2c.c **** 
 357:../Libraries/XMCLib/src/xmc_i2c.c **** /* Reads the data from RBUF if FIFO size is 0 otherwise from OUTR. */
 358:../Libraries/XMCLib/src/xmc_i2c.c **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel)
 359:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1023              	 .loc 3 359 0
 1024              	 .cfi_startproc
 1025 0000 80B5     	 push {r7,lr}
 1026              	.LCFI42:
 1027              	 .cfi_def_cfa_offset 8
 1028              	 .cfi_offset 7,-8
 1029              	 .cfi_offset 14,-4
 1030 0002 84B0     	 sub sp,sp,#16
 1031              	.LCFI43:
 1032              	 .cfi_def_cfa_offset 24
 1033 0004 00AF     	 add r7,sp,#0
 1034              	.LCFI44:
 1035              	 .cfi_def_cfa_register 7
 1036 0006 7860     	 str r0,[r7,#4]
 360:../Libraries/XMCLib/src/xmc_i2c.c ****   uint8_t retval;
 361:../Libraries/XMCLib/src/xmc_i2c.c **** 
 362:../Libraries/XMCLib/src/xmc_i2c.c ****   /* Check FIFO size */
 363:../Libraries/XMCLib/src/xmc_i2c.c ****   if ((channel->RBCTR & USIC_CH_RBCTR_SIZE_Msk) == 0U)
 1037              	 .loc 3 363 0
 1038 0008 7A68     	 ldr r2,[r7,#4]
 1039 000a 8623     	 mov r3,#134
 1040 000c 5B00     	 lsl r3,r3,#1
 1041 000e D258     	 ldr r2,[r2,r3]
 1042 0010 E023     	 mov r3,#224
 1043 0012 DB04     	 lsl r3,r3,#19
 1044 0014 1340     	 and r3,r2
 1045 0016 05D1     	 bne .L55
 364:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 365:../Libraries/XMCLib/src/xmc_i2c.c ****     retval = (uint8_t)channel->RBUF;
 1046              	 .loc 3 365 0
 1047 0018 7B68     	 ldr r3,[r7,#4]
 1048 001a 5A6D     	 ldr r2,[r3,#84]
 1049 001c 0F23     	 mov r3,#15
 1050 001e FB18     	 add r3,r7,r3
 1051 0020 1A70     	 strb r2,[r3]
 1052 0022 06E0     	 b .L56
 1053              	.L55:
 366:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 367:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 368:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 369:../Libraries/XMCLib/src/xmc_i2c.c ****     retval = (uint8_t)channel->OUTR;
 1054              	 .loc 3 369 0
 1055 0024 7A68     	 ldr r2,[r7,#4]
 1056 0026 8E23     	 mov r3,#142
 1057 0028 5B00     	 lsl r3,r3,#1
 1058 002a D258     	 ldr r2,[r2,r3]
 1059 002c 0F23     	 mov r3,#15
 1060 002e FB18     	 add r3,r7,r3
 1061 0030 1A70     	 strb r2,[r3]
 1062              	.L56:
 370:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 371:../Libraries/XMCLib/src/xmc_i2c.c **** 
 372:../Libraries/XMCLib/src/xmc_i2c.c ****   return retval;
 1063              	 .loc 3 372 0
 1064 0032 0F23     	 mov r3,#15
 1065 0034 FB18     	 add r3,r7,r3
 1066 0036 1B78     	 ldrb r3,[r3]
 373:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1067              	 .loc 3 373 0
 1068 0038 181C     	 mov r0,r3
 1069 003a BD46     	 mov sp,r7
 1070 003c 04B0     	 add sp,sp,#16
 1071              	 
 1072 003e 80BD     	 pop {r7,pc}
 1073              	 .cfi_endproc
 1074              	.LFE121:
 1076              	 .section .text.XMC_I2C_CH_Stop,"ax",%progbits
 1077              	 .align 2
 1078              	 .global XMC_I2C_CH_Stop
 1079              	 .code 16
 1080              	 .thumb_func
 1082              	XMC_I2C_CH_Stop:
 1083              	.LFB122:
 374:../Libraries/XMCLib/src/xmc_i2c.c **** 
 375:../Libraries/XMCLib/src/xmc_i2c.c **** /* Sets the operating mode of USIC to IDLE */
 376:../Libraries/XMCLib/src/xmc_i2c.c **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel)
 377:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1084              	 .loc 3 377 0
 1085              	 .cfi_startproc
 1086 0000 80B5     	 push {r7,lr}
 1087              	.LCFI45:
 1088              	 .cfi_def_cfa_offset 8
 1089              	 .cfi_offset 7,-8
 1090              	 .cfi_offset 14,-4
 1091 0002 84B0     	 sub sp,sp,#16
 1092              	.LCFI46:
 1093              	 .cfi_def_cfa_offset 24
 1094 0004 00AF     	 add r7,sp,#0
 1095              	.LCFI47:
 1096              	 .cfi_def_cfa_register 7
 1097 0006 7860     	 str r0,[r7,#4]
 378:../Libraries/XMCLib/src/xmc_i2c.c ****   XMC_I2C_CH_STATUS_t status = XMC_I2C_CH_STATUS_OK;
 1098              	 .loc 3 378 0
 1099 0008 0F23     	 mov r3,#15
 1100 000a FB18     	 add r3,r7,r3
 1101 000c 0022     	 mov r2,#0
 1102 000e 1A70     	 strb r2,[r3]
 379:../Libraries/XMCLib/src/xmc_i2c.c **** 
 380:../Libraries/XMCLib/src/xmc_i2c.c ****   if (((uint32_t)XMC_USIC_CH_GetTransmitBufferStatus(channel) & (uint32_t)XMC_USIC_CH_TBUF_STATUS_B
 1103              	 .loc 3 380 0
 1104 0010 7B68     	 ldr r3,[r7,#4]
 1105 0012 181C     	 mov r0,r3
 1106 0014 FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 1107 0018 031C     	 mov r3,r0
 1108 001a DBB2     	 uxtb r3,r3
 1109 001c 5BB2     	 sxtb r3,r3
 1110 001e 002B     	 cmp r3,#0
 1111 0020 04DA     	 bge .L59
 381:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 382:../Libraries/XMCLib/src/xmc_i2c.c ****     status = XMC_I2C_CH_STATUS_BUSY;
 1112              	 .loc 3 382 0
 1113 0022 0F23     	 mov r3,#15
 1114 0024 FB18     	 add r3,r7,r3
 1115 0026 0222     	 mov r2,#2
 1116 0028 1A70     	 strb r2,[r3]
 1117 002a 04E0     	 b .L60
 1118              	.L59:
 383:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 384:../Libraries/XMCLib/src/xmc_i2c.c ****   else
 385:../Libraries/XMCLib/src/xmc_i2c.c ****   {
 386:../Libraries/XMCLib/src/xmc_i2c.c ****     /* USIC channel in IDLE mode */
 387:../Libraries/XMCLib/src/xmc_i2c.c ****     XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_IDLE);
 1119              	 .loc 3 387 0
 1120 002c 7B68     	 ldr r3,[r7,#4]
 1121 002e 181C     	 mov r0,r3
 1122 0030 0021     	 mov r1,#0
 1123 0032 FFF7FEFF 	 bl XMC_USIC_CH_SetMode
 1124              	.L60:
 388:../Libraries/XMCLib/src/xmc_i2c.c ****   }
 389:../Libraries/XMCLib/src/xmc_i2c.c ****   return status;
 1125              	 .loc 3 389 0
 1126 0036 0F23     	 mov r3,#15
 1127 0038 FB18     	 add r3,r7,r3
 1128 003a 1B78     	 ldrb r3,[r3]
 390:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1129              	 .loc 3 390 0
 1130 003c 181C     	 mov r0,r3
 1131 003e BD46     	 mov sp,r7
 1132 0040 04B0     	 add sp,sp,#16
 1133              	 
 1134 0042 80BD     	 pop {r7,pc}
 1135              	 .cfi_endproc
 1136              	.LFE122:
 1138              	 .section .text.XMC_I2C_CH_EnableEvent,"ax",%progbits
 1139              	 .align 2
 1140              	 .global XMC_I2C_CH_EnableEvent
 1141              	 .code 16
 1142              	 .thumb_func
 1144              	XMC_I2C_CH_EnableEvent:
 1145              	.LFB123:
 391:../Libraries/XMCLib/src/xmc_i2c.c **** 
 392:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 393:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1146              	 .loc 3 393 0
 1147              	 .cfi_startproc
 1148 0000 80B5     	 push {r7,lr}
 1149              	.LCFI48:
 1150              	 .cfi_def_cfa_offset 8
 1151              	 .cfi_offset 7,-8
 1152              	 .cfi_offset 14,-4
 1153 0002 82B0     	 sub sp,sp,#8
 1154              	.LCFI49:
 1155              	 .cfi_def_cfa_offset 16
 1156 0004 00AF     	 add r7,sp,#0
 1157              	.LCFI50:
 1158              	 .cfi_def_cfa_register 7
 1159 0006 7860     	 str r0,[r7,#4]
 1160 0008 3960     	 str r1,[r7]
 394:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR |= (event&0x1fc00U);
 1161              	 .loc 3 394 0
 1162 000a 7B68     	 ldr r3,[r7,#4]
 1163 000c 1A6C     	 ldr r2,[r3,#64]
 1164 000e 3968     	 ldr r1,[r7]
 1165 0010 FE23     	 mov r3,#254
 1166 0012 5B02     	 lsl r3,r3,#9
 1167 0014 0B40     	 and r3,r1
 1168 0016 1A43     	 orr r2,r3
 1169 0018 7B68     	 ldr r3,[r7,#4]
 1170 001a 1A64     	 str r2,[r3,#64]
 395:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PCR_IICMode |= ((event) & 0x41fc0000U);
 1171              	 .loc 3 395 0
 1172 001c 7B68     	 ldr r3,[r7,#4]
 1173 001e DA6B     	 ldr r2,[r3,#60]
 1174 0020 3B68     	 ldr r3,[r7]
 1175 0022 0449     	 ldr r1,.L63
 1176 0024 0B40     	 and r3,r1
 1177 0026 1A43     	 orr r2,r3
 1178 0028 7B68     	 ldr r3,[r7,#4]
 1179 002a DA63     	 str r2,[r3,#60]
 396:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1180              	 .loc 3 396 0
 1181 002c BD46     	 mov sp,r7
 1182 002e 02B0     	 add sp,sp,#8
 1183              	 
 1184 0030 80BD     	 pop {r7,pc}
 1185              	.L64:
 1186 0032 C046     	 .align 2
 1187              	.L63:
 1188 0034 0000FC41 	 .word 1107034112
 1189              	 .cfi_endproc
 1190              	.LFE123:
 1192              	 .section .text.XMC_I2C_CH_DisableEvent,"ax",%progbits
 1193              	 .align 2
 1194              	 .global XMC_I2C_CH_DisableEvent
 1195              	 .code 16
 1196              	 .thumb_func
 1198              	XMC_I2C_CH_DisableEvent:
 1199              	.LFB124:
 397:../Libraries/XMCLib/src/xmc_i2c.c **** 
 398:../Libraries/XMCLib/src/xmc_i2c.c **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 399:../Libraries/XMCLib/src/xmc_i2c.c **** {
 1200              	 .loc 3 399 0
 1201              	 .cfi_startproc
 1202 0000 80B5     	 push {r7,lr}
 1203              	.LCFI51:
 1204              	 .cfi_def_cfa_offset 8
 1205              	 .cfi_offset 7,-8
 1206              	 .cfi_offset 14,-4
 1207 0002 82B0     	 sub sp,sp,#8
 1208              	.LCFI52:
 1209              	 .cfi_def_cfa_offset 16
 1210 0004 00AF     	 add r7,sp,#0
 1211              	.LCFI53:
 1212              	 .cfi_def_cfa_register 7
 1213 0006 7860     	 str r0,[r7,#4]
 1214 0008 3960     	 str r1,[r7]
 400:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->CCR &= (uint32_t)~(event&0x1fc00U);
 1215              	 .loc 3 400 0
 1216 000a 7B68     	 ldr r3,[r7,#4]
 1217 000c 1B6C     	 ldr r3,[r3,#64]
 1218 000e 3968     	 ldr r1,[r7]
 1219 0010 FE22     	 mov r2,#254
 1220 0012 5202     	 lsl r2,r2,#9
 1221 0014 0A40     	 and r2,r1
 1222 0016 D243     	 mvn r2,r2
 1223 0018 1A40     	 and r2,r3
 1224 001a 7B68     	 ldr r3,[r7,#4]
 1225 001c 1A64     	 str r2,[r3,#64]
 401:../Libraries/XMCLib/src/xmc_i2c.c ****   channel->PCR_IICMode &= (uint32_t)~((event) & 0x41fc0000U);
 1226              	 .loc 3 401 0
 1227 001e 7B68     	 ldr r3,[r7,#4]
 1228 0020 DB6B     	 ldr r3,[r3,#60]
 1229 0022 3A68     	 ldr r2,[r7]
 1230 0024 0449     	 ldr r1,.L66
 1231 0026 0A40     	 and r2,r1
 1232 0028 D243     	 mvn r2,r2
 1233 002a 1A40     	 and r2,r3
 1234 002c 7B68     	 ldr r3,[r7,#4]
 1235 002e DA63     	 str r2,[r3,#60]
 402:../Libraries/XMCLib/src/xmc_i2c.c **** }
 1236              	 .loc 3 402 0
 1237 0030 BD46     	 mov sp,r7
 1238 0032 02B0     	 add sp,sp,#8
 1239              	 
 1240 0034 80BD     	 pop {r7,pc}
 1241              	.L67:
 1242 0036 C046     	 .align 2
 1243              	.L66:
 1244 0038 0000FC41 	 .word 1107034112
 1245              	 .cfi_endproc
 1246              	.LFE124:
 1248              	 .text
 1249              	.Letext0:
 1250              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1251              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_i2c.c
    {standard input}:18     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:22     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:56     .text.XMC_USIC_CH_SetMode:00000000 $t
    {standard input}:60     .text.XMC_USIC_CH_SetMode:00000000 XMC_USIC_CH_SetMode
    {standard input}:99     .text.XMC_I2C_CH_ClearStatusFlag:00000000 $t
    {standard input}:103    .text.XMC_I2C_CH_ClearStatusFlag:00000000 XMC_I2C_CH_ClearStatusFlag
    {standard input}:137    .text.XMC_I2C_CH_Init:00000000 $t
    {standard input}:142    .text.XMC_I2C_CH_Init:00000000 XMC_I2C_CH_Init
    {standard input}:214    .text.XMC_I2C_CH_SetSlaveAddress:00000000 XMC_I2C_CH_SetSlaveAddress
    {standard input}:344    .text.XMC_I2C_CH_SetBaudrate:00000000 XMC_I2C_CH_SetBaudrate
    {standard input}:204    .text.XMC_I2C_CH_Init:00000050 $d
    {standard input}:209    .text.XMC_I2C_CH_SetSlaveAddress:00000000 $t
    {standard input}:276    .text.XMC_I2C_CH_GetSlaveAddress:00000000 $t
    {standard input}:281    .text.XMC_I2C_CH_GetSlaveAddress:00000000 XMC_I2C_CH_GetSlaveAddress
    {standard input}:339    .text.XMC_I2C_CH_SetBaudrate:00000000 $t
    {standard input}:442    .text.XMC_I2C_CH_SetBaudrate:0000008c $d
    {standard input}:449    .text.XMC_I2C_CH_MasterStart:00000000 $t
    {standard input}:454    .text.XMC_I2C_CH_MasterStart:00000000 XMC_I2C_CH_MasterStart
    {standard input}:546    .text.XMC_I2C_CH_MasterRepeatedStart:00000000 $t
    {standard input}:551    .text.XMC_I2C_CH_MasterRepeatedStart:00000000 XMC_I2C_CH_MasterRepeatedStart
    {standard input}:643    .text.XMC_I2C_CH_MasterStop:00000000 $t
    {standard input}:648    .text.XMC_I2C_CH_MasterStop:00000000 XMC_I2C_CH_MasterStop
    {standard input}:715    .text.XMC_I2C_CH_MasterTransmit:00000000 $t
    {standard input}:720    .text.XMC_I2C_CH_MasterTransmit:00000000 XMC_I2C_CH_MasterTransmit
    {standard input}:790    .text.XMC_I2C_CH_SlaveTransmit:00000000 $t
    {standard input}:795    .text.XMC_I2C_CH_SlaveTransmit:00000000 XMC_I2C_CH_SlaveTransmit
    {standard input}:872    .text.XMC_I2C_CH_MasterReceiveAck:00000000 $t
    {standard input}:877    .text.XMC_I2C_CH_MasterReceiveAck:00000000 XMC_I2C_CH_MasterReceiveAck
    {standard input}:944    .text.XMC_I2C_CH_MasterReceiveNack:00000000 $t
    {standard input}:949    .text.XMC_I2C_CH_MasterReceiveNack:00000000 XMC_I2C_CH_MasterReceiveNack
    {standard input}:1016   .text.XMC_I2C_CH_GetReceivedData:00000000 $t
    {standard input}:1021   .text.XMC_I2C_CH_GetReceivedData:00000000 XMC_I2C_CH_GetReceivedData
    {standard input}:1077   .text.XMC_I2C_CH_Stop:00000000 $t
    {standard input}:1082   .text.XMC_I2C_CH_Stop:00000000 XMC_I2C_CH_Stop
    {standard input}:1139   .text.XMC_I2C_CH_EnableEvent:00000000 $t
    {standard input}:1144   .text.XMC_I2C_CH_EnableEvent:00000000 XMC_I2C_CH_EnableEvent
    {standard input}:1188   .text.XMC_I2C_CH_EnableEvent:00000034 $d
    {standard input}:1193   .text.XMC_I2C_CH_DisableEvent:00000000 $t
    {standard input}:1198   .text.XMC_I2C_CH_DisableEvent:00000000 XMC_I2C_CH_DisableEvent
    {standard input}:1244   .text.XMC_I2C_CH_DisableEvent:00000038 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_Enable
XMC_USIC_CH_SetBaudrate
